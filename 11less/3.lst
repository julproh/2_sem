     1                                  %include "st_io.inc"
     1                              <1> ;; File stud_io.inc for Linux O.S.
     2                              <1> ;; Copyright (c) Andrey Vikt. Stolyarov, 2009.
     3                              <1> ;; I, the author, hereby grant everyone the right to use this
     4                              <1> ;; file for any purpose, in any manner, in it's original or
     5                              <1> ;; modified form, provided that any modified versions are
     6                              <1> ;; clearly marked as such.
     7                              <1> ;; file changed, macros added (by Divari I.N.,
     8                              <1> ;; Department of computer science, MIPT, 2019-2020) 
     9                              <1> 
    10                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    11                              <1> ;; system dependend part
    12                              <1> 
    13                              <1> ; generic 3-param syscall
    14                              <1> %macro _syscall_3 4
    15                              <1> 	push edx
    16                              <1> 	push ecx
    17                              <1> 	push ebx ; it is senseless to save eax as it holds the return
    18                              <1> 	push %1
    19                              <1> 	push %2
    20                              <1> 	push %3
    21                              <1> 	push %4
    22                              <1> 	pop edx
    23                              <1> 	pop ecx
    24                              <1> 	pop ebx
    25                              <1> 	pop eax 
    26                              <1> 	int 0x80
    27                              <1> 	pop ebx
    28                              <1> 	pop ecx
    29                              <1> 	pop edx
    30                              <1> %endmacro
    31                              <1> 
    32                              <1> ; syscall_exit is the only syscall we use that has 1 parameter
    33                              <1> %macro _syscall_exit 1
    34                              <1> 	mov ebx, %1	; exit code
    35                              <1> 	mov eax, 1	; 1 = sys_exit
    36                              <1> 	int 0x80
    37                              <1> %endmacro
    38                              <1> 
    39                              <1> ;; system dependent part ends here
    40                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    41                              <1> 
    42                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    43                              <1> ; output: eax: read bytes
    44                              <1> %macro _syscall_read 3
    45                              <1> 	_syscall_3 3,%1,%2,%3
    46                              <1> %endmacro
    47                              <1> 
    48                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    49                              <1> ; output: eax: written bytes
    50                              <1> %macro _syscall_write 3
    51                              <1> 	_syscall_3 4,%1,%2,%3
    52                              <1> %endmacro
    53                              <1> 
    54                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    55                              <1> %macro 	PRINT 1
    56                              <1> 	pusha
    57                              <1> 	pushf
    58                              <1> 	jmp %%astr
    59                              <1> %%str	db	%1, 0
    60                              <1> %%strln	equ	$-%%str
    61                              <1> %%astr:	_syscall_write 1, %%str, %%strln
    62                              <1> 	popf
    63                              <1> 	popa
    64                              <1> %endmacro
    65                              <1> 
    66                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    67                              <1> %macro	PUTCHAR 1
    68                              <1> 	pusha
    69                              <1> 	pushf
    70                              <1> %ifstr %1
    71                              <1> 	mov	al, %1
    72                              <1> %elifnum %1
    73                              <1> 	mov	al, %1
    74                              <1> %elifidni %1,al
    75                              <1> 	nop
    76                              <1> %elifidni %1,ah
    77                              <1> 	mov	al, ah
    78                              <1> %elifidni %1,bl
    79                              <1> 	mov	al, bl
    80                              <1> %elifidni %1,bh
    81                              <1> 	mov	al, bh
    82                              <1> %elifidni %1,cl
    83                              <1> 	mov	al, cl
    84                              <1> %elifidni %1,ch
    85                              <1> 	mov	al, ch
    86                              <1> %elifidni %1,dl
    87                              <1> 	mov	al, dl
    88                              <1> %elifidni %1,dh
    89                              <1> 	mov	al, dh
    90                              <1> %else
    91                              <1> 	mov	al, %1  ; let's hope it is a memory location such as [var]
    92                              <1> %endif
    93                              <1> 	sub	esp, 2  ; reserve memory for buffer
    94                              <1> 	mov	edi, esp
    95                              <1> 	mov	[edi], al
    96                              <1> 	_syscall_write 1, edi, 1
    97                              <1> 	add	esp, 2
    98                              <1> 	popf
    99                              <1> 	popa
   100                              <1> %endmacro
   101                              <1> 
   102                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   103                              <1> %macro	GETCHAR 0
   104                              <1> 	pushf
   105                              <1> 	push	edi
   106                              <1> 	sub	esp, 2
   107                              <1> 	mov	edi, esp
   108                              <1> 	_syscall_read 0, edi, 1
   109                              <1> 	cmp	eax, 1
   110                              <1> 	jne	%%eof_reached
   111                              <1> 	xor	eax,eax
   112                              <1> 	mov	al, [edi]
   113                              <1> 	jmp	%%gcquit
   114                              <1> %%eof_reached:
   115                              <1> 	xor	eax, eax
   116                              <1> 	not	eax 		; eax := -1
   117                              <1> %%gcquit:
   118                              <1> 	add	esp, 2
   119                              <1> 	pop	edi
   120                              <1> 	popf
   121                              <1> %endmacro
   122                              <1> 
   123                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   124                              <1> %macro FINISH 0-1 0
   125                              <1> 	_syscall_exit %1
   126                              <1> %endmacro
   127                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   128                              <1> %macro UNSINT 1
   129                              <1> pusha
   130                              <1> pushf
   131                              <1> push dword %1
   132                              <1> pop eax
   133                              <1> mov edi,eax
   134                              <1> mov esi,10
   135                              <1>   xor ebx,ebx
   136                              <1> %%m1:
   137                              <1>    xor edx,edx
   138                              <1>    div esi
   139                              <1>    inc ebx
   140                              <1>    cmp eax,0
   141                              <1>    jne %%m1
   142                              <1>     
   143                              <1>    mov eax,1
   144                              <1>    mov ecx,ebx
   145                              <1>    dec ecx
   146                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   147                              <1>     cmp ecx,0
   148                              <1>      je %%m4
   149                              <1> %%m2:  mul esi
   150                              <1>        loop %%m2
   151                              <1> 
   152                              <1>        mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:       
   155                              <1>       mov eax,edi 
   156                              <1>       xor edx,edx 
   157                              <1>       div ebx
   158                              <1>       add al,'0'
   159                              <1>       PUTCHAR al
   160                              <1>       mov edi,edx
   161                              <1>       xor edx,edx
   162                              <1>       mov eax,ebx
   163                              <1>       div esi
   164                              <1>       cmp eax,1
   165                              <1>       je %%m4
   166                              <1>       mov ebx,eax
   167                              <1>       jmp %%m3
   168                              <1>  %%m4:      
   169                              <1>       mov edx,edi
   170                              <1>       add dl,'0'
   171                              <1>       PUTCHAR dl
   172                              <1>        
   173                              <1>   
   174                              <1> popf
   175                              <1> popa
   176                              <1> %endmacro
   177                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   178                              <1> %macro SIGNINT 1
   179                              <1> pusha
   180                              <1> pushf
   181                              <1> push dword %1
   182                              <1> pop eax
   183                              <1>     cmp eax,0
   184                              <1>     jge %%m5
   185                              <1>     PUTCHAR '-'
   186                              <1>     neg eax
   187                              <1> %%m5:
   188                              <1>       UNSINT eax
   189                              <1> popf
   190                              <1> popa
   191                              <1> %endmacro
   192                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   193                              <1> %macro GETUN 1
   194                              <1> pushad
   195                              <1> pushfd
   196                              <1> ;;;;;;;;;;;;;;;;;;;;;;
   197                              <1> xor edi,edi
   198                              <1> xor esi,esi
   199                              <1> %%m1:
   200                              <1> GETCHAR
   201                              <1> cmp al,0xA
   202                              <1> je %%m2
   203                              <1> cmp al,'0'
   204                              <1> jb %%m_err
   205                              <1> cmp al,'9'
   206                              <1> ja %%m_err
   207                              <1> inc edi
   208                              <1> xor ecx,ecx
   209                              <1> mov cl,al
   210                              <1> mov eax,esi
   211                              <1> mov ebx,10
   212                              <1> mul ebx
   213                              <1> sub cl,48
   214                              <1> add eax,ecx
   215                              <1> jc %%m3
   216                              <1> mov esi,eax
   217                              <1> jmp %%m1
   218                              <1> %%m2: 
   219                              <1> cmp edi,0
   220                              <1> je %%m1
   221                              <1> jmp %%m4
   222                              <1> %%m3: PRINT "too big number"
   223                              <1> PUTCHAR 10
   224                              <1> jmp %%m4
   225                              <1> %%m_err: PRINT "ERROR!!!"
   226                              <1> PUTCHAR 0xa
   227                              <1> %%m4:
   228                              <1> ;;;;;;;;;;;;;;;;;;
   229                              <1> push esi
   230                              <1> add esp,4
   231                              <1> popfd
   232                              <1> popad
   233                              <1> sub esp,40
   234                              <1> pop dword %1
   235                              <1> add esp,36
   236                              <1> %endmacro
   237                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   238                              <1> %macro GETSIG 1
   239                              <1> pushad
   240                              <1> pushfd
   241                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   242                              <1> xor edi,edi
   243                              <1> xor esi,esi
   244                              <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   246                              <1> cmp al,0xa
   247                              <1> je %%m_st1
   248                              <1> cmp al,'-'
   249                              <1> jne %%s1
   250                              <1> mov ebx,-10
   251                              <1> push ebx
   252                              <1> GETCHAR
   253                              <1> cmp al,0xa
   254                              <1> je %%m_err
   255                              <1> jmp %%m_st21
   256                              <1> %%s1: push ebx 
   257                              <1> cmp al,'+'
   258                              <1> jne %%m_st21
   259                              <1> GETCHAR 
   260                              <1> cmp al,0xa
   261                              <1> je %%m_err
   262                              <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   264                              <1> %%m_st21:  cmp al,0xa
   265                              <1> je %%pr_end
   266                              <1> cmp al,'0'
   267                              <1> jb %%m_err
   268                              <1> cmp al,'9'
   269                              <1> ja %%m_err
   270                              <1> inc edi
   271                              <1> xor ecx,ecx
   272                              <1> mov cl,al
   273                              <1> mov eax,esi
   274                              <1> imul ebx
   275                              <1> sub cl,48
   276                              <1> cmp dword[esp],-10
   277                              <1> je %%j_s
   278                              <1> add eax,ecx
   279                              <1> jmp %%j_per
   280                              <1> %%j_s: sub eax,ecx
   281                              <1> %%j_per: jo %%m_b
   282                              <1> mov esi,eax
   283                              <1> cmp dword[esp],-10
   284                              <1> jne %%m_st2
   285                              <1> neg esi
   286                              <1> jmp %%m_st2
   287                              <1> %%pr_end:  cmp edi,0
   288                              <1> je %%m_st2
   289                              <1> jmp %%m_k
   290                              <1> ;;;;;;;;;
   291                              <1> %%m_err: pop ebx 
   292                              <1> PRINT "ERROR"
   293                              <1> PUTCHAR 0xa
   294                              <1> jmp %%m_end
   295                              <1> %%m_b: pop ebx 
   296                              <1> cmp ebx,-10
   297                              <1> je  %%m_l
   298                              <1> PRINT "too big"
   299                              <1> PUTCHAR 0xa
   300                              <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   302                              <1> PUTCHAR 0xa
   303                              <1> jmp %%m_end
   304                              <1> %%m_k: pop ebx
   305                              <1> cmp ebx,-10
   306                              <1> jne %%m_p
   307                              <1> neg esi 
   308                              <1> %%m_p: 
   309                              <1> 
   310                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   311                              <1> 
   312                              <1> push esi
   313                              <1> add esp,4
   314                              <1> popfd
   315                              <1> popad
   316                              <1> sub esp,40
   317                              <1> pop dword %1
   318                              <1> add esp,36
   319                              <1> jmp %%mm_e
   320                              <1> %%m_end:
   321                              <1> popfd
   322                              <1> popad
   323                              <1> %%mm_e:
   324                              <1> %endmacro
   325                              <1> 
   326                              <1> 
   327                              <1> 
   328                              <1> 
     2                                  
     3                                  global _start
     4                                  section .text
     5                                  section .bss
     6                                  section .data
     7 00000000 BE                      per db 10111110b
     8 00000001 E0                      a db 11100000b
     9 00000002 18                      b db 00011000b
    10 00000003 07                      c db 111b
    11                                  _start:
    12 00000004 A0[01000000]            mov al, [a]
    13 00000009 8A1D[02000000]          mov bl, [b]
    14 0000000F 8A0D[03000000]          mov cl, [c]
    15 00000015 8A15[00000000]          mov dl, [per]
    16 0000001B 20D0                    and al, dl
    17 0000001D 20D3                    and bl, dl
    18 0000001F 20D1                    and cl, dl
    19                                  
    20 00000021 C0E805                  shr al,5
    21 00000024 C0EB03                  shr bl, 3
    22                                  
    23 00000027 88C2                    mov dl, al
    24 00000029 88D8                    mov al, bl
    25 0000002B 88D3                    mov bl, dl
    26                                  
    27 0000002D 38D8                    cmp al, bl
    28 0000002F 7402                    je l
    29 00000031 EB22                    jmp t
    30                                  
    31                                  l:
    32                                  PRINT "SAME"
    32 00000033 60                  <1>  pusha
    32 00000034 9C                  <1>  pushf
    32 00000035 EB05                <1>  jmp %%astr
    32 00000037 53414D4500          <1> %%str db %1, 0
    32                              <1> %%strln equ $-%%str
    32                              <1> %%astr: _syscall_write 1, %%str, %%strln
    32                              <2> ..@4.astr: 
    32                              <2>  _syscall_3 4,%1,%2,%3
    32 0000003C 52                  <3>  push edx
    32 0000003D 51                  <3>  push ecx
    32 0000003E 53                  <3>  push ebx
    32 0000003F 6A04                <3>  push %1
    32 00000041 6A01                <3>  push %2
    32 00000043 68[37000000]        <3>  push %3
    32 00000048 6A05                <3>  push %4
    32 0000004A 5A                  <3>  pop edx
    32 0000004B 59                  <3>  pop ecx
    32 0000004C 5B                  <3>  pop ebx
    32 0000004D 58                  <3>  pop eax
    32 0000004E CD80                <3>  int 0x80
    32 00000050 5B                  <3>  pop ebx
    32 00000051 59                  <3>  pop ecx
    32 00000052 5A                  <3>  pop edx
    32 00000053 9D                  <1>  popf
    32 00000054 61                  <1>  popa
    33                                  
    34                                  t:
    35                                  PRINT "A - "
    35 00000055 60                  <1>  pusha
    35 00000056 9C                  <1>  pushf
    35 00000057 EB05                <1>  jmp %%astr
    35 00000059 41202D2000          <1> %%str db %1, 0
    35                              <1> %%strln equ $-%%str
    35                              <1> %%astr: _syscall_write 1, %%str, %%strln
    35                              <2> ..@7.astr: 
    35                              <2>  _syscall_3 4,%1,%2,%3
    35 0000005E 52                  <3>  push edx
    35 0000005F 51                  <3>  push ecx
    35 00000060 53                  <3>  push ebx
    35 00000061 6A04                <3>  push %1
    35 00000063 6A01                <3>  push %2
    35 00000065 68[59000000]        <3>  push %3
    35 0000006A 6A05                <3>  push %4
    35 0000006C 5A                  <3>  pop edx
    35 0000006D 59                  <3>  pop ecx
    35 0000006E 5B                  <3>  pop ebx
    35 0000006F 58                  <3>  pop eax
    35 00000070 CD80                <3>  int 0x80
    35 00000072 5B                  <3>  pop ebx
    35 00000073 59                  <3>  pop ecx
    35 00000074 5A                  <3>  pop edx
    35 00000075 9D                  <1>  popf
    35 00000076 61                  <1>  popa
    36                                  PUTCHAR al
    36 00000077 60                  <1>  pusha
    36 00000078 9C                  <1>  pushf
    36                              <1> %ifstr %1
    36                              <1>  mov al, %1
    36                              <1> %elifnum %1
    36                              <1>  mov al, %1
    36                              <1> %elifidni %1,al
    36 00000079 90                  <1>  nop
    36                              <1> %elifidni %1,ah
    36                              <1>  mov al, ah
    36                              <1> %elifidni %1,bl
    36                              <1>  mov al, bl
    36                              <1> %elifidni %1,bh
    36                              <1>  mov al, bh
    36                              <1> %elifidni %1,cl
    36                              <1>  mov al, cl
    36                              <1> %elifidni %1,ch
    36                              <1>  mov al, ch
    36                              <1> %elifidni %1,dl
    36                              <1>  mov al, dl
    36                              <1> %elifidni %1,dh
    36                              <1>  mov al, dh
    36                              <1> %else
    36                              <1>  mov al, %1
    36                              <1> %endif
    36 0000007A 83EC02              <1>  sub esp, 2
    36 0000007D 89E7                <1>  mov edi, esp
    36 0000007F 8807                <1>  mov [edi], al
    36                              <1>  _syscall_write 1, edi, 1
    36                              <2>  _syscall_3 4,%1,%2,%3
    36 00000081 52                  <3>  push edx
    36 00000082 51                  <3>  push ecx
    36 00000083 53                  <3>  push ebx
    36 00000084 6A04                <3>  push %1
    36 00000086 6A01                <3>  push %2
    36 00000088 57                  <3>  push %3
    36 00000089 6A01                <3>  push %4
    36 0000008B 5A                  <3>  pop edx
    36 0000008C 59                  <3>  pop ecx
    36 0000008D 5B                  <3>  pop ebx
    36 0000008E 58                  <3>  pop eax
    36 0000008F CD80                <3>  int 0x80
    36 00000091 5B                  <3>  pop ebx
    36 00000092 59                  <3>  pop ecx
    36 00000093 5A                  <3>  pop edx
    36 00000094 83C402              <1>  add esp, 2
    36 00000097 9D                  <1>  popf
    36 00000098 61                  <1>  popa
    37                                  PUTCHAR 0xA
    37 00000099 60                  <1>  pusha
    37 0000009A 9C                  <1>  pushf
    37                              <1> %ifstr %1
    37                              <1>  mov al, %1
    37                              <1> %elifnum %1
    37 0000009B B00A                <1>  mov al, %1
    37                              <1> %elifidni %1,al
    37                              <1>  nop
    37                              <1> %elifidni %1,ah
    37                              <1>  mov al, ah
    37                              <1> %elifidni %1,bl
    37                              <1>  mov al, bl
    37                              <1> %elifidni %1,bh
    37                              <1>  mov al, bh
    37                              <1> %elifidni %1,cl
    37                              <1>  mov al, cl
    37                              <1> %elifidni %1,ch
    37                              <1>  mov al, ch
    37                              <1> %elifidni %1,dl
    37                              <1>  mov al, dl
    37                              <1> %elifidni %1,dh
    37                              <1>  mov al, dh
    37                              <1> %else
    37                              <1>  mov al, %1
    37                              <1> %endif
    37 0000009D 83EC02              <1>  sub esp, 2
    37 000000A0 89E7                <1>  mov edi, esp
    37 000000A2 8807                <1>  mov [edi], al
    37                              <1>  _syscall_write 1, edi, 1
    37                              <2>  _syscall_3 4,%1,%2,%3
    37 000000A4 52                  <3>  push edx
    37 000000A5 51                  <3>  push ecx
    37 000000A6 53                  <3>  push ebx
    37 000000A7 6A04                <3>  push %1
    37 000000A9 6A01                <3>  push %2
    37 000000AB 57                  <3>  push %3
    37 000000AC 6A01                <3>  push %4
    37 000000AE 5A                  <3>  pop edx
    37 000000AF 59                  <3>  pop ecx
    37 000000B0 5B                  <3>  pop ebx
    37 000000B1 58                  <3>  pop eax
    37 000000B2 CD80                <3>  int 0x80
    37 000000B4 5B                  <3>  pop ebx
    37 000000B5 59                  <3>  pop ecx
    37 000000B6 5A                  <3>  pop edx
    37 000000B7 83C402              <1>  add esp, 2
    37 000000BA 9D                  <1>  popf
    37 000000BB 61                  <1>  popa
    38                                  PRINT "B -"
    38 000000BC 60                  <1>  pusha
    38 000000BD 9C                  <1>  pushf
    38 000000BE EB04                <1>  jmp %%astr
    38 000000C0 42202D00            <1> %%str db %1, 0
    38                              <1> %%strln equ $-%%str
    38                              <1> %%astr: _syscall_write 1, %%str, %%strln
    38                              <2> ..@16.astr: 
    38                              <2>  _syscall_3 4,%1,%2,%3
    38 000000C4 52                  <3>  push edx
    38 000000C5 51                  <3>  push ecx
    38 000000C6 53                  <3>  push ebx
    38 000000C7 6A04                <3>  push %1
    38 000000C9 6A01                <3>  push %2
    38 000000CB 68[C0000000]        <3>  push %3
    38 000000D0 6A04                <3>  push %4
    38 000000D2 5A                  <3>  pop edx
    38 000000D3 59                  <3>  pop ecx
    38 000000D4 5B                  <3>  pop ebx
    38 000000D5 58                  <3>  pop eax
    38 000000D6 CD80                <3>  int 0x80
    38 000000D8 5B                  <3>  pop ebx
    38 000000D9 59                  <3>  pop ecx
    38 000000DA 5A                  <3>  pop edx
    38 000000DB 9D                  <1>  popf
    38 000000DC 61                  <1>  popa
    39                                  PUTCHAR bl
    39 000000DD 60                  <1>  pusha
    39 000000DE 9C                  <1>  pushf
    39                              <1> %ifstr %1
    39                              <1>  mov al, %1
    39                              <1> %elifnum %1
    39                              <1>  mov al, %1
    39                              <1> %elifidni %1,al
    39                              <1>  nop
    39                              <1> %elifidni %1,ah
    39                              <1>  mov al, ah
    39                              <1> %elifidni %1,bl
    39 000000DF 88D8                <1>  mov al, bl
    39                              <1> %elifidni %1,bh
    39                              <1>  mov al, bh
    39                              <1> %elifidni %1,cl
    39                              <1>  mov al, cl
    39                              <1> %elifidni %1,ch
    39                              <1>  mov al, ch
    39                              <1> %elifidni %1,dl
    39                              <1>  mov al, dl
    39                              <1> %elifidni %1,dh
    39                              <1>  mov al, dh
    39                              <1> %else
    39                              <1>  mov al, %1
    39                              <1> %endif
    39 000000E1 83EC02              <1>  sub esp, 2
    39 000000E4 89E7                <1>  mov edi, esp
    39 000000E6 8807                <1>  mov [edi], al
    39                              <1>  _syscall_write 1, edi, 1
    39                              <2>  _syscall_3 4,%1,%2,%3
    39 000000E8 52                  <3>  push edx
    39 000000E9 51                  <3>  push ecx
    39 000000EA 53                  <3>  push ebx
    39 000000EB 6A04                <3>  push %1
    39 000000ED 6A01                <3>  push %2
    39 000000EF 57                  <3>  push %3
    39 000000F0 6A01                <3>  push %4
    39 000000F2 5A                  <3>  pop edx
    39 000000F3 59                  <3>  pop ecx
    39 000000F4 5B                  <3>  pop ebx
    39 000000F5 58                  <3>  pop eax
    39 000000F6 CD80                <3>  int 0x80
    39 000000F8 5B                  <3>  pop ebx
    39 000000F9 59                  <3>  pop ecx
    39 000000FA 5A                  <3>  pop edx
    39 000000FB 83C402              <1>  add esp, 2
    39 000000FE 9D                  <1>  popf
    39 000000FF 61                  <1>  popa
    40                                  PUTCHAR 0xA
    40 00000100 60                  <1>  pusha
    40 00000101 9C                  <1>  pushf
    40                              <1> %ifstr %1
    40                              <1>  mov al, %1
    40                              <1> %elifnum %1
    40 00000102 B00A                <1>  mov al, %1
    40                              <1> %elifidni %1,al
    40                              <1>  nop
    40                              <1> %elifidni %1,ah
    40                              <1>  mov al, ah
    40                              <1> %elifidni %1,bl
    40                              <1>  mov al, bl
    40                              <1> %elifidni %1,bh
    40                              <1>  mov al, bh
    40                              <1> %elifidni %1,cl
    40                              <1>  mov al, cl
    40                              <1> %elifidni %1,ch
    40                              <1>  mov al, ch
    40                              <1> %elifidni %1,dl
    40                              <1>  mov al, dl
    40                              <1> %elifidni %1,dh
    40                              <1>  mov al, dh
    40                              <1> %else
    40                              <1>  mov al, %1
    40                              <1> %endif
    40 00000104 83EC02              <1>  sub esp, 2
    40 00000107 89E7                <1>  mov edi, esp
    40 00000109 8807                <1>  mov [edi], al
    40                              <1>  _syscall_write 1, edi, 1
    40                              <2>  _syscall_3 4,%1,%2,%3
    40 0000010B 52                  <3>  push edx
    40 0000010C 51                  <3>  push ecx
    40 0000010D 53                  <3>  push ebx
    40 0000010E 6A04                <3>  push %1
    40 00000110 6A01                <3>  push %2
    40 00000112 57                  <3>  push %3
    40 00000113 6A01                <3>  push %4
    40 00000115 5A                  <3>  pop edx
    40 00000116 59                  <3>  pop ecx
    40 00000117 5B                  <3>  pop ebx
    40 00000118 58                  <3>  pop eax
    40 00000119 CD80                <3>  int 0x80
    40 0000011B 5B                  <3>  pop ebx
    40 0000011C 59                  <3>  pop ecx
    40 0000011D 5A                  <3>  pop edx
    40 0000011E 83C402              <1>  add esp, 2
    40 00000121 9D                  <1>  popf
    40 00000122 61                  <1>  popa
    41                                  PRINT "C - "
    41 00000123 60                  <1>  pusha
    41 00000124 9C                  <1>  pushf
    41 00000125 EB05                <1>  jmp %%astr
    41 00000127 43202D2000          <1> %%str db %1, 0
    41                              <1> %%strln equ $-%%str
    41                              <1> %%astr: _syscall_write 1, %%str, %%strln
    41                              <2> ..@25.astr: 
    41                              <2>  _syscall_3 4,%1,%2,%3
    41 0000012C 52                  <3>  push edx
    41 0000012D 51                  <3>  push ecx
    41 0000012E 53                  <3>  push ebx
    41 0000012F 6A04                <3>  push %1
    41 00000131 6A01                <3>  push %2
    41 00000133 68[27010000]        <3>  push %3
    41 00000138 6A05                <3>  push %4
    41 0000013A 5A                  <3>  pop edx
    41 0000013B 59                  <3>  pop ecx
    41 0000013C 5B                  <3>  pop ebx
    41 0000013D 58                  <3>  pop eax
    41 0000013E CD80                <3>  int 0x80
    41 00000140 5B                  <3>  pop ebx
    41 00000141 59                  <3>  pop ecx
    41 00000142 5A                  <3>  pop edx
    41 00000143 9D                  <1>  popf
    41 00000144 61                  <1>  popa
    42                                  PUTCHAR cl
    42 00000145 60                  <1>  pusha
    42 00000146 9C                  <1>  pushf
    42                              <1> %ifstr %1
    42                              <1>  mov al, %1
    42                              <1> %elifnum %1
    42                              <1>  mov al, %1
    42                              <1> %elifidni %1,al
    42                              <1>  nop
    42                              <1> %elifidni %1,ah
    42                              <1>  mov al, ah
    42                              <1> %elifidni %1,bl
    42                              <1>  mov al, bl
    42                              <1> %elifidni %1,bh
    42                              <1>  mov al, bh
    42                              <1> %elifidni %1,cl
    42 00000147 88C8                <1>  mov al, cl
    42                              <1> %elifidni %1,ch
    42                              <1>  mov al, ch
    42                              <1> %elifidni %1,dl
    42                              <1>  mov al, dl
    42                              <1> %elifidni %1,dh
    42                              <1>  mov al, dh
    42                              <1> %else
    42                              <1>  mov al, %1
    42                              <1> %endif
    42 00000149 83EC02              <1>  sub esp, 2
    42 0000014C 89E7                <1>  mov edi, esp
    42 0000014E 8807                <1>  mov [edi], al
    42                              <1>  _syscall_write 1, edi, 1
    42                              <2>  _syscall_3 4,%1,%2,%3
    42 00000150 52                  <3>  push edx
    42 00000151 51                  <3>  push ecx
    42 00000152 53                  <3>  push ebx
    42 00000153 6A04                <3>  push %1
    42 00000155 6A01                <3>  push %2
    42 00000157 57                  <3>  push %3
    42 00000158 6A01                <3>  push %4
    42 0000015A 5A                  <3>  pop edx
    42 0000015B 59                  <3>  pop ecx
    42 0000015C 5B                  <3>  pop ebx
    42 0000015D 58                  <3>  pop eax
    42 0000015E CD80                <3>  int 0x80
    42 00000160 5B                  <3>  pop ebx
    42 00000161 59                  <3>  pop ecx
    42 00000162 5A                  <3>  pop edx
    42 00000163 83C402              <1>  add esp, 2
    42 00000166 9D                  <1>  popf
    42 00000167 61                  <1>  popa
    43                                  PUTCHAR 0xA
    43 00000168 60                  <1>  pusha
    43 00000169 9C                  <1>  pushf
    43                              <1> %ifstr %1
    43                              <1>  mov al, %1
    43                              <1> %elifnum %1
    43 0000016A B00A                <1>  mov al, %1
    43                              <1> %elifidni %1,al
    43                              <1>  nop
    43                              <1> %elifidni %1,ah
    43                              <1>  mov al, ah
    43                              <1> %elifidni %1,bl
    43                              <1>  mov al, bl
    43                              <1> %elifidni %1,bh
    43                              <1>  mov al, bh
    43                              <1> %elifidni %1,cl
    43                              <1>  mov al, cl
    43                              <1> %elifidni %1,ch
    43                              <1>  mov al, ch
    43                              <1> %elifidni %1,dl
    43                              <1>  mov al, dl
    43                              <1> %elifidni %1,dh
    43                              <1>  mov al, dh
    43                              <1> %else
    43                              <1>  mov al, %1
    43                              <1> %endif
    43 0000016C 83EC02              <1>  sub esp, 2
    43 0000016F 89E7                <1>  mov edi, esp
    43 00000171 8807                <1>  mov [edi], al
    43                              <1>  _syscall_write 1, edi, 1
    43                              <2>  _syscall_3 4,%1,%2,%3
    43 00000173 52                  <3>  push edx
    43 00000174 51                  <3>  push ecx
    43 00000175 53                  <3>  push ebx
    43 00000176 6A04                <3>  push %1
    43 00000178 6A01                <3>  push %2
    43 0000017A 57                  <3>  push %3
    43 0000017B 6A01                <3>  push %4
    43 0000017D 5A                  <3>  pop edx
    43 0000017E 59                  <3>  pop ecx
    43 0000017F 5B                  <3>  pop ebx
    43 00000180 58                  <3>  pop eax
    43 00000181 CD80                <3>  int 0x80
    43 00000183 5B                  <3>  pop ebx
    43 00000184 59                  <3>  pop ecx
    43 00000185 5A                  <3>  pop edx
    43 00000186 83C402              <1>  add esp, 2
    43 00000189 9D                  <1>  popf
    43 0000018A 61                  <1>  popa
    44                                  FINISH
    44                              <1>  _syscall_exit %1
    44 0000018B BB00000000          <2>  mov ebx, %1
    44 00000190 B801000000          <2>  mov eax, 1
    44 00000195 CD80                <2>  int 0x80
