     1                                  %include "st_io.inc"
     1                              <1> ;; File stud_io.inc for Linux O.S.
     2                              <1> ;; Copyright (c) Andrey Vikt. Stolyarov, 2009.
     3                              <1> ;; I, the author, hereby grant everyone the right to use this
     4                              <1> ;; file for any purpose, in any manner, in it's original or
     5                              <1> ;; modified form, provided that any modified versions are
     6                              <1> ;; clearly marked as such.
     7                              <1> ;; file changed, macros added (by Divari I.N.,
     8                              <1> ;; Department of computer science, MIPT, 2019-2020) 
     9                              <1> 
    10                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    11                              <1> ;; system dependend part
    12                              <1> 
    13                              <1> ; generic 3-param syscall
    14                              <1> %macro _syscall_3 4
    15                              <1> 	push edx
    16                              <1> 	push ecx
    17                              <1> 	push ebx ; it is senseless to save eax as it holds the return
    18                              <1> 	push %1
    19                              <1> 	push %2
    20                              <1> 	push %3
    21                              <1> 	push %4
    22                              <1> 	pop edx
    23                              <1> 	pop ecx
    24                              <1> 	pop ebx
    25                              <1> 	pop eax 
    26                              <1> 	int 0x80
    27                              <1> 	pop ebx
    28                              <1> 	pop ecx
    29                              <1> 	pop edx
    30                              <1> %endmacro
    31                              <1> 
    32                              <1> ; syscall_exit is the only syscall we use that has 1 parameter
    33                              <1> %macro _syscall_exit 1
    34                              <1> 	mov ebx, %1	; exit code
    35                              <1> 	mov eax, 1	; 1 = sys_exit
    36                              <1> 	int 0x80
    37                              <1> %endmacro
    38                              <1> 
    39                              <1> ;; system dependent part ends here
    40                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    41                              <1> 
    42                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    43                              <1> ; output: eax: read bytes
    44                              <1> %macro _syscall_read 3
    45                              <1> 	_syscall_3 3,%1,%2,%3
    46                              <1> %endmacro
    47                              <1> 
    48                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    49                              <1> ; output: eax: written bytes
    50                              <1> %macro _syscall_write 3
    51                              <1> 	_syscall_3 4,%1,%2,%3
    52                              <1> %endmacro
    53                              <1> 
    54                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    55                              <1> %macro 	PRINT 1
    56                              <1> 	pusha
    57                              <1> 	pushf
    58                              <1> 	jmp %%astr
    59                              <1> %%str	db	%1, 0
    60                              <1> %%strln	equ	$-%%str
    61                              <1> %%astr:	_syscall_write 1, %%str, %%strln
    62                              <1> 	popf
    63                              <1> 	popa
    64                              <1> %endmacro
    65                              <1> 
    66                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    67                              <1> %macro	PUTCHAR 1
    68                              <1> 	pusha
    69                              <1> 	pushf
    70                              <1> %ifstr %1
    71                              <1> 	mov	al, %1
    72                              <1> %elifnum %1
    73                              <1> 	mov	al, %1
    74                              <1> %elifidni %1,al
    75                              <1> 	nop
    76                              <1> %elifidni %1,ah
    77                              <1> 	mov	al, ah
    78                              <1> %elifidni %1,bl
    79                              <1> 	mov	al, bl
    80                              <1> %elifidni %1,bh
    81                              <1> 	mov	al, bh
    82                              <1> %elifidni %1,cl
    83                              <1> 	mov	al, cl
    84                              <1> %elifidni %1,ch
    85                              <1> 	mov	al, ch
    86                              <1> %elifidni %1,dl
    87                              <1> 	mov	al, dl
    88                              <1> %elifidni %1,dh
    89                              <1> 	mov	al, dh
    90                              <1> %else
    91                              <1> 	mov	al, %1  ; let's hope it is a memory location such as [var]
    92                              <1> %endif
    93                              <1> 	sub	esp, 2  ; reserve memory for buffer
    94                              <1> 	mov	edi, esp
    95                              <1> 	mov	[edi], al
    96                              <1> 	_syscall_write 1, edi, 1
    97                              <1> 	add	esp, 2
    98                              <1> 	popf
    99                              <1> 	popa
   100                              <1> %endmacro
   101                              <1> 
   102                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   103                              <1> %macro	GETCHAR 0
   104                              <1> 	pushf
   105                              <1> 	push	edi
   106                              <1> 	sub	esp, 2
   107                              <1> 	mov	edi, esp
   108                              <1> 	_syscall_read 0, edi, 1
   109                              <1> 	cmp	eax, 1
   110                              <1> 	jne	%%eof_reached
   111                              <1> 	xor	eax,eax
   112                              <1> 	mov	al, [edi]
   113                              <1> 	jmp	%%gcquit
   114                              <1> %%eof_reached:
   115                              <1> 	xor	eax, eax
   116                              <1> 	not	eax 		; eax := -1
   117                              <1> %%gcquit:
   118                              <1> 	add	esp, 2
   119                              <1> 	pop	edi
   120                              <1> 	popf
   121                              <1> %endmacro
   122                              <1> 
   123                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   124                              <1> %macro FINISH 0-1 0
   125                              <1> 	_syscall_exit %1
   126                              <1> %endmacro
   127                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   128                              <1> %macro UNSINT 1
   129                              <1> pusha
   130                              <1> pushf
   131                              <1> push dword %1
   132                              <1> pop eax
   133                              <1> mov edi,eax
   134                              <1> mov esi,10
   135                              <1>   xor ebx,ebx
   136                              <1> %%m1:
   137                              <1>    xor edx,edx
   138                              <1>    div esi
   139                              <1>    inc ebx
   140                              <1>    cmp eax,0
   141                              <1>    jne %%m1
   142                              <1>     
   143                              <1>    mov eax,1
   144                              <1>    mov ecx,ebx
   145                              <1>    dec ecx
   146                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   147                              <1>     cmp ecx,0
   148                              <1>      je %%m4
   149                              <1> %%m2:  mul esi
   150                              <1>        loop %%m2
   151                              <1> 
   152                              <1>        mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:       
   155                              <1>       mov eax,edi 
   156                              <1>       xor edx,edx 
   157                              <1>       div ebx
   158                              <1>       add al,'0'
   159                              <1>       PUTCHAR al
   160                              <1>       mov edi,edx
   161                              <1>       xor edx,edx
   162                              <1>       mov eax,ebx
   163                              <1>       div esi
   164                              <1>       cmp eax,1
   165                              <1>       je %%m4
   166                              <1>       mov ebx,eax
   167                              <1>       jmp %%m3
   168                              <1>  %%m4:      
   169                              <1>       mov edx,edi
   170                              <1>       add dl,'0'
   171                              <1>       PUTCHAR dl
   172                              <1>        
   173                              <1>   
   174                              <1> popf
   175                              <1> popa
   176                              <1> %endmacro
   177                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   178                              <1> %macro SIGNINT 1
   179                              <1> pusha
   180                              <1> pushf
   181                              <1> push dword %1
   182                              <1> pop eax
   183                              <1>     cmp eax,0
   184                              <1>     jge %%m5
   185                              <1>     PUTCHAR '-'
   186                              <1>     neg eax
   187                              <1> %%m5:
   188                              <1>       UNSINT eax
   189                              <1> popf
   190                              <1> popa
   191                              <1> %endmacro
   192                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   193                              <1> %macro GETUN 1
   194                              <1> pushad
   195                              <1> pushfd
   196                              <1> ;;;;;;;;;;;;;;;;;;;;;;
   197                              <1> xor edi,edi
   198                              <1> xor esi,esi
   199                              <1> %%m1:
   200                              <1> GETCHAR
   201                              <1> cmp al,0xA
   202                              <1> je %%m2
   203                              <1> cmp al,'0'
   204                              <1> jb %%m_err
   205                              <1> cmp al,'9'
   206                              <1> ja %%m_err
   207                              <1> inc edi
   208                              <1> xor ecx,ecx
   209                              <1> mov cl,al
   210                              <1> mov eax,esi
   211                              <1> mov ebx,10
   212                              <1> mul ebx
   213                              <1> sub cl,48
   214                              <1> add eax,ecx
   215                              <1> jc %%m3
   216                              <1> mov esi,eax
   217                              <1> jmp %%m1
   218                              <1> %%m2: 
   219                              <1> cmp edi,0
   220                              <1> je %%m1
   221                              <1> jmp %%m4
   222                              <1> %%m3: PRINT "too big number"
   223                              <1> PUTCHAR 10
   224                              <1> jmp %%m4
   225                              <1> %%m_err: PRINT "ERROR!!!"
   226                              <1> PUTCHAR 0xa
   227                              <1> %%m4:
   228                              <1> ;;;;;;;;;;;;;;;;;;
   229                              <1> push esi
   230                              <1> add esp,4
   231                              <1> popfd
   232                              <1> popad
   233                              <1> sub esp,40
   234                              <1> pop dword %1
   235                              <1> add esp,36
   236                              <1> %endmacro
   237                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   238                              <1> %macro GETSIG 1
   239                              <1> pushad
   240                              <1> pushfd
   241                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   242                              <1> xor edi,edi
   243                              <1> xor esi,esi
   244                              <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   246                              <1> cmp al,0xa
   247                              <1> je %%m_st1
   248                              <1> cmp al,'-'
   249                              <1> jne %%s1
   250                              <1> mov ebx,-10
   251                              <1> push ebx
   252                              <1> GETCHAR
   253                              <1> cmp al,0xa
   254                              <1> je %%m_err
   255                              <1> jmp %%m_st21
   256                              <1> %%s1: push ebx 
   257                              <1> cmp al,'+'
   258                              <1> jne %%m_st21
   259                              <1> GETCHAR 
   260                              <1> cmp al,0xa
   261                              <1> je %%m_err
   262                              <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   264                              <1> %%m_st21:  cmp al,0xa
   265                              <1> je %%pr_end
   266                              <1> cmp al,'0'
   267                              <1> jb %%m_err
   268                              <1> cmp al,'9'
   269                              <1> ja %%m_err
   270                              <1> inc edi
   271                              <1> xor ecx,ecx
   272                              <1> mov cl,al
   273                              <1> mov eax,esi
   274                              <1> imul ebx
   275                              <1> sub cl,48
   276                              <1> cmp dword[esp],-10
   277                              <1> je %%j_s
   278                              <1> add eax,ecx
   279                              <1> jmp %%j_per
   280                              <1> %%j_s: sub eax,ecx
   281                              <1> %%j_per: jo %%m_b
   282                              <1> mov esi,eax
   283                              <1> cmp dword[esp],-10
   284                              <1> jne %%m_st2
   285                              <1> neg esi
   286                              <1> jmp %%m_st2
   287                              <1> %%pr_end:  cmp edi,0
   288                              <1> je %%m_st2
   289                              <1> jmp %%m_k
   290                              <1> ;;;;;;;;;
   291                              <1> %%m_err: pop ebx 
   292                              <1> PRINT "ERROR"
   293                              <1> PUTCHAR 0xa
   294                              <1> jmp %%m_end
   295                              <1> %%m_b: pop ebx 
   296                              <1> cmp ebx,-10
   297                              <1> je  %%m_l
   298                              <1> PRINT "too big"
   299                              <1> PUTCHAR 0xa
   300                              <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   302                              <1> PUTCHAR 0xa
   303                              <1> jmp %%m_end
   304                              <1> %%m_k: pop ebx
   305                              <1> cmp ebx,-10
   306                              <1> jne %%m_p
   307                              <1> neg esi 
   308                              <1> %%m_p: 
   309                              <1> 
   310                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   311                              <1> 
   312                              <1> push esi
   313                              <1> add esp,4
   314                              <1> popfd
   315                              <1> popad
   316                              <1> sub esp,40
   317                              <1> pop dword %1
   318                              <1> add esp,36
   319                              <1> jmp %%mm_e
   320                              <1> %%m_end:
   321                              <1> popfd
   322                              <1> popad
   323                              <1> %%mm_e:
   324                              <1> %endmacro
   325                              <1> 
   326                              <1> 
   327                              <1> 
   328                              <1> 
     2                                  global _start
     3                                  
     4                                  struc node
     5 00000000 <res 00000002>          .elem: resw 1
     6 00000002 <res 00000004>          .next: resd 1
     7                                  endstruc
     8                                  
     9                                  section .bss
    10 00000000 <res 00000004>          heap_ptr resd 1
    11 00000004 <res 00000008>          a resd 2
    12 0000000C <res 00000001>          b resb 1
    13                                  section .data
    14                                  NULL equ 0
    15                                  k equ 10
    16                                  heap_size equ k
    17 00000000 00000000                list dd NULL
    18                                  
    19                                  section .text
    20                                  
    21                                  _start:
    22                                  
    23 00000000 E8A4030000              call init_heap
    24 00000005 B905000000              mov ecx, 5
    25                                  ; присваиваем значения ячейкам списка
    26                                  m1:
    27 0000000A E95C020000              jmp t
    28                                  m2:
    29 0000000F E8C8030000              call new
    30 00000014 668907                  mov [edi+node.elem], ax
    31 00000017 FF35[00000000]          push dword[list]
    32 0000001D 893D[00000000]          mov [list], edi
    33 00000023 8F4702                  pop dword[edi+node.next]
    34 00000026 E2E2                    loop m1
    35                                  
    36 00000028 E810040000              call print
    37                                  PUTCHAR 0xA
    37 0000002D 60                  <1>  pusha
    37 0000002E 9C                  <1>  pushf
    37                              <1> %ifstr %1
    37                              <1>  mov al, %1
    37                              <1> %elifnum %1
    37 0000002F B00A                <1>  mov al, %1
    37                              <1> %elifidni %1,al
    37                              <1>  nop
    37                              <1> %elifidni %1,ah
    37                              <1>  mov al, ah
    37                              <1> %elifidni %1,bl
    37                              <1>  mov al, bl
    37                              <1> %elifidni %1,bh
    37                              <1>  mov al, bh
    37                              <1> %elifidni %1,cl
    37                              <1>  mov al, cl
    37                              <1> %elifidni %1,ch
    37                              <1>  mov al, ch
    37                              <1> %elifidni %1,dl
    37                              <1>  mov al, dl
    37                              <1> %elifidni %1,dh
    37                              <1>  mov al, dh
    37                              <1> %else
    37                              <1>  mov al, %1
    37                              <1> %endif
    37 00000031 83EC02              <1>  sub esp, 2
    37 00000034 89E7                <1>  mov edi, esp
    37 00000036 8807                <1>  mov [edi], al
    37                              <1>  _syscall_write 1, edi, 1
    37                              <2>  _syscall_3 4,%1,%2,%3
    37 00000038 52                  <3>  push edx
    37 00000039 51                  <3>  push ecx
    37 0000003A 53                  <3>  push ebx
    37 0000003B 6A04                <3>  push %1
    37 0000003D 6A01                <3>  push %2
    37 0000003F 57                  <3>  push %3
    37 00000040 6A01                <3>  push %4
    37 00000042 5A                  <3>  pop edx
    37 00000043 59                  <3>  pop ecx
    37 00000044 5B                  <3>  pop ebx
    37 00000045 58                  <3>  pop eax
    37 00000046 CD80                <3>  int 0x80
    37 00000048 5B                  <3>  pop ebx
    37 00000049 59                  <3>  pop ecx
    37 0000004A 5A                  <3>  pop edx
    37 0000004B 83C402              <1>  add esp, 2
    37 0000004E 9D                  <1>  popf
    37 0000004F 61                  <1>  popa
    38                                  PRINT "Удаляем 1 элемент"
    38 00000050 60                  <1>  pusha
    38 00000051 9C                  <1>  pushf
    38 00000052 EB20                <1>  jmp %%astr
    38 00000054 D0A3D0B4D0B0D0BBD1- <1> %%str db %1, 0
    38 0000005D 8FD0B5D0BC203120D1- <1>
    38 00000066 8DD0BBD0B5D0BCD0B5- <1>
    38 0000006F D0BDD18200          <1>
    38                              <1> %%strln equ $-%%str
    38                              <1> %%astr: _syscall_write 1, %%str, %%strln
    38                              <2> ..@10.astr: 
    38                              <2>  _syscall_3 4,%1,%2,%3
    38 00000074 52                  <3>  push edx
    38 00000075 51                  <3>  push ecx
    38 00000076 53                  <3>  push ebx
    38 00000077 6A04                <3>  push %1
    38 00000079 6A01                <3>  push %2
    38 0000007B 68[54000000]        <3>  push %3
    38 00000080 6A20                <3>  push %4
    38 00000082 5A                  <3>  pop edx
    38 00000083 59                  <3>  pop ecx
    38 00000084 5B                  <3>  pop ebx
    38 00000085 58                  <3>  pop eax
    38 00000086 CD80                <3>  int 0x80
    38 00000088 5B                  <3>  pop ebx
    38 00000089 59                  <3>  pop ecx
    38 0000008A 5A                  <3>  pop edx
    38 0000008B 9D                  <1>  popf
    38 0000008C 61                  <1>  popa
    39                                  PUTCHAR 0xA
    39 0000008D 60                  <1>  pusha
    39 0000008E 9C                  <1>  pushf
    39                              <1> %ifstr %1
    39                              <1>  mov al, %1
    39                              <1> %elifnum %1
    39 0000008F B00A                <1>  mov al, %1
    39                              <1> %elifidni %1,al
    39                              <1>  nop
    39                              <1> %elifidni %1,ah
    39                              <1>  mov al, ah
    39                              <1> %elifidni %1,bl
    39                              <1>  mov al, bl
    39                              <1> %elifidni %1,bh
    39                              <1>  mov al, bh
    39                              <1> %elifidni %1,cl
    39                              <1>  mov al, cl
    39                              <1> %elifidni %1,ch
    39                              <1>  mov al, ch
    39                              <1> %elifidni %1,dl
    39                              <1>  mov al, dl
    39                              <1> %elifidni %1,dh
    39                              <1>  mov al, dh
    39                              <1> %else
    39                              <1>  mov al, %1
    39                              <1> %endif
    39 00000091 83EC02              <1>  sub esp, 2
    39 00000094 89E7                <1>  mov edi, esp
    39 00000096 8807                <1>  mov [edi], al
    39                              <1>  _syscall_write 1, edi, 1
    39                              <2>  _syscall_3 4,%1,%2,%3
    39 00000098 52                  <3>  push edx
    39 00000099 51                  <3>  push ecx
    39 0000009A 53                  <3>  push ebx
    39 0000009B 6A04                <3>  push %1
    39 0000009D 6A01                <3>  push %2
    39 0000009F 57                  <3>  push %3
    39 000000A0 6A01                <3>  push %4
    39 000000A2 5A                  <3>  pop edx
    39 000000A3 59                  <3>  pop ecx
    39 000000A4 5B                  <3>  pop ebx
    39 000000A5 58                  <3>  pop eax
    39 000000A6 CD80                <3>  int 0x80
    39 000000A8 5B                  <3>  pop ebx
    39 000000A9 59                  <3>  pop ecx
    39 000000AA 5A                  <3>  pop edx
    39 000000AB 83C402              <1>  add esp, 2
    39 000000AE 9D                  <1>  popf
    39 000000AF 61                  <1>  popa
    40 000000B0 E867040000              call del1
    41                                  PUTCHAR 0xA
    41 000000B5 60                  <1>  pusha
    41 000000B6 9C                  <1>  pushf
    41                              <1> %ifstr %1
    41                              <1>  mov al, %1
    41                              <1> %elifnum %1
    41 000000B7 B00A                <1>  mov al, %1
    41                              <1> %elifidni %1,al
    41                              <1>  nop
    41                              <1> %elifidni %1,ah
    41                              <1>  mov al, ah
    41                              <1> %elifidni %1,bl
    41                              <1>  mov al, bl
    41                              <1> %elifidni %1,bh
    41                              <1>  mov al, bh
    41                              <1> %elifidni %1,cl
    41                              <1>  mov al, cl
    41                              <1> %elifidni %1,ch
    41                              <1>  mov al, ch
    41                              <1> %elifidni %1,dl
    41                              <1>  mov al, dl
    41                              <1> %elifidni %1,dh
    41                              <1>  mov al, dh
    41                              <1> %else
    41                              <1>  mov al, %1
    41                              <1> %endif
    41 000000B9 83EC02              <1>  sub esp, 2
    41 000000BC 89E7                <1>  mov edi, esp
    41 000000BE 8807                <1>  mov [edi], al
    41                              <1>  _syscall_write 1, edi, 1
    41                              <2>  _syscall_3 4,%1,%2,%3
    41 000000C0 52                  <3>  push edx
    41 000000C1 51                  <3>  push ecx
    41 000000C2 53                  <3>  push ebx
    41 000000C3 6A04                <3>  push %1
    41 000000C5 6A01                <3>  push %2
    41 000000C7 57                  <3>  push %3
    41 000000C8 6A01                <3>  push %4
    41 000000CA 5A                  <3>  pop edx
    41 000000CB 59                  <3>  pop ecx
    41 000000CC 5B                  <3>  pop ebx
    41 000000CD 58                  <3>  pop eax
    41 000000CE CD80                <3>  int 0x80
    41 000000D0 5B                  <3>  pop ebx
    41 000000D1 59                  <3>  pop ecx
    41 000000D2 5A                  <3>  pop edx
    41 000000D3 83C402              <1>  add esp, 2
    41 000000D6 9D                  <1>  popf
    41 000000D7 61                  <1>  popa
    42                                  PRINT "Удаляем последний элемент"
    42 000000D8 60                  <1>  pusha
    42 000000D9 9C                  <1>  pushf
    42 000000DA EB31                <1>  jmp %%astr
    42 000000DC D0A3D0B4D0B0D0BBD1- <1> %%str db %1, 0
    42 000000E5 8FD0B5D0BC20D0BFD0- <1>
    42 000000EE BED181D0BBD0B5D0B4- <1>
    42 000000F7 D0BDD0B8D0B920D18D- <1>
    42 00000100 D0BBD0B5D0BCD0B5D0- <1>
    42 00000109 BDD18200            <1>
    42                              <1> %%strln equ $-%%str
    42                              <1> %%astr: _syscall_write 1, %%str, %%strln
    42                              <2> ..@19.astr: 
    42                              <2>  _syscall_3 4,%1,%2,%3
    42 0000010D 52                  <3>  push edx
    42 0000010E 51                  <3>  push ecx
    42 0000010F 53                  <3>  push ebx
    42 00000110 6A04                <3>  push %1
    42 00000112 6A01                <3>  push %2
    42 00000114 68[DC000000]        <3>  push %3
    42 00000119 6A31                <3>  push %4
    42 0000011B 5A                  <3>  pop edx
    42 0000011C 59                  <3>  pop ecx
    42 0000011D 5B                  <3>  pop ebx
    42 0000011E 58                  <3>  pop eax
    42 0000011F CD80                <3>  int 0x80
    42 00000121 5B                  <3>  pop ebx
    42 00000122 59                  <3>  pop ecx
    42 00000123 5A                  <3>  pop edx
    42 00000124 9D                  <1>  popf
    42 00000125 61                  <1>  popa
    43                                  PUTCHAR 0xA
    43 00000126 60                  <1>  pusha
    43 00000127 9C                  <1>  pushf
    43                              <1> %ifstr %1
    43                              <1>  mov al, %1
    43                              <1> %elifnum %1
    43 00000128 B00A                <1>  mov al, %1
    43                              <1> %elifidni %1,al
    43                              <1>  nop
    43                              <1> %elifidni %1,ah
    43                              <1>  mov al, ah
    43                              <1> %elifidni %1,bl
    43                              <1>  mov al, bl
    43                              <1> %elifidni %1,bh
    43                              <1>  mov al, bh
    43                              <1> %elifidni %1,cl
    43                              <1>  mov al, cl
    43                              <1> %elifidni %1,ch
    43                              <1>  mov al, ch
    43                              <1> %elifidni %1,dl
    43                              <1>  mov al, dl
    43                              <1> %elifidni %1,dh
    43                              <1>  mov al, dh
    43                              <1> %else
    43                              <1>  mov al, %1
    43                              <1> %endif
    43 0000012A 83EC02              <1>  sub esp, 2
    43 0000012D 89E7                <1>  mov edi, esp
    43 0000012F 8807                <1>  mov [edi], al
    43                              <1>  _syscall_write 1, edi, 1
    43                              <2>  _syscall_3 4,%1,%2,%3
    43 00000131 52                  <3>  push edx
    43 00000132 51                  <3>  push ecx
    43 00000133 53                  <3>  push ebx
    43 00000134 6A04                <3>  push %1
    43 00000136 6A01                <3>  push %2
    43 00000138 57                  <3>  push %3
    43 00000139 6A01                <3>  push %4
    43 0000013B 5A                  <3>  pop edx
    43 0000013C 59                  <3>  pop ecx
    43 0000013D 5B                  <3>  pop ebx
    43 0000013E 58                  <3>  pop eax
    43 0000013F CD80                <3>  int 0x80
    43 00000141 5B                  <3>  pop ebx
    43 00000142 59                  <3>  pop ecx
    43 00000143 5A                  <3>  pop edx
    43 00000144 83C402              <1>  add esp, 2
    43 00000147 9D                  <1>  popf
    43 00000148 61                  <1>  popa
    44 00000149 E8EA030000              call dell
    45                                  PUTCHAR 0xA
    45 0000014E 60                  <1>  pusha
    45 0000014F 9C                  <1>  pushf
    45                              <1> %ifstr %1
    45                              <1>  mov al, %1
    45                              <1> %elifnum %1
    45 00000150 B00A                <1>  mov al, %1
    45                              <1> %elifidni %1,al
    45                              <1>  nop
    45                              <1> %elifidni %1,ah
    45                              <1>  mov al, ah
    45                              <1> %elifidni %1,bl
    45                              <1>  mov al, bl
    45                              <1> %elifidni %1,bh
    45                              <1>  mov al, bh
    45                              <1> %elifidni %1,cl
    45                              <1>  mov al, cl
    45                              <1> %elifidni %1,ch
    45                              <1>  mov al, ch
    45                              <1> %elifidni %1,dl
    45                              <1>  mov al, dl
    45                              <1> %elifidni %1,dh
    45                              <1>  mov al, dh
    45                              <1> %else
    45                              <1>  mov al, %1
    45                              <1> %endif
    45 00000152 83EC02              <1>  sub esp, 2
    45 00000155 89E7                <1>  mov edi, esp
    45 00000157 8807                <1>  mov [edi], al
    45                              <1>  _syscall_write 1, edi, 1
    45                              <2>  _syscall_3 4,%1,%2,%3
    45 00000159 52                  <3>  push edx
    45 0000015A 51                  <3>  push ecx
    45 0000015B 53                  <3>  push ebx
    45 0000015C 6A04                <3>  push %1
    45 0000015E 6A01                <3>  push %2
    45 00000160 57                  <3>  push %3
    45 00000161 6A01                <3>  push %4
    45 00000163 5A                  <3>  pop edx
    45 00000164 59                  <3>  pop ecx
    45 00000165 5B                  <3>  pop ebx
    45 00000166 58                  <3>  pop eax
    45 00000167 CD80                <3>  int 0x80
    45 00000169 5B                  <3>  pop ebx
    45 0000016A 59                  <3>  pop ecx
    45 0000016B 5A                  <3>  pop edx
    45 0000016C 83C402              <1>  add esp, 2
    45 0000016F 9D                  <1>  popf
    45 00000170 61                  <1>  popa
    46 00000171 E8F2030000              call delete
    47                                  PUTCHAR 0xA
    47 00000176 60                  <1>  pusha
    47 00000177 9C                  <1>  pushf
    47                              <1> %ifstr %1
    47                              <1>  mov al, %1
    47                              <1> %elifnum %1
    47 00000178 B00A                <1>  mov al, %1
    47                              <1> %elifidni %1,al
    47                              <1>  nop
    47                              <1> %elifidni %1,ah
    47                              <1>  mov al, ah
    47                              <1> %elifidni %1,bl
    47                              <1>  mov al, bl
    47                              <1> %elifidni %1,bh
    47                              <1>  mov al, bh
    47                              <1> %elifidni %1,cl
    47                              <1>  mov al, cl
    47                              <1> %elifidni %1,ch
    47                              <1>  mov al, ch
    47                              <1> %elifidni %1,dl
    47                              <1>  mov al, dl
    47                              <1> %elifidni %1,dh
    47                              <1>  mov al, dh
    47                              <1> %else
    47                              <1>  mov al, %1
    47                              <1> %endif
    47 0000017A 83EC02              <1>  sub esp, 2
    47 0000017D 89E7                <1>  mov edi, esp
    47 0000017F 8807                <1>  mov [edi], al
    47                              <1>  _syscall_write 1, edi, 1
    47                              <2>  _syscall_3 4,%1,%2,%3
    47 00000181 52                  <3>  push edx
    47 00000182 51                  <3>  push ecx
    47 00000183 53                  <3>  push ebx
    47 00000184 6A04                <3>  push %1
    47 00000186 6A01                <3>  push %2
    47 00000188 57                  <3>  push %3
    47 00000189 6A01                <3>  push %4
    47 0000018B 5A                  <3>  pop edx
    47 0000018C 59                  <3>  pop ecx
    47 0000018D 5B                  <3>  pop ebx
    47 0000018E 58                  <3>  pop eax
    47 0000018F CD80                <3>  int 0x80
    47 00000191 5B                  <3>  pop ebx
    47 00000192 59                  <3>  pop ecx
    47 00000193 5A                  <3>  pop edx
    47 00000194 83C402              <1>  add esp, 2
    47 00000197 9D                  <1>  popf
    47 00000198 61                  <1>  popa
    48 00000199 E8D4050000              call vstavitposle
    49                                  PUTCHAR 0xA
    49 0000019E 60                  <1>  pusha
    49 0000019F 9C                  <1>  pushf
    49                              <1> %ifstr %1
    49                              <1>  mov al, %1
    49                              <1> %elifnum %1
    49 000001A0 B00A                <1>  mov al, %1
    49                              <1> %elifidni %1,al
    49                              <1>  nop
    49                              <1> %elifidni %1,ah
    49                              <1>  mov al, ah
    49                              <1> %elifidni %1,bl
    49                              <1>  mov al, bl
    49                              <1> %elifidni %1,bh
    49                              <1>  mov al, bh
    49                              <1> %elifidni %1,cl
    49                              <1>  mov al, cl
    49                              <1> %elifidni %1,ch
    49                              <1>  mov al, ch
    49                              <1> %elifidni %1,dl
    49                              <1>  mov al, dl
    49                              <1> %elifidni %1,dh
    49                              <1>  mov al, dh
    49                              <1> %else
    49                              <1>  mov al, %1
    49                              <1> %endif
    49 000001A2 83EC02              <1>  sub esp, 2
    49 000001A5 89E7                <1>  mov edi, esp
    49 000001A7 8807                <1>  mov [edi], al
    49                              <1>  _syscall_write 1, edi, 1
    49                              <2>  _syscall_3 4,%1,%2,%3
    49 000001A9 52                  <3>  push edx
    49 000001AA 51                  <3>  push ecx
    49 000001AB 53                  <3>  push ebx
    49 000001AC 6A04                <3>  push %1
    49 000001AE 6A01                <3>  push %2
    49 000001B0 57                  <3>  push %3
    49 000001B1 6A01                <3>  push %4
    49 000001B3 5A                  <3>  pop edx
    49 000001B4 59                  <3>  pop ecx
    49 000001B5 5B                  <3>  pop ebx
    49 000001B6 58                  <3>  pop eax
    49 000001B7 CD80                <3>  int 0x80
    49 000001B9 5B                  <3>  pop ebx
    49 000001BA 59                  <3>  pop ecx
    49 000001BB 5A                  <3>  pop edx
    49 000001BC 83C402              <1>  add esp, 2
    49 000001BF 9D                  <1>  popf
    49 000001C0 61                  <1>  popa
    50 000001C1 E81B0D0000              call vstavitdo
    51                                  PUTCHAR 0xA
    51 000001C6 60                  <1>  pusha
    51 000001C7 9C                  <1>  pushf
    51                              <1> %ifstr %1
    51                              <1>  mov al, %1
    51                              <1> %elifnum %1
    51 000001C8 B00A                <1>  mov al, %1
    51                              <1> %elifidni %1,al
    51                              <1>  nop
    51                              <1> %elifidni %1,ah
    51                              <1>  mov al, ah
    51                              <1> %elifidni %1,bl
    51                              <1>  mov al, bl
    51                              <1> %elifidni %1,bh
    51                              <1>  mov al, bh
    51                              <1> %elifidni %1,cl
    51                              <1>  mov al, cl
    51                              <1> %elifidni %1,ch
    51                              <1>  mov al, ch
    51                              <1> %elifidni %1,dl
    51                              <1>  mov al, dl
    51                              <1> %elifidni %1,dh
    51                              <1>  mov al, dh
    51                              <1> %else
    51                              <1>  mov al, %1
    51                              <1> %endif
    51 000001CA 83EC02              <1>  sub esp, 2
    51 000001CD 89E7                <1>  mov edi, esp
    51 000001CF 8807                <1>  mov [edi], al
    51                              <1>  _syscall_write 1, edi, 1
    51                              <2>  _syscall_3 4,%1,%2,%3
    51 000001D1 52                  <3>  push edx
    51 000001D2 51                  <3>  push ecx
    51 000001D3 53                  <3>  push ebx
    51 000001D4 6A04                <3>  push %1
    51 000001D6 6A01                <3>  push %2
    51 000001D8 57                  <3>  push %3
    51 000001D9 6A01                <3>  push %4
    51 000001DB 5A                  <3>  pop edx
    51 000001DC 59                  <3>  pop ecx
    51 000001DD 5B                  <3>  pop ebx
    51 000001DE 58                  <3>  pop eax
    51 000001DF CD80                <3>  int 0x80
    51 000001E1 5B                  <3>  pop ebx
    51 000001E2 59                  <3>  pop ecx
    51 000001E3 5A                  <3>  pop edx
    51 000001E4 83C402              <1>  add esp, 2
    51 000001E7 9D                  <1>  popf
    51 000001E8 61                  <1>  popa
    52 000001E9 E8FF080000              call vstavitperv
    53                                  PUTCHAR 0xA
    53 000001EE 60                  <1>  pusha
    53 000001EF 9C                  <1>  pushf
    53                              <1> %ifstr %1
    53                              <1>  mov al, %1
    53                              <1> %elifnum %1
    53 000001F0 B00A                <1>  mov al, %1
    53                              <1> %elifidni %1,al
    53                              <1>  nop
    53                              <1> %elifidni %1,ah
    53                              <1>  mov al, ah
    53                              <1> %elifidni %1,bl
    53                              <1>  mov al, bl
    53                              <1> %elifidni %1,bh
    53                              <1>  mov al, bh
    53                              <1> %elifidni %1,cl
    53                              <1>  mov al, cl
    53                              <1> %elifidni %1,ch
    53                              <1>  mov al, ch
    53                              <1> %elifidni %1,dl
    53                              <1>  mov al, dl
    53                              <1> %elifidni %1,dh
    53                              <1>  mov al, dh
    53                              <1> %else
    53                              <1>  mov al, %1
    53                              <1> %endif
    53 000001F2 83EC02              <1>  sub esp, 2
    53 000001F5 89E7                <1>  mov edi, esp
    53 000001F7 8807                <1>  mov [edi], al
    53                              <1>  _syscall_write 1, edi, 1
    53                              <2>  _syscall_3 4,%1,%2,%3
    53 000001F9 52                  <3>  push edx
    53 000001FA 51                  <3>  push ecx
    53 000001FB 53                  <3>  push ebx
    53 000001FC 6A04                <3>  push %1
    53 000001FE 6A01                <3>  push %2
    53 00000200 57                  <3>  push %3
    53 00000201 6A01                <3>  push %4
    53 00000203 5A                  <3>  pop edx
    53 00000204 59                  <3>  pop ecx
    53 00000205 5B                  <3>  pop ebx
    53 00000206 58                  <3>  pop eax
    53 00000207 CD80                <3>  int 0x80
    53 00000209 5B                  <3>  pop ebx
    53 0000020A 59                  <3>  pop ecx
    53 0000020B 5A                  <3>  pop edx
    53 0000020C 83C402              <1>  add esp, 2
    53 0000020F 9D                  <1>  popf
    53 00000210 61                  <1>  popa
    54 00000211 E8DD0A0000              call vstavitlast
    55                                  PUTCHAR 0xA
    55 00000216 60                  <1>  pusha
    55 00000217 9C                  <1>  pushf
    55                              <1> %ifstr %1
    55                              <1>  mov al, %1
    55                              <1> %elifnum %1
    55 00000218 B00A                <1>  mov al, %1
    55                              <1> %elifidni %1,al
    55                              <1>  nop
    55                              <1> %elifidni %1,ah
    55                              <1>  mov al, ah
    55                              <1> %elifidni %1,bl
    55                              <1>  mov al, bl
    55                              <1> %elifidni %1,bh
    55                              <1>  mov al, bh
    55                              <1> %elifidni %1,cl
    55                              <1>  mov al, cl
    55                              <1> %elifidni %1,ch
    55                              <1>  mov al, ch
    55                              <1> %elifidni %1,dl
    55                              <1>  mov al, dl
    55                              <1> %elifidni %1,dh
    55                              <1>  mov al, dh
    55                              <1> %else
    55                              <1>  mov al, %1
    55                              <1> %endif
    55 0000021A 83EC02              <1>  sub esp, 2
    55 0000021D 89E7                <1>  mov edi, esp
    55 0000021F 8807                <1>  mov [edi], al
    55                              <1>  _syscall_write 1, edi, 1
    55                              <2>  _syscall_3 4,%1,%2,%3
    55 00000221 52                  <3>  push edx
    55 00000222 51                  <3>  push ecx
    55 00000223 53                  <3>  push ebx
    55 00000224 6A04                <3>  push %1
    55 00000226 6A01                <3>  push %2
    55 00000228 57                  <3>  push %3
    55 00000229 6A01                <3>  push %4
    55 0000022B 5A                  <3>  pop edx
    55 0000022C 59                  <3>  pop ecx
    55 0000022D 5B                  <3>  pop ebx
    55 0000022E 58                  <3>  pop eax
    55 0000022F CD80                <3>  int 0x80
    55 00000231 5B                  <3>  pop ebx
    55 00000232 59                  <3>  pop ecx
    55 00000233 5A                  <3>  pop edx
    55 00000234 83C402              <1>  add esp, 2
    55 00000237 9D                  <1>  popf
    55 00000238 61                  <1>  popa
    56 00000239 E8F0100000              call sort
    57                                  PUTCHAR 0xA
    57 0000023E 60                  <1>  pusha
    57 0000023F 9C                  <1>  pushf
    57                              <1> %ifstr %1
    57                              <1>  mov al, %1
    57                              <1> %elifnum %1
    57 00000240 B00A                <1>  mov al, %1
    57                              <1> %elifidni %1,al
    57                              <1>  nop
    57                              <1> %elifidni %1,ah
    57                              <1>  mov al, ah
    57                              <1> %elifidni %1,bl
    57                              <1>  mov al, bl
    57                              <1> %elifidni %1,bh
    57                              <1>  mov al, bh
    57                              <1> %elifidni %1,cl
    57                              <1>  mov al, cl
    57                              <1> %elifidni %1,ch
    57                              <1>  mov al, ch
    57                              <1> %elifidni %1,dl
    57                              <1>  mov al, dl
    57                              <1> %elifidni %1,dh
    57                              <1>  mov al, dh
    57                              <1> %else
    57                              <1>  mov al, %1
    57                              <1> %endif
    57 00000242 83EC02              <1>  sub esp, 2
    57 00000245 89E7                <1>  mov edi, esp
    57 00000247 8807                <1>  mov [edi], al
    57                              <1>  _syscall_write 1, edi, 1
    57                              <2>  _syscall_3 4,%1,%2,%3
    57 00000249 52                  <3>  push edx
    57 0000024A 51                  <3>  push ecx
    57 0000024B 53                  <3>  push ebx
    57 0000024C 6A04                <3>  push %1
    57 0000024E 6A01                <3>  push %2
    57 00000250 57                  <3>  push %3
    57 00000251 6A01                <3>  push %4
    57 00000253 5A                  <3>  pop edx
    57 00000254 59                  <3>  pop ecx
    57 00000255 5B                  <3>  pop ebx
    57 00000256 58                  <3>  pop eax
    57 00000257 CD80                <3>  int 0x80
    57 00000259 5B                  <3>  pop ebx
    57 0000025A 59                  <3>  pop ecx
    57 0000025B 5A                  <3>  pop edx
    57 0000025C 83C402              <1>  add esp, 2
    57 0000025F 9D                  <1>  popf
    57 00000260 61                  <1>  popa
    58 00000261 E84F100000              call deletelist
    59 00000266 E90F010000              jmp finish
    60                                  t:
    61                                  GETUN eax
    61 0000026B 60                  <1> pushad
    61 0000026C 9C                  <1> pushfd
    61                              <1> 
    61 0000026D 31FF                <1> xor edi,edi
    61 0000026F 31F6                <1> xor esi,esi
    61                              <1> %%m1:
    61                              <1> GETCHAR
    61 00000271 9C                  <2>  pushf
    61 00000272 57                  <2>  push edi
    61 00000273 83EC02              <2>  sub esp, 2
    61 00000276 89E7                <2>  mov edi, esp
    61                              <2>  _syscall_read 0, edi, 1
    61                              <3>  _syscall_3 3,%1,%2,%3
    61 00000278 52                  <4>  push edx
    61 00000279 51                  <4>  push ecx
    61 0000027A 53                  <4>  push ebx
    61 0000027B 6A03                <4>  push %1
    61 0000027D 6A00                <4>  push %2
    61 0000027F 57                  <4>  push %3
    61 00000280 6A01                <4>  push %4
    61 00000282 5A                  <4>  pop edx
    61 00000283 59                  <4>  pop ecx
    61 00000284 5B                  <4>  pop ebx
    61 00000285 58                  <4>  pop eax
    61 00000286 CD80                <4>  int 0x80
    61 00000288 5B                  <4>  pop ebx
    61 00000289 59                  <4>  pop ecx
    61 0000028A 5A                  <4>  pop edx
    61 0000028B 83F801              <2>  cmp eax, 1
    61 0000028E 7506                <2>  jne %%eof_reached
    61 00000290 31C0                <2>  xor eax,eax
    61 00000292 8A07                <2>  mov al, [edi]
    61 00000294 EB04                <2>  jmp %%gcquit
    61                              <2> %%eof_reached:
    61 00000296 31C0                <2>  xor eax, eax
    61 00000298 F7D0                <2>  not eax
    61                              <2> %%gcquit:
    61 0000029A 83C402              <2>  add esp, 2
    61 0000029D 5F                  <2>  pop edi
    61 0000029E 9D                  <2>  popf
    61 0000029F 3C0A                <1> cmp al,0xA
    61 000002A1 7421                <1> je %%m2
    61 000002A3 3C30                <1> cmp al,'0'
    61 000002A5 7278                <1> jb %%m_err
    61 000002A7 3C39                <1> cmp al,'9'
    61 000002A9 7774                <1> ja %%m_err
    61 000002AB 47                  <1> inc edi
    61 000002AC 31C9                <1> xor ecx,ecx
    61 000002AE 88C1                <1> mov cl,al
    61 000002B0 89F0                <1> mov eax,esi
    61 000002B2 BB0A000000          <1> mov ebx,10
    61 000002B7 F7E3                <1> mul ebx
    61 000002B9 80E930              <1> sub cl,48
    61 000002BC 01C8                <1> add eax,ecx
    61 000002BE 720E                <1> jc %%m3
    61 000002C0 89C6                <1> mov esi,eax
    61 000002C2 EBAD                <1> jmp %%m1
    61                              <1> %%m2:
    61 000002C4 83FF00              <1> cmp edi,0
    61 000002C7 74A8                <1> je %%m1
    61 000002C9 E99A000000          <1> jmp %%m4
    61                              <1> %%m3: PRINT "too big number"
    61                              <2> ..@46.m3: 
    61 000002CE 60                  <2>  pusha
    61 000002CF 9C                  <2>  pushf
    61 000002D0 EB0F                <2>  jmp %%astr
    61 000002D2 746F6F20626967206E- <2> %%str db %1, 0
    61 000002DB 756D62657200        <2>
    61                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@50.astr: 
    61                              <3>  _syscall_3 4,%1,%2,%3
    61 000002E1 52                  <4>  push edx
    61 000002E2 51                  <4>  push ecx
    61 000002E3 53                  <4>  push ebx
    61 000002E4 6A04                <4>  push %1
    61 000002E6 6A01                <4>  push %2
    61 000002E8 68[D2020000]        <4>  push %3
    61 000002ED 6A0F                <4>  push %4
    61 000002EF 5A                  <4>  pop edx
    61 000002F0 59                  <4>  pop ecx
    61 000002F1 5B                  <4>  pop ebx
    61 000002F2 58                  <4>  pop eax
    61 000002F3 CD80                <4>  int 0x80
    61 000002F5 5B                  <4>  pop ebx
    61 000002F6 59                  <4>  pop ecx
    61 000002F7 5A                  <4>  pop edx
    61 000002F8 9D                  <2>  popf
    61 000002F9 61                  <2>  popa
    61                              <1> PUTCHAR 10
    61 000002FA 60                  <2>  pusha
    61 000002FB 9C                  <2>  pushf
    61                              <2> %ifstr %1
    61                              <2>  mov al, %1
    61                              <2> %elifnum %1
    61 000002FC B00A                <2>  mov al, %1
    61                              <2> %elifidni %1,al
    61                              <2>  nop
    61                              <2> %elifidni %1,ah
    61                              <2>  mov al, ah
    61                              <2> %elifidni %1,bl
    61                              <2>  mov al, bl
    61                              <2> %elifidni %1,bh
    61                              <2>  mov al, bh
    61                              <2> %elifidni %1,cl
    61                              <2>  mov al, cl
    61                              <2> %elifidni %1,ch
    61                              <2>  mov al, ch
    61                              <2> %elifidni %1,dl
    61                              <2>  mov al, dl
    61                              <2> %elifidni %1,dh
    61                              <2>  mov al, dh
    61                              <2> %else
    61                              <2>  mov al, %1
    61                              <2> %endif
    61 000002FE 83EC02              <2>  sub esp, 2
    61 00000301 89E7                <2>  mov edi, esp
    61 00000303 8807                <2>  mov [edi], al
    61                              <2>  _syscall_write 1, edi, 1
    61                              <3>  _syscall_3 4,%1,%2,%3
    61 00000305 52                  <4>  push edx
    61 00000306 51                  <4>  push ecx
    61 00000307 53                  <4>  push ebx
    61 00000308 6A04                <4>  push %1
    61 0000030A 6A01                <4>  push %2
    61 0000030C 57                  <4>  push %3
    61 0000030D 6A01                <4>  push %4
    61 0000030F 5A                  <4>  pop edx
    61 00000310 59                  <4>  pop ecx
    61 00000311 5B                  <4>  pop ebx
    61 00000312 58                  <4>  pop eax
    61 00000313 CD80                <4>  int 0x80
    61 00000315 5B                  <4>  pop ebx
    61 00000316 59                  <4>  pop ecx
    61 00000317 5A                  <4>  pop edx
    61 00000318 83C402              <2>  add esp, 2
    61 0000031B 9D                  <2>  popf
    61 0000031C 61                  <2>  popa
    61 0000031D EB49                <1> jmp %%m4
    61                              <1> %%m_err: PRINT "ERROR!!!"
    61                              <2> ..@46.m_err: 
    61 0000031F 60                  <2>  pusha
    61 00000320 9C                  <2>  pushf
    61 00000321 EB09                <2>  jmp %%astr
    61 00000323 4552524F5221212100  <2> %%str db %1, 0
    61                              <2> %%strln equ $-%%str
    61                              <2> %%astr: _syscall_write 1, %%str, %%strln
    61                              <3> ..@56.astr: 
    61                              <3>  _syscall_3 4,%1,%2,%3
    61 0000032C 52                  <4>  push edx
    61 0000032D 51                  <4>  push ecx
    61 0000032E 53                  <4>  push ebx
    61 0000032F 6A04                <4>  push %1
    61 00000331 6A01                <4>  push %2
    61 00000333 68[23030000]        <4>  push %3
    61 00000338 6A09                <4>  push %4
    61 0000033A 5A                  <4>  pop edx
    61 0000033B 59                  <4>  pop ecx
    61 0000033C 5B                  <4>  pop ebx
    61 0000033D 58                  <4>  pop eax
    61 0000033E CD80                <4>  int 0x80
    61 00000340 5B                  <4>  pop ebx
    61 00000341 59                  <4>  pop ecx
    61 00000342 5A                  <4>  pop edx
    61 00000343 9D                  <2>  popf
    61 00000344 61                  <2>  popa
    61                              <1> PUTCHAR 0xa
    61 00000345 60                  <2>  pusha
    61 00000346 9C                  <2>  pushf
    61                              <2> %ifstr %1
    61                              <2>  mov al, %1
    61                              <2> %elifnum %1
    61 00000347 B00A                <2>  mov al, %1
    61                              <2> %elifidni %1,al
    61                              <2>  nop
    61                              <2> %elifidni %1,ah
    61                              <2>  mov al, ah
    61                              <2> %elifidni %1,bl
    61                              <2>  mov al, bl
    61                              <2> %elifidni %1,bh
    61                              <2>  mov al, bh
    61                              <2> %elifidni %1,cl
    61                              <2>  mov al, cl
    61                              <2> %elifidni %1,ch
    61                              <2>  mov al, ch
    61                              <2> %elifidni %1,dl
    61                              <2>  mov al, dl
    61                              <2> %elifidni %1,dh
    61                              <2>  mov al, dh
    61                              <2> %else
    61                              <2>  mov al, %1
    61                              <2> %endif
    61 00000349 83EC02              <2>  sub esp, 2
    61 0000034C 89E7                <2>  mov edi, esp
    61 0000034E 8807                <2>  mov [edi], al
    61                              <2>  _syscall_write 1, edi, 1
    61                              <3>  _syscall_3 4,%1,%2,%3
    61 00000350 52                  <4>  push edx
    61 00000351 51                  <4>  push ecx
    61 00000352 53                  <4>  push ebx
    61 00000353 6A04                <4>  push %1
    61 00000355 6A01                <4>  push %2
    61 00000357 57                  <4>  push %3
    61 00000358 6A01                <4>  push %4
    61 0000035A 5A                  <4>  pop edx
    61 0000035B 59                  <4>  pop ecx
    61 0000035C 5B                  <4>  pop ebx
    61 0000035D 58                  <4>  pop eax
    61 0000035E CD80                <4>  int 0x80
    61 00000360 5B                  <4>  pop ebx
    61 00000361 59                  <4>  pop ecx
    61 00000362 5A                  <4>  pop edx
    61 00000363 83C402              <2>  add esp, 2
    61 00000366 9D                  <2>  popf
    61 00000367 61                  <2>  popa
    61                              <1> %%m4:
    61                              <1> 
    61 00000368 56                  <1> push esi
    61 00000369 83C404              <1> add esp,4
    61 0000036C 9D                  <1> popfd
    61 0000036D 61                  <1> popad
    61 0000036E 83EC28              <1> sub esp,40
    61 00000371 58                  <1> pop dword %1
    61 00000372 83C424              <1> add esp,36
    62 00000375 E995FCFFFF              jmp m2
    63                                  
    64                                  finish:
    65                                  PUTCHAR 0xA
    65 0000037A 60                  <1>  pusha
    65 0000037B 9C                  <1>  pushf
    65                              <1> %ifstr %1
    65                              <1>  mov al, %1
    65                              <1> %elifnum %1
    65 0000037C B00A                <1>  mov al, %1
    65                              <1> %elifidni %1,al
    65                              <1>  nop
    65                              <1> %elifidni %1,ah
    65                              <1>  mov al, ah
    65                              <1> %elifidni %1,bl
    65                              <1>  mov al, bl
    65                              <1> %elifidni %1,bh
    65                              <1>  mov al, bh
    65                              <1> %elifidni %1,cl
    65                              <1>  mov al, cl
    65                              <1> %elifidni %1,ch
    65                              <1>  mov al, ch
    65                              <1> %elifidni %1,dl
    65                              <1>  mov al, dl
    65                              <1> %elifidni %1,dh
    65                              <1>  mov al, dh
    65                              <1> %else
    65                              <1>  mov al, %1
    65                              <1> %endif
    65 0000037E 83EC02              <1>  sub esp, 2
    65 00000381 89E7                <1>  mov edi, esp
    65 00000383 8807                <1>  mov [edi], al
    65                              <1>  _syscall_write 1, edi, 1
    65                              <2>  _syscall_3 4,%1,%2,%3
    65 00000385 52                  <3>  push edx
    65 00000386 51                  <3>  push ecx
    65 00000387 53                  <3>  push ebx
    65 00000388 6A04                <3>  push %1
    65 0000038A 6A01                <3>  push %2
    65 0000038C 57                  <3>  push %3
    65 0000038D 6A01                <3>  push %4
    65 0000038F 5A                  <3>  pop edx
    65 00000390 59                  <3>  pop ecx
    65 00000391 5B                  <3>  pop ebx
    65 00000392 58                  <3>  pop eax
    65 00000393 CD80                <3>  int 0x80
    65 00000395 5B                  <3>  pop ebx
    65 00000396 59                  <3>  pop ecx
    65 00000397 5A                  <3>  pop edx
    65 00000398 83C402              <1>  add esp, 2
    65 0000039B 9D                  <1>  popf
    65 0000039C 61                  <1>  popa
    66                                  FINISH
    66                              <1>  _syscall_exit %1
    66 0000039D BB00000000          <2>  mov ebx, %1
    66 000003A2 B801000000          <2>  mov eax, 1
    66 000003A7 CD80                <2>  int 0x80
    67                                  
    68                                  ; собираем кучу
    69                                  init_heap:
    70 000003A9 31DB                    xor ebx, ebx
    71 000003AB B82D000000              mov eax, 45
    72 000003B0 CD80                    int 0x80
    73                                  
    74 000003B2 83C03C                  add eax,6*k
    75 000003B5 89C3                    mov ebx, eax
    76 000003B7 B82D000000              mov eax, 45
    77 000003BC CD80                    int 0x80
    78                                  
    79 000003BE 83E806                  sub eax,6
    80 000003C1 B90A000000              mov ecx, heap_size
    81 000003C6 BB00000000              mov ebx, NULL
    82 000003CB 895802                  l: mov[eax+node.next], ebx
    83 000003CE 89C3                    mov ebx, eax
    84 000003D0 83E806                  sub eax,  6
    85 000003D3 E2F6                    loop l
    86 000003D5 891D[00000000]          mov [heap_ptr], ebx 
    87 000003DB C3                      ret
    88                                  
    89                                  ; добавляем элемент в начало цикла
    90                                  new:
    91 000003DC 8B3D[00000000]          mov edi, [heap_ptr]
    92 000003E2 83FF00                  cmp edi, NULL
    93 000003E5 740A                    je empty
    94 000003E7 FF7702                  push dword[edi+node.next]
    95 000003EA 8F05[00000000]          pop dword[heap_ptr]
    96 000003F0 C3                      ret
    97                                  
    98                                  empty:
    99 000003F1 BF00000000              mov edi, 0
   100                                  PRINT "empty"
   100 000003F6 60                  <1>  pusha
   100 000003F7 9C                  <1>  pushf
   100 000003F8 EB06                <1>  jmp %%astr
   100 000003FA 656D70747900        <1> %%str db %1, 0
   100                              <1> %%strln equ $-%%str
   100                              <1> %%astr: _syscall_write 1, %%str, %%strln
   100                              <2> ..@67.astr: 
   100                              <2>  _syscall_3 4,%1,%2,%3
   100 00000400 52                  <3>  push edx
   100 00000401 51                  <3>  push ecx
   100 00000402 53                  <3>  push ebx
   100 00000403 6A04                <3>  push %1
   100 00000405 6A01                <3>  push %2
   100 00000407 68[FA030000]        <3>  push %3
   100 0000040C 6A06                <3>  push %4
   100 0000040E 5A                  <3>  pop edx
   100 0000040F 59                  <3>  pop ecx
   100 00000410 5B                  <3>  pop ebx
   100 00000411 58                  <3>  pop eax
   100 00000412 CD80                <3>  int 0x80
   100 00000414 5B                  <3>  pop ebx
   100 00000415 59                  <3>  pop ecx
   100 00000416 5A                  <3>  pop edx
   100 00000417 9D                  <1>  popf
   100 00000418 61                  <1>  popa
   101                                  PUTCHAR 0xA
   101 00000419 60                  <1>  pusha
   101 0000041A 9C                  <1>  pushf
   101                              <1> %ifstr %1
   101                              <1>  mov al, %1
   101                              <1> %elifnum %1
   101 0000041B B00A                <1>  mov al, %1
   101                              <1> %elifidni %1,al
   101                              <1>  nop
   101                              <1> %elifidni %1,ah
   101                              <1>  mov al, ah
   101                              <1> %elifidni %1,bl
   101                              <1>  mov al, bl
   101                              <1> %elifidni %1,bh
   101                              <1>  mov al, bh
   101                              <1> %elifidni %1,cl
   101                              <1>  mov al, cl
   101                              <1> %elifidni %1,ch
   101                              <1>  mov al, ch
   101                              <1> %elifidni %1,dl
   101                              <1>  mov al, dl
   101                              <1> %elifidni %1,dh
   101                              <1>  mov al, dh
   101                              <1> %else
   101                              <1>  mov al, %1
   101                              <1> %endif
   101 0000041D 83EC02              <1>  sub esp, 2
   101 00000420 89E7                <1>  mov edi, esp
   101 00000422 8807                <1>  mov [edi], al
   101                              <1>  _syscall_write 1, edi, 1
   101                              <2>  _syscall_3 4,%1,%2,%3
   101 00000424 52                  <3>  push edx
   101 00000425 51                  <3>  push ecx
   101 00000426 53                  <3>  push ebx
   101 00000427 6A04                <3>  push %1
   101 00000429 6A01                <3>  push %2
   101 0000042B 57                  <3>  push %3
   101 0000042C 6A01                <3>  push %4
   101 0000042E 5A                  <3>  pop edx
   101 0000042F 59                  <3>  pop ecx
   101 00000430 5B                  <3>  pop ebx
   101 00000431 58                  <3>  pop eax
   101 00000432 CD80                <3>  int 0x80
   101 00000434 5B                  <3>  pop ebx
   101 00000435 59                  <3>  pop ecx
   101 00000436 5A                  <3>  pop edx
   101 00000437 83C402              <1>  add esp, 2
   101 0000043A 9D                  <1>  popf
   101 0000043B 61                  <1>  popa
   102 0000043C C3                      ret
   103                                  
   104                                  ; вывод списка
   105                                  print:
   106 0000043D 8B1D[00000000]          mov ebx, [list]
   107                                  m3:
   108 00000443 83FB00                  cmp ebx, NULL
   109 00000446 0F84BF000000            je m4
   110 0000044C 31C0                    xor eax,eax
   111 0000044E 668B03                  mov ax, [ebx+node.elem]
   112                                  UNSINT eax
   112 00000451 60                  <1> pusha
   112 00000452 9C                  <1> pushf
   112 00000453 50                  <1> push dword %1
   112 00000454 58                  <1> pop eax
   112 00000455 89C7                <1> mov edi,eax
   112 00000457 BE0A000000          <1> mov esi,10
   112 0000045C 31DB                <1>  xor ebx,ebx
   112                              <1> %%m1:
   112 0000045E 31D2                <1>  xor edx,edx
   112 00000460 F7F6                <1>  div esi
   112 00000462 43                  <1>  inc ebx
   112 00000463 83F800              <1>  cmp eax,0
   112 00000466 75F6                <1>  jne %%m1
   112                              <1> 
   112 00000468 B801000000          <1>  mov eax,1
   112 0000046D 89D9                <1>  mov ecx,ebx
   112 0000046F 49                  <1>  dec ecx
   112                              <1> 
   112 00000470 83F900              <1>  cmp ecx,0
   112 00000473 7441                <1>  je %%m4
   112 00000475 F7E6                <1> %%m2: mul esi
   112 00000477 E2FC                <1>  loop %%m2
   112                              <1> 
   112 00000479 89C3                <1>  mov ebx,eax
   112                              <1> 
   112                              <1> %%m3:
   112 0000047B 89F8                <1>  mov eax,edi
   112 0000047D 31D2                <1>  xor edx,edx
   112 0000047F F7F3                <1>  div ebx
   112 00000481 0430                <1>  add al,'0'
   112                              <1>  PUTCHAR al
   112 00000483 60                  <2>  pusha
   112 00000484 9C                  <2>  pushf
   112                              <2> %ifstr %1
   112                              <2>  mov al, %1
   112                              <2> %elifnum %1
   112                              <2>  mov al, %1
   112                              <2> %elifidni %1,al
   112 00000485 90                  <2>  nop
   112                              <2> %elifidni %1,ah
   112                              <2>  mov al, ah
   112                              <2> %elifidni %1,bl
   112                              <2>  mov al, bl
   112                              <2> %elifidni %1,bh
   112                              <2>  mov al, bh
   112                              <2> %elifidni %1,cl
   112                              <2>  mov al, cl
   112                              <2> %elifidni %1,ch
   112                              <2>  mov al, ch
   112                              <2> %elifidni %1,dl
   112                              <2>  mov al, dl
   112                              <2> %elifidni %1,dh
   112                              <2>  mov al, dh
   112                              <2> %else
   112                              <2>  mov al, %1
   112                              <2> %endif
   112 00000486 83EC02              <2>  sub esp, 2
   112 00000489 89E7                <2>  mov edi, esp
   112 0000048B 8807                <2>  mov [edi], al
   112                              <2>  _syscall_write 1, edi, 1
   112                              <3>  _syscall_3 4,%1,%2,%3
   112 0000048D 52                  <4>  push edx
   112 0000048E 51                  <4>  push ecx
   112 0000048F 53                  <4>  push ebx
   112 00000490 6A04                <4>  push %1
   112 00000492 6A01                <4>  push %2
   112 00000494 57                  <4>  push %3
   112 00000495 6A01                <4>  push %4
   112 00000497 5A                  <4>  pop edx
   112 00000498 59                  <4>  pop ecx
   112 00000499 5B                  <4>  pop ebx
   112 0000049A 58                  <4>  pop eax
   112 0000049B CD80                <4>  int 0x80
   112 0000049D 5B                  <4>  pop ebx
   112 0000049E 59                  <4>  pop ecx
   112 0000049F 5A                  <4>  pop edx
   112 000004A0 83C402              <2>  add esp, 2
   112 000004A3 9D                  <2>  popf
   112 000004A4 61                  <2>  popa
   112 000004A5 89D7                <1>  mov edi,edx
   112 000004A7 31D2                <1>  xor edx,edx
   112 000004A9 89D8                <1>  mov eax,ebx
   112 000004AB F7F6                <1>  div esi
   112 000004AD 83F801              <1>  cmp eax,1
   112 000004B0 7404                <1>  je %%m4
   112 000004B2 89C3                <1>  mov ebx,eax
   112 000004B4 EBC5                <1>  jmp %%m3
   112                              <1>  %%m4:
   112 000004B6 89FA                <1>  mov edx,edi
   112 000004B8 80C230              <1>  add dl,'0'
   112                              <1>  PUTCHAR dl
   112 000004BB 60                  <2>  pusha
   112 000004BC 9C                  <2>  pushf
   112                              <2> %ifstr %1
   112                              <2>  mov al, %1
   112                              <2> %elifnum %1
   112                              <2>  mov al, %1
   112                              <2> %elifidni %1,al
   112                              <2>  nop
   112                              <2> %elifidni %1,ah
   112                              <2>  mov al, ah
   112                              <2> %elifidni %1,bl
   112                              <2>  mov al, bl
   112                              <2> %elifidni %1,bh
   112                              <2>  mov al, bh
   112                              <2> %elifidni %1,cl
   112                              <2>  mov al, cl
   112                              <2> %elifidni %1,ch
   112                              <2>  mov al, ch
   112                              <2> %elifidni %1,dl
   112 000004BD 88D0                <2>  mov al, dl
   112                              <2> %elifidni %1,dh
   112                              <2>  mov al, dh
   112                              <2> %else
   112                              <2>  mov al, %1
   112                              <2> %endif
   112 000004BF 83EC02              <2>  sub esp, 2
   112 000004C2 89E7                <2>  mov edi, esp
   112 000004C4 8807                <2>  mov [edi], al
   112                              <2>  _syscall_write 1, edi, 1
   112                              <3>  _syscall_3 4,%1,%2,%3
   112 000004C6 52                  <4>  push edx
   112 000004C7 51                  <4>  push ecx
   112 000004C8 53                  <4>  push ebx
   112 000004C9 6A04                <4>  push %1
   112 000004CB 6A01                <4>  push %2
   112 000004CD 57                  <4>  push %3
   112 000004CE 6A01                <4>  push %4
   112 000004D0 5A                  <4>  pop edx
   112 000004D1 59                  <4>  pop ecx
   112 000004D2 5B                  <4>  pop ebx
   112 000004D3 58                  <4>  pop eax
   112 000004D4 CD80                <4>  int 0x80
   112 000004D6 5B                  <4>  pop ebx
   112 000004D7 59                  <4>  pop ecx
   112 000004D8 5A                  <4>  pop edx
   112 000004D9 83C402              <2>  add esp, 2
   112 000004DC 9D                  <2>  popf
   112 000004DD 61                  <2>  popa
   112                              <1> 
   112                              <1> 
   112 000004DE 9D                  <1> popf
   112 000004DF 61                  <1> popa
   113                                  PUTCHAR 0xA
   113 000004E0 60                  <1>  pusha
   113 000004E1 9C                  <1>  pushf
   113                              <1> %ifstr %1
   113                              <1>  mov al, %1
   113                              <1> %elifnum %1
   113 000004E2 B00A                <1>  mov al, %1
   113                              <1> %elifidni %1,al
   113                              <1>  nop
   113                              <1> %elifidni %1,ah
   113                              <1>  mov al, ah
   113                              <1> %elifidni %1,bl
   113                              <1>  mov al, bl
   113                              <1> %elifidni %1,bh
   113                              <1>  mov al, bh
   113                              <1> %elifidni %1,cl
   113                              <1>  mov al, cl
   113                              <1> %elifidni %1,ch
   113                              <1>  mov al, ch
   113                              <1> %elifidni %1,dl
   113                              <1>  mov al, dl
   113                              <1> %elifidni %1,dh
   113                              <1>  mov al, dh
   113                              <1> %else
   113                              <1>  mov al, %1
   113                              <1> %endif
   113 000004E4 83EC02              <1>  sub esp, 2
   113 000004E7 89E7                <1>  mov edi, esp
   113 000004E9 8807                <1>  mov [edi], al
   113                              <1>  _syscall_write 1, edi, 1
   113                              <2>  _syscall_3 4,%1,%2,%3
   113 000004EB 52                  <3>  push edx
   113 000004EC 51                  <3>  push ecx
   113 000004ED 53                  <3>  push ebx
   113 000004EE 6A04                <3>  push %1
   113 000004F0 6A01                <3>  push %2
   113 000004F2 57                  <3>  push %3
   113 000004F3 6A01                <3>  push %4
   113 000004F5 5A                  <3>  pop edx
   113 000004F6 59                  <3>  pop ecx
   113 000004F7 5B                  <3>  pop ebx
   113 000004F8 58                  <3>  pop eax
   113 000004F9 CD80                <3>  int 0x80
   113 000004FB 5B                  <3>  pop ebx
   113 000004FC 59                  <3>  pop ecx
   113 000004FD 5A                  <3>  pop edx
   113 000004FE 83C402              <1>  add esp, 2
   113 00000501 9D                  <1>  popf
   113 00000502 61                  <1>  popa
   114 00000503 8B5B02                  mov ebx,[ebx+node.next]
   115 00000506 E938FFFFFF              jmp m3
   116                                  m4:
   117 0000050B C3                      ret
   118                                  
   119                                  ;освобождаем
   120                                  free:
   121 0000050C FF35[00000000]          push dword[heap_ptr]
   122 00000512 893D[00000000]          mov [heap_ptr], edi
   123 00000518 8F4702                  pop dword[edi+node.next]
   124 0000051B C3                      ret
   125                                  
   126                                  ;удаление первого элемента
   127                                  del1:
   128 0000051C 60                      pushad
   129 0000051D 8B3D[00000000]          mov edi, [list]
   130 00000523 FF7702                  push dword[edi+node.next]
   131 00000526 8F05[00000000]          pop dword[list]
   132 0000052C E8DBFFFFFF              call free
   133 00000531 61                      popad
   134 00000532 E806FFFFFF              call print
   135 00000537 C3                      ret
   136                                  
   137                                  ;удавление последнего
   138                                  dell:
   139 00000538 60                      pushad
   140 00000539 8B1D[00000000]          mov ebx, [list]
   141 0000053F BA00000000              mov edx, NULL
   142                                  met1:
   143 00000544 837B0200                cmp dword[ebx+node.next], NULL
   144 00000548 7510                    jne met2
   145 0000054A C7420200000000          mov dword[edx+node.next], NULL
   146 00000551 89DF                    mov edi, ebx
   147 00000553 E8B4FFFFFF              call free
   148 00000558 EB07                    jmp pri
   149                                  met2:
   150 0000055A 89DA                    mov edx, ebx
   151 0000055C 8B5B02                  mov ebx, [ebx+node.next]
   152 0000055F EBE3                    jmp met1
   153                                  pri:
   154 00000561 61                      popad
   155 00000562 E8D6FEFFFF              call print
   156 00000567 C3                      ret
   157                                  
   158                                  ;удаление звена с введенным значением
   159                                  delete:
   160                                  PRINT "Введите значение звена, которое надо удалить"
   160 00000568 60                  <1>  pusha
   160 00000569 9C                  <1>  pushf
   160 0000056A EB53                <1>  jmp %%astr
   160 0000056C D092D0B2D0B5D0B4D0- <1> %%str db %1, 0
   160 00000575 B8D182D0B520D0B7D0- <1>
   160 0000057E BDD0B0D187D0B5D0BD- <1>
   160 00000587 D0B8D0B520D0B7D0B2- <1>
   160 00000590 D0B5D0BDD0B02C20D0- <1>
   160 00000599 BAD0BED182D0BED180- <1>
   160 000005A2 D0BED0B520D0BDD0B0- <1>
   160 000005AB D0B4D0BE20D183D0B4- <1>
   160 000005B4 D0B0D0BBD0B8D182D1- <1>
   160 000005BD 8C00                <1>
   160                              <1> %%strln equ $-%%str
   160                              <1> %%astr: _syscall_write 1, %%str, %%strln
   160                              <2> ..@83.astr: 
   160                              <2>  _syscall_3 4,%1,%2,%3
   160 000005BF 52                  <3>  push edx
   160 000005C0 51                  <3>  push ecx
   160 000005C1 53                  <3>  push ebx
   160 000005C2 6A04                <3>  push %1
   160 000005C4 6A01                <3>  push %2
   160 000005C6 68[6C050000]        <3>  push %3
   160 000005CB 6A53                <3>  push %4
   160 000005CD 5A                  <3>  pop edx
   160 000005CE 59                  <3>  pop ecx
   160 000005CF 5B                  <3>  pop ebx
   160 000005D0 58                  <3>  pop eax
   160 000005D1 CD80                <3>  int 0x80
   160 000005D3 5B                  <3>  pop ebx
   160 000005D4 59                  <3>  pop ecx
   160 000005D5 5A                  <3>  pop edx
   160 000005D6 9D                  <1>  popf
   160 000005D7 61                  <1>  popa
   161                                  PUTCHAR 0xA
   161 000005D8 60                  <1>  pusha
   161 000005D9 9C                  <1>  pushf
   161                              <1> %ifstr %1
   161                              <1>  mov al, %1
   161                              <1> %elifnum %1
   161 000005DA B00A                <1>  mov al, %1
   161                              <1> %elifidni %1,al
   161                              <1>  nop
   161                              <1> %elifidni %1,ah
   161                              <1>  mov al, ah
   161                              <1> %elifidni %1,bl
   161                              <1>  mov al, bl
   161                              <1> %elifidni %1,bh
   161                              <1>  mov al, bh
   161                              <1> %elifidni %1,cl
   161                              <1>  mov al, cl
   161                              <1> %elifidni %1,ch
   161                              <1>  mov al, ch
   161                              <1> %elifidni %1,dl
   161                              <1>  mov al, dl
   161                              <1> %elifidni %1,dh
   161                              <1>  mov al, dh
   161                              <1> %else
   161                              <1>  mov al, %1
   161                              <1> %endif
   161 000005DC 83EC02              <1>  sub esp, 2
   161 000005DF 89E7                <1>  mov edi, esp
   161 000005E1 8807                <1>  mov [edi], al
   161                              <1>  _syscall_write 1, edi, 1
   161                              <2>  _syscall_3 4,%1,%2,%3
   161 000005E3 52                  <3>  push edx
   161 000005E4 51                  <3>  push ecx
   161 000005E5 53                  <3>  push ebx
   161 000005E6 6A04                <3>  push %1
   161 000005E8 6A01                <3>  push %2
   161 000005EA 57                  <3>  push %3
   161 000005EB 6A01                <3>  push %4
   161 000005ED 5A                  <3>  pop edx
   161 000005EE 59                  <3>  pop ecx
   161 000005EF 5B                  <3>  pop ebx
   161 000005F0 58                  <3>  pop eax
   161 000005F1 CD80                <3>  int 0x80
   161 000005F3 5B                  <3>  pop ebx
   161 000005F4 59                  <3>  pop ecx
   161 000005F5 5A                  <3>  pop edx
   161 000005F6 83C402              <1>  add esp, 2
   161 000005F9 9D                  <1>  popf
   161 000005FA 61                  <1>  popa
   162                                  GETUN eax
   162 000005FB 60                  <1> pushad
   162 000005FC 9C                  <1> pushfd
   162                              <1> 
   162 000005FD 31FF                <1> xor edi,edi
   162 000005FF 31F6                <1> xor esi,esi
   162                              <1> %%m1:
   162                              <1> GETCHAR
   162 00000601 9C                  <2>  pushf
   162 00000602 57                  <2>  push edi
   162 00000603 83EC02              <2>  sub esp, 2
   162 00000606 89E7                <2>  mov edi, esp
   162                              <2>  _syscall_read 0, edi, 1
   162                              <3>  _syscall_3 3,%1,%2,%3
   162 00000608 52                  <4>  push edx
   162 00000609 51                  <4>  push ecx
   162 0000060A 53                  <4>  push ebx
   162 0000060B 6A03                <4>  push %1
   162 0000060D 6A00                <4>  push %2
   162 0000060F 57                  <4>  push %3
   162 00000610 6A01                <4>  push %4
   162 00000612 5A                  <4>  pop edx
   162 00000613 59                  <4>  pop ecx
   162 00000614 5B                  <4>  pop ebx
   162 00000615 58                  <4>  pop eax
   162 00000616 CD80                <4>  int 0x80
   162 00000618 5B                  <4>  pop ebx
   162 00000619 59                  <4>  pop ecx
   162 0000061A 5A                  <4>  pop edx
   162 0000061B 83F801              <2>  cmp eax, 1
   162 0000061E 7506                <2>  jne %%eof_reached
   162 00000620 31C0                <2>  xor eax,eax
   162 00000622 8A07                <2>  mov al, [edi]
   162 00000624 EB04                <2>  jmp %%gcquit
   162                              <2> %%eof_reached:
   162 00000626 31C0                <2>  xor eax, eax
   162 00000628 F7D0                <2>  not eax
   162                              <2> %%gcquit:
   162 0000062A 83C402              <2>  add esp, 2
   162 0000062D 5F                  <2>  pop edi
   162 0000062E 9D                  <2>  popf
   162 0000062F 3C0A                <1> cmp al,0xA
   162 00000631 7421                <1> je %%m2
   162 00000633 3C30                <1> cmp al,'0'
   162 00000635 7278                <1> jb %%m_err
   162 00000637 3C39                <1> cmp al,'9'
   162 00000639 7774                <1> ja %%m_err
   162 0000063B 47                  <1> inc edi
   162 0000063C 31C9                <1> xor ecx,ecx
   162 0000063E 88C1                <1> mov cl,al
   162 00000640 89F0                <1> mov eax,esi
   162 00000642 BB0A000000          <1> mov ebx,10
   162 00000647 F7E3                <1> mul ebx
   162 00000649 80E930              <1> sub cl,48
   162 0000064C 01C8                <1> add eax,ecx
   162 0000064E 720E                <1> jc %%m3
   162 00000650 89C6                <1> mov esi,eax
   162 00000652 EBAD                <1> jmp %%m1
   162                              <1> %%m2:
   162 00000654 83FF00              <1> cmp edi,0
   162 00000657 74A8                <1> je %%m1
   162 00000659 E99A000000          <1> jmp %%m4
   162                              <1> %%m3: PRINT "too big number"
   162                              <2> ..@89.m3: 
   162 0000065E 60                  <2>  pusha
   162 0000065F 9C                  <2>  pushf
   162 00000660 EB0F                <2>  jmp %%astr
   162 00000662 746F6F20626967206E- <2> %%str db %1, 0
   162 0000066B 756D62657200        <2>
   162                              <2> %%strln equ $-%%str
   162                              <2> %%astr: _syscall_write 1, %%str, %%strln
   162                              <3> ..@93.astr: 
   162                              <3>  _syscall_3 4,%1,%2,%3
   162 00000671 52                  <4>  push edx
   162 00000672 51                  <4>  push ecx
   162 00000673 53                  <4>  push ebx
   162 00000674 6A04                <4>  push %1
   162 00000676 6A01                <4>  push %2
   162 00000678 68[62060000]        <4>  push %3
   162 0000067D 6A0F                <4>  push %4
   162 0000067F 5A                  <4>  pop edx
   162 00000680 59                  <4>  pop ecx
   162 00000681 5B                  <4>  pop ebx
   162 00000682 58                  <4>  pop eax
   162 00000683 CD80                <4>  int 0x80
   162 00000685 5B                  <4>  pop ebx
   162 00000686 59                  <4>  pop ecx
   162 00000687 5A                  <4>  pop edx
   162 00000688 9D                  <2>  popf
   162 00000689 61                  <2>  popa
   162                              <1> PUTCHAR 10
   162 0000068A 60                  <2>  pusha
   162 0000068B 9C                  <2>  pushf
   162                              <2> %ifstr %1
   162                              <2>  mov al, %1
   162                              <2> %elifnum %1
   162 0000068C B00A                <2>  mov al, %1
   162                              <2> %elifidni %1,al
   162                              <2>  nop
   162                              <2> %elifidni %1,ah
   162                              <2>  mov al, ah
   162                              <2> %elifidni %1,bl
   162                              <2>  mov al, bl
   162                              <2> %elifidni %1,bh
   162                              <2>  mov al, bh
   162                              <2> %elifidni %1,cl
   162                              <2>  mov al, cl
   162                              <2> %elifidni %1,ch
   162                              <2>  mov al, ch
   162                              <2> %elifidni %1,dl
   162                              <2>  mov al, dl
   162                              <2> %elifidni %1,dh
   162                              <2>  mov al, dh
   162                              <2> %else
   162                              <2>  mov al, %1
   162                              <2> %endif
   162 0000068E 83EC02              <2>  sub esp, 2
   162 00000691 89E7                <2>  mov edi, esp
   162 00000693 8807                <2>  mov [edi], al
   162                              <2>  _syscall_write 1, edi, 1
   162                              <3>  _syscall_3 4,%1,%2,%3
   162 00000695 52                  <4>  push edx
   162 00000696 51                  <4>  push ecx
   162 00000697 53                  <4>  push ebx
   162 00000698 6A04                <4>  push %1
   162 0000069A 6A01                <4>  push %2
   162 0000069C 57                  <4>  push %3
   162 0000069D 6A01                <4>  push %4
   162 0000069F 5A                  <4>  pop edx
   162 000006A0 59                  <4>  pop ecx
   162 000006A1 5B                  <4>  pop ebx
   162 000006A2 58                  <4>  pop eax
   162 000006A3 CD80                <4>  int 0x80
   162 000006A5 5B                  <4>  pop ebx
   162 000006A6 59                  <4>  pop ecx
   162 000006A7 5A                  <4>  pop edx
   162 000006A8 83C402              <2>  add esp, 2
   162 000006AB 9D                  <2>  popf
   162 000006AC 61                  <2>  popa
   162 000006AD EB49                <1> jmp %%m4
   162                              <1> %%m_err: PRINT "ERROR!!!"
   162                              <2> ..@89.m_err: 
   162 000006AF 60                  <2>  pusha
   162 000006B0 9C                  <2>  pushf
   162 000006B1 EB09                <2>  jmp %%astr
   162 000006B3 4552524F5221212100  <2> %%str db %1, 0
   162                              <2> %%strln equ $-%%str
   162                              <2> %%astr: _syscall_write 1, %%str, %%strln
   162                              <3> ..@99.astr: 
   162                              <3>  _syscall_3 4,%1,%2,%3
   162 000006BC 52                  <4>  push edx
   162 000006BD 51                  <4>  push ecx
   162 000006BE 53                  <4>  push ebx
   162 000006BF 6A04                <4>  push %1
   162 000006C1 6A01                <4>  push %2
   162 000006C3 68[B3060000]        <4>  push %3
   162 000006C8 6A09                <4>  push %4
   162 000006CA 5A                  <4>  pop edx
   162 000006CB 59                  <4>  pop ecx
   162 000006CC 5B                  <4>  pop ebx
   162 000006CD 58                  <4>  pop eax
   162 000006CE CD80                <4>  int 0x80
   162 000006D0 5B                  <4>  pop ebx
   162 000006D1 59                  <4>  pop ecx
   162 000006D2 5A                  <4>  pop edx
   162 000006D3 9D                  <2>  popf
   162 000006D4 61                  <2>  popa
   162                              <1> PUTCHAR 0xa
   162 000006D5 60                  <2>  pusha
   162 000006D6 9C                  <2>  pushf
   162                              <2> %ifstr %1
   162                              <2>  mov al, %1
   162                              <2> %elifnum %1
   162 000006D7 B00A                <2>  mov al, %1
   162                              <2> %elifidni %1,al
   162                              <2>  nop
   162                              <2> %elifidni %1,ah
   162                              <2>  mov al, ah
   162                              <2> %elifidni %1,bl
   162                              <2>  mov al, bl
   162                              <2> %elifidni %1,bh
   162                              <2>  mov al, bh
   162                              <2> %elifidni %1,cl
   162                              <2>  mov al, cl
   162                              <2> %elifidni %1,ch
   162                              <2>  mov al, ch
   162                              <2> %elifidni %1,dl
   162                              <2>  mov al, dl
   162                              <2> %elifidni %1,dh
   162                              <2>  mov al, dh
   162                              <2> %else
   162                              <2>  mov al, %1
   162                              <2> %endif
   162 000006D9 83EC02              <2>  sub esp, 2
   162 000006DC 89E7                <2>  mov edi, esp
   162 000006DE 8807                <2>  mov [edi], al
   162                              <2>  _syscall_write 1, edi, 1
   162                              <3>  _syscall_3 4,%1,%2,%3
   162 000006E0 52                  <4>  push edx
   162 000006E1 51                  <4>  push ecx
   162 000006E2 53                  <4>  push ebx
   162 000006E3 6A04                <4>  push %1
   162 000006E5 6A01                <4>  push %2
   162 000006E7 57                  <4>  push %3
   162 000006E8 6A01                <4>  push %4
   162 000006EA 5A                  <4>  pop edx
   162 000006EB 59                  <4>  pop ecx
   162 000006EC 5B                  <4>  pop ebx
   162 000006ED 58                  <4>  pop eax
   162 000006EE CD80                <4>  int 0x80
   162 000006F0 5B                  <4>  pop ebx
   162 000006F1 59                  <4>  pop ecx
   162 000006F2 5A                  <4>  pop edx
   162 000006F3 83C402              <2>  add esp, 2
   162 000006F6 9D                  <2>  popf
   162 000006F7 61                  <2>  popa
   162                              <1> %%m4:
   162                              <1> 
   162 000006F8 56                  <1> push esi
   162 000006F9 83C404              <1> add esp,4
   162 000006FC 9D                  <1> popfd
   162 000006FD 61                  <1> popad
   162 000006FE 83EC28              <1> sub esp,40
   162 00000701 58                  <1> pop dword %1
   162 00000702 83C424              <1> add esp,36
   163 00000705 8B1D[00000000]          mov ebx, [list]
   164 0000070B BA00000000              mov edx, NULL
   165                                  metka1:
   166 00000710 83FB00                  cmp ebx, NULL
   167 00000713 7434                    je pr
   168 00000715 663903                  cmp [ebx+node.elem], ax
   169 00000718 7528                    jne metka2
   170 0000071A 83FA00                  cmp edx, NULL
   171 0000071D 7507                    jne metka3
   172 0000071F E8F8FDFFFF              call del1
   173 00000724 EB23                    jmp pr
   174                                  metka3:
   175 00000726 837B0200                cmp dword[ebx+node.next], NULL
   176 0000072A 7507                    jne metka4
   177 0000072C E807FEFFFF              call dell
   178 00000731 EB16                    jmp pr
   179                                  metka4:
   180 00000733 FF7302                  push dword[ebx+node.next]
   181 00000736 8F4202                  pop dword[edx+node.next]
   182 00000739 89DF                    mov edi, ebx
   183 0000073B E8CCFDFFFF              call free
   184 00000740 EB07                    jmp pr
   185                                  metka2:
   186 00000742 89DA                    mov edx, ebx
   187 00000744 8B5B02                  mov ebx, [ebx+node.next]
   188 00000747 EBC7                    jmp metka1
   189                                  pr:
   190 00000749 E8EFFCFFFF              call print
   191                                  PUTCHAR 0xA
   191 0000074E 60                  <1>  pusha
   191 0000074F 9C                  <1>  pushf
   191                              <1> %ifstr %1
   191                              <1>  mov al, %1
   191                              <1> %elifnum %1
   191 00000750 B00A                <1>  mov al, %1
   191                              <1> %elifidni %1,al
   191                              <1>  nop
   191                              <1> %elifidni %1,ah
   191                              <1>  mov al, ah
   191                              <1> %elifidni %1,bl
   191                              <1>  mov al, bl
   191                              <1> %elifidni %1,bh
   191                              <1>  mov al, bh
   191                              <1> %elifidni %1,cl
   191                              <1>  mov al, cl
   191                              <1> %elifidni %1,ch
   191                              <1>  mov al, ch
   191                              <1> %elifidni %1,dl
   191                              <1>  mov al, dl
   191                              <1> %elifidni %1,dh
   191                              <1>  mov al, dh
   191                              <1> %else
   191                              <1>  mov al, %1
   191                              <1> %endif
   191 00000752 83EC02              <1>  sub esp, 2
   191 00000755 89E7                <1>  mov edi, esp
   191 00000757 8807                <1>  mov [edi], al
   191                              <1>  _syscall_write 1, edi, 1
   191                              <2>  _syscall_3 4,%1,%2,%3
   191 00000759 52                  <3>  push edx
   191 0000075A 51                  <3>  push ecx
   191 0000075B 53                  <3>  push ebx
   191 0000075C 6A04                <3>  push %1
   191 0000075E 6A01                <3>  push %2
   191 00000760 57                  <3>  push %3
   191 00000761 6A01                <3>  push %4
   191 00000763 5A                  <3>  pop edx
   191 00000764 59                  <3>  pop ecx
   191 00000765 5B                  <3>  pop ebx
   191 00000766 58                  <3>  pop eax
   191 00000767 CD80                <3>  int 0x80
   191 00000769 5B                  <3>  pop ebx
   191 0000076A 59                  <3>  pop ecx
   191 0000076B 5A                  <3>  pop edx
   191 0000076C 83C402              <1>  add esp, 2
   191 0000076F 9D                  <1>  popf
   191 00000770 61                  <1>  popa
   192 00000771 C3                      ret
   193                                  
   194                                  ;вставить после
   195                                  vstavitposle:
   196                                  PRINT "Введите значение звена, после которого нужно вставить элемент"
   196 00000772 60                  <1>  pusha
   196 00000773 9C                  <1>  pushf
   196 00000774 EB73                <1>  jmp %%astr
   196 00000776 D092D0B2D0B5D0B4D0- <1> %%str db %1, 0
   196 0000077F B8D182D0B520D0B7D0- <1>
   196 00000788 BDD0B0D187D0B5D0BD- <1>
   196 00000791 D0B8D0B520D0B7D0B2- <1>
   196 0000079A D0B5D0BDD0B02C20D0- <1>
   196 000007A3 BFD0BED181D0BBD0B5- <1>
   196 000007AC 20D0BAD0BED182D0BE- <1>
   196 000007B5 D180D0BED0B3D0BE20- <1>
   196 000007BE D0BDD183D0B6D0BDD0- <1>
   196 000007C7 BE20D0B2D181D182D0- <1>
   196 000007D0 B0D0B2D0B8D182D18C- <1>
   196 000007D9 20D18DD0BBD0B5D0BC- <1>
   196 000007E2 D0B5D0BDD18200      <1>
   196                              <1> %%strln equ $-%%str
   196                              <1> %%astr: _syscall_write 1, %%str, %%strln
   196                              <2> ..@108.astr: 
   196                              <2>  _syscall_3 4,%1,%2,%3
   196 000007E9 52                  <3>  push edx
   196 000007EA 51                  <3>  push ecx
   196 000007EB 53                  <3>  push ebx
   196 000007EC 6A04                <3>  push %1
   196 000007EE 6A01                <3>  push %2
   196 000007F0 68[76070000]        <3>  push %3
   196 000007F5 6A73                <3>  push %4
   196 000007F7 5A                  <3>  pop edx
   196 000007F8 59                  <3>  pop ecx
   196 000007F9 5B                  <3>  pop ebx
   196 000007FA 58                  <3>  pop eax
   196 000007FB CD80                <3>  int 0x80
   196 000007FD 5B                  <3>  pop ebx
   196 000007FE 59                  <3>  pop ecx
   196 000007FF 5A                  <3>  pop edx
   196 00000800 9D                  <1>  popf
   196 00000801 61                  <1>  popa
   197                                  PUTCHAR 0xA
   197 00000802 60                  <1>  pusha
   197 00000803 9C                  <1>  pushf
   197                              <1> %ifstr %1
   197                              <1>  mov al, %1
   197                              <1> %elifnum %1
   197 00000804 B00A                <1>  mov al, %1
   197                              <1> %elifidni %1,al
   197                              <1>  nop
   197                              <1> %elifidni %1,ah
   197                              <1>  mov al, ah
   197                              <1> %elifidni %1,bl
   197                              <1>  mov al, bl
   197                              <1> %elifidni %1,bh
   197                              <1>  mov al, bh
   197                              <1> %elifidni %1,cl
   197                              <1>  mov al, cl
   197                              <1> %elifidni %1,ch
   197                              <1>  mov al, ch
   197                              <1> %elifidni %1,dl
   197                              <1>  mov al, dl
   197                              <1> %elifidni %1,dh
   197                              <1>  mov al, dh
   197                              <1> %else
   197                              <1>  mov al, %1
   197                              <1> %endif
   197 00000806 83EC02              <1>  sub esp, 2
   197 00000809 89E7                <1>  mov edi, esp
   197 0000080B 8807                <1>  mov [edi], al
   197                              <1>  _syscall_write 1, edi, 1
   197                              <2>  _syscall_3 4,%1,%2,%3
   197 0000080D 52                  <3>  push edx
   197 0000080E 51                  <3>  push ecx
   197 0000080F 53                  <3>  push ebx
   197 00000810 6A04                <3>  push %1
   197 00000812 6A01                <3>  push %2
   197 00000814 57                  <3>  push %3
   197 00000815 6A01                <3>  push %4
   197 00000817 5A                  <3>  pop edx
   197 00000818 59                  <3>  pop ecx
   197 00000819 5B                  <3>  pop ebx
   197 0000081A 58                  <3>  pop eax
   197 0000081B CD80                <3>  int 0x80
   197 0000081D 5B                  <3>  pop ebx
   197 0000081E 59                  <3>  pop ecx
   197 0000081F 5A                  <3>  pop edx
   197 00000820 83C402              <1>  add esp, 2
   197 00000823 9D                  <1>  popf
   197 00000824 61                  <1>  popa
   198                                  GETUN eax
   198 00000825 60                  <1> pushad
   198 00000826 9C                  <1> pushfd
   198                              <1> 
   198 00000827 31FF                <1> xor edi,edi
   198 00000829 31F6                <1> xor esi,esi
   198                              <1> %%m1:
   198                              <1> GETCHAR
   198 0000082B 9C                  <2>  pushf
   198 0000082C 57                  <2>  push edi
   198 0000082D 83EC02              <2>  sub esp, 2
   198 00000830 89E7                <2>  mov edi, esp
   198                              <2>  _syscall_read 0, edi, 1
   198                              <3>  _syscall_3 3,%1,%2,%3
   198 00000832 52                  <4>  push edx
   198 00000833 51                  <4>  push ecx
   198 00000834 53                  <4>  push ebx
   198 00000835 6A03                <4>  push %1
   198 00000837 6A00                <4>  push %2
   198 00000839 57                  <4>  push %3
   198 0000083A 6A01                <4>  push %4
   198 0000083C 5A                  <4>  pop edx
   198 0000083D 59                  <4>  pop ecx
   198 0000083E 5B                  <4>  pop ebx
   198 0000083F 58                  <4>  pop eax
   198 00000840 CD80                <4>  int 0x80
   198 00000842 5B                  <4>  pop ebx
   198 00000843 59                  <4>  pop ecx
   198 00000844 5A                  <4>  pop edx
   198 00000845 83F801              <2>  cmp eax, 1
   198 00000848 7506                <2>  jne %%eof_reached
   198 0000084A 31C0                <2>  xor eax,eax
   198 0000084C 8A07                <2>  mov al, [edi]
   198 0000084E EB04                <2>  jmp %%gcquit
   198                              <2> %%eof_reached:
   198 00000850 31C0                <2>  xor eax, eax
   198 00000852 F7D0                <2>  not eax
   198                              <2> %%gcquit:
   198 00000854 83C402              <2>  add esp, 2
   198 00000857 5F                  <2>  pop edi
   198 00000858 9D                  <2>  popf
   198 00000859 3C0A                <1> cmp al,0xA
   198 0000085B 7421                <1> je %%m2
   198 0000085D 3C30                <1> cmp al,'0'
   198 0000085F 7278                <1> jb %%m_err
   198 00000861 3C39                <1> cmp al,'9'
   198 00000863 7774                <1> ja %%m_err
   198 00000865 47                  <1> inc edi
   198 00000866 31C9                <1> xor ecx,ecx
   198 00000868 88C1                <1> mov cl,al
   198 0000086A 89F0                <1> mov eax,esi
   198 0000086C BB0A000000          <1> mov ebx,10
   198 00000871 F7E3                <1> mul ebx
   198 00000873 80E930              <1> sub cl,48
   198 00000876 01C8                <1> add eax,ecx
   198 00000878 720E                <1> jc %%m3
   198 0000087A 89C6                <1> mov esi,eax
   198 0000087C EBAD                <1> jmp %%m1
   198                              <1> %%m2:
   198 0000087E 83FF00              <1> cmp edi,0
   198 00000881 74A8                <1> je %%m1
   198 00000883 E99A000000          <1> jmp %%m4
   198                              <1> %%m3: PRINT "too big number"
   198                              <2> ..@114.m3: 
   198 00000888 60                  <2>  pusha
   198 00000889 9C                  <2>  pushf
   198 0000088A EB0F                <2>  jmp %%astr
   198 0000088C 746F6F20626967206E- <2> %%str db %1, 0
   198 00000895 756D62657200        <2>
   198                              <2> %%strln equ $-%%str
   198                              <2> %%astr: _syscall_write 1, %%str, %%strln
   198                              <3> ..@118.astr: 
   198                              <3>  _syscall_3 4,%1,%2,%3
   198 0000089B 52                  <4>  push edx
   198 0000089C 51                  <4>  push ecx
   198 0000089D 53                  <4>  push ebx
   198 0000089E 6A04                <4>  push %1
   198 000008A0 6A01                <4>  push %2
   198 000008A2 68[8C080000]        <4>  push %3
   198 000008A7 6A0F                <4>  push %4
   198 000008A9 5A                  <4>  pop edx
   198 000008AA 59                  <4>  pop ecx
   198 000008AB 5B                  <4>  pop ebx
   198 000008AC 58                  <4>  pop eax
   198 000008AD CD80                <4>  int 0x80
   198 000008AF 5B                  <4>  pop ebx
   198 000008B0 59                  <4>  pop ecx
   198 000008B1 5A                  <4>  pop edx
   198 000008B2 9D                  <2>  popf
   198 000008B3 61                  <2>  popa
   198                              <1> PUTCHAR 10
   198 000008B4 60                  <2>  pusha
   198 000008B5 9C                  <2>  pushf
   198                              <2> %ifstr %1
   198                              <2>  mov al, %1
   198                              <2> %elifnum %1
   198 000008B6 B00A                <2>  mov al, %1
   198                              <2> %elifidni %1,al
   198                              <2>  nop
   198                              <2> %elifidni %1,ah
   198                              <2>  mov al, ah
   198                              <2> %elifidni %1,bl
   198                              <2>  mov al, bl
   198                              <2> %elifidni %1,bh
   198                              <2>  mov al, bh
   198                              <2> %elifidni %1,cl
   198                              <2>  mov al, cl
   198                              <2> %elifidni %1,ch
   198                              <2>  mov al, ch
   198                              <2> %elifidni %1,dl
   198                              <2>  mov al, dl
   198                              <2> %elifidni %1,dh
   198                              <2>  mov al, dh
   198                              <2> %else
   198                              <2>  mov al, %1
   198                              <2> %endif
   198 000008B8 83EC02              <2>  sub esp, 2
   198 000008BB 89E7                <2>  mov edi, esp
   198 000008BD 8807                <2>  mov [edi], al
   198                              <2>  _syscall_write 1, edi, 1
   198                              <3>  _syscall_3 4,%1,%2,%3
   198 000008BF 52                  <4>  push edx
   198 000008C0 51                  <4>  push ecx
   198 000008C1 53                  <4>  push ebx
   198 000008C2 6A04                <4>  push %1
   198 000008C4 6A01                <4>  push %2
   198 000008C6 57                  <4>  push %3
   198 000008C7 6A01                <4>  push %4
   198 000008C9 5A                  <4>  pop edx
   198 000008CA 59                  <4>  pop ecx
   198 000008CB 5B                  <4>  pop ebx
   198 000008CC 58                  <4>  pop eax
   198 000008CD CD80                <4>  int 0x80
   198 000008CF 5B                  <4>  pop ebx
   198 000008D0 59                  <4>  pop ecx
   198 000008D1 5A                  <4>  pop edx
   198 000008D2 83C402              <2>  add esp, 2
   198 000008D5 9D                  <2>  popf
   198 000008D6 61                  <2>  popa
   198 000008D7 EB49                <1> jmp %%m4
   198                              <1> %%m_err: PRINT "ERROR!!!"
   198                              <2> ..@114.m_err: 
   198 000008D9 60                  <2>  pusha
   198 000008DA 9C                  <2>  pushf
   198 000008DB EB09                <2>  jmp %%astr
   198 000008DD 4552524F5221212100  <2> %%str db %1, 0
   198                              <2> %%strln equ $-%%str
   198                              <2> %%astr: _syscall_write 1, %%str, %%strln
   198                              <3> ..@124.astr: 
   198                              <3>  _syscall_3 4,%1,%2,%3
   198 000008E6 52                  <4>  push edx
   198 000008E7 51                  <4>  push ecx
   198 000008E8 53                  <4>  push ebx
   198 000008E9 6A04                <4>  push %1
   198 000008EB 6A01                <4>  push %2
   198 000008ED 68[DD080000]        <4>  push %3
   198 000008F2 6A09                <4>  push %4
   198 000008F4 5A                  <4>  pop edx
   198 000008F5 59                  <4>  pop ecx
   198 000008F6 5B                  <4>  pop ebx
   198 000008F7 58                  <4>  pop eax
   198 000008F8 CD80                <4>  int 0x80
   198 000008FA 5B                  <4>  pop ebx
   198 000008FB 59                  <4>  pop ecx
   198 000008FC 5A                  <4>  pop edx
   198 000008FD 9D                  <2>  popf
   198 000008FE 61                  <2>  popa
   198                              <1> PUTCHAR 0xa
   198 000008FF 60                  <2>  pusha
   198 00000900 9C                  <2>  pushf
   198                              <2> %ifstr %1
   198                              <2>  mov al, %1
   198                              <2> %elifnum %1
   198 00000901 B00A                <2>  mov al, %1
   198                              <2> %elifidni %1,al
   198                              <2>  nop
   198                              <2> %elifidni %1,ah
   198                              <2>  mov al, ah
   198                              <2> %elifidni %1,bl
   198                              <2>  mov al, bl
   198                              <2> %elifidni %1,bh
   198                              <2>  mov al, bh
   198                              <2> %elifidni %1,cl
   198                              <2>  mov al, cl
   198                              <2> %elifidni %1,ch
   198                              <2>  mov al, ch
   198                              <2> %elifidni %1,dl
   198                              <2>  mov al, dl
   198                              <2> %elifidni %1,dh
   198                              <2>  mov al, dh
   198                              <2> %else
   198                              <2>  mov al, %1
   198                              <2> %endif
   198 00000903 83EC02              <2>  sub esp, 2
   198 00000906 89E7                <2>  mov edi, esp
   198 00000908 8807                <2>  mov [edi], al
   198                              <2>  _syscall_write 1, edi, 1
   198                              <3>  _syscall_3 4,%1,%2,%3
   198 0000090A 52                  <4>  push edx
   198 0000090B 51                  <4>  push ecx
   198 0000090C 53                  <4>  push ebx
   198 0000090D 6A04                <4>  push %1
   198 0000090F 6A01                <4>  push %2
   198 00000911 57                  <4>  push %3
   198 00000912 6A01                <4>  push %4
   198 00000914 5A                  <4>  pop edx
   198 00000915 59                  <4>  pop ecx
   198 00000916 5B                  <4>  pop ebx
   198 00000917 58                  <4>  pop eax
   198 00000918 CD80                <4>  int 0x80
   198 0000091A 5B                  <4>  pop ebx
   198 0000091B 59                  <4>  pop ecx
   198 0000091C 5A                  <4>  pop edx
   198 0000091D 83C402              <2>  add esp, 2
   198 00000920 9D                  <2>  popf
   198 00000921 61                  <2>  popa
   198                              <1> %%m4:
   198                              <1> 
   198 00000922 56                  <1> push esi
   198 00000923 83C404              <1> add esp,4
   198 00000926 9D                  <1> popfd
   198 00000927 61                  <1> popad
   198 00000928 83EC28              <1> sub esp,40
   198 0000092B 58                  <1> pop dword %1
   198 0000092C 83C424              <1> add esp,36
   199                                  PUTCHAR 0xA
   199 0000092F 60                  <1>  pusha
   199 00000930 9C                  <1>  pushf
   199                              <1> %ifstr %1
   199                              <1>  mov al, %1
   199                              <1> %elifnum %1
   199 00000931 B00A                <1>  mov al, %1
   199                              <1> %elifidni %1,al
   199                              <1>  nop
   199                              <1> %elifidni %1,ah
   199                              <1>  mov al, ah
   199                              <1> %elifidni %1,bl
   199                              <1>  mov al, bl
   199                              <1> %elifidni %1,bh
   199                              <1>  mov al, bh
   199                              <1> %elifidni %1,cl
   199                              <1>  mov al, cl
   199                              <1> %elifidni %1,ch
   199                              <1>  mov al, ch
   199                              <1> %elifidni %1,dl
   199                              <1>  mov al, dl
   199                              <1> %elifidni %1,dh
   199                              <1>  mov al, dh
   199                              <1> %else
   199                              <1>  mov al, %1
   199                              <1> %endif
   199 00000933 83EC02              <1>  sub esp, 2
   199 00000936 89E7                <1>  mov edi, esp
   199 00000938 8807                <1>  mov [edi], al
   199                              <1>  _syscall_write 1, edi, 1
   199                              <2>  _syscall_3 4,%1,%2,%3
   199 0000093A 52                  <3>  push edx
   199 0000093B 51                  <3>  push ecx
   199 0000093C 53                  <3>  push ebx
   199 0000093D 6A04                <3>  push %1
   199 0000093F 6A01                <3>  push %2
   199 00000941 57                  <3>  push %3
   199 00000942 6A01                <3>  push %4
   199 00000944 5A                  <3>  pop edx
   199 00000945 59                  <3>  pop ecx
   199 00000946 5B                  <3>  pop ebx
   199 00000947 58                  <3>  pop eax
   199 00000948 CD80                <3>  int 0x80
   199 0000094A 5B                  <3>  pop ebx
   199 0000094B 59                  <3>  pop ecx
   199 0000094C 5A                  <3>  pop edx
   199 0000094D 83C402              <1>  add esp, 2
   199 00000950 9D                  <1>  popf
   199 00000951 61                  <1>  popa
   200 00000952 E82F090000              call find
   201                                  PRINT "введите значние элемента"
   201 00000957 60                  <1>  pusha
   201 00000958 9C                  <1>  pushf
   201 00000959 EB2F                <1>  jmp %%astr
   201 0000095B D0B2D0B2D0B5D0B4D0- <1> %%str db %1, 0
   201 00000964 B8D182D0B520D0B7D0- <1>
   201 0000096D BDD0B0D187D0BDD0B8- <1>
   201 00000976 D0B520D18DD0BBD0B5- <1>
   201 0000097F D0BCD0B5D0BDD182D0- <1>
   201 00000988 B000                <1>
   201                              <1> %%strln equ $-%%str
   201                              <1> %%astr: _syscall_write 1, %%str, %%strln
   201                              <2> ..@133.astr: 
   201                              <2>  _syscall_3 4,%1,%2,%3
   201 0000098A 52                  <3>  push edx
   201 0000098B 51                  <3>  push ecx
   201 0000098C 53                  <3>  push ebx
   201 0000098D 6A04                <3>  push %1
   201 0000098F 6A01                <3>  push %2
   201 00000991 68[5B090000]        <3>  push %3
   201 00000996 6A2F                <3>  push %4
   201 00000998 5A                  <3>  pop edx
   201 00000999 59                  <3>  pop ecx
   201 0000099A 5B                  <3>  pop ebx
   201 0000099B 58                  <3>  pop eax
   201 0000099C CD80                <3>  int 0x80
   201 0000099E 5B                  <3>  pop ebx
   201 0000099F 59                  <3>  pop ecx
   201 000009A0 5A                  <3>  pop edx
   201 000009A1 9D                  <1>  popf
   201 000009A2 61                  <1>  popa
   202                                  PUTCHAR 0xA
   202 000009A3 60                  <1>  pusha
   202 000009A4 9C                  <1>  pushf
   202                              <1> %ifstr %1
   202                              <1>  mov al, %1
   202                              <1> %elifnum %1
   202 000009A5 B00A                <1>  mov al, %1
   202                              <1> %elifidni %1,al
   202                              <1>  nop
   202                              <1> %elifidni %1,ah
   202                              <1>  mov al, ah
   202                              <1> %elifidni %1,bl
   202                              <1>  mov al, bl
   202                              <1> %elifidni %1,bh
   202                              <1>  mov al, bh
   202                              <1> %elifidni %1,cl
   202                              <1>  mov al, cl
   202                              <1> %elifidni %1,ch
   202                              <1>  mov al, ch
   202                              <1> %elifidni %1,dl
   202                              <1>  mov al, dl
   202                              <1> %elifidni %1,dh
   202                              <1>  mov al, dh
   202                              <1> %else
   202                              <1>  mov al, %1
   202                              <1> %endif
   202 000009A7 83EC02              <1>  sub esp, 2
   202 000009AA 89E7                <1>  mov edi, esp
   202 000009AC 8807                <1>  mov [edi], al
   202                              <1>  _syscall_write 1, edi, 1
   202                              <2>  _syscall_3 4,%1,%2,%3
   202 000009AE 52                  <3>  push edx
   202 000009AF 51                  <3>  push ecx
   202 000009B0 53                  <3>  push ebx
   202 000009B1 6A04                <3>  push %1
   202 000009B3 6A01                <3>  push %2
   202 000009B5 57                  <3>  push %3
   202 000009B6 6A01                <3>  push %4
   202 000009B8 5A                  <3>  pop edx
   202 000009B9 59                  <3>  pop ecx
   202 000009BA 5B                  <3>  pop ebx
   202 000009BB 58                  <3>  pop eax
   202 000009BC CD80                <3>  int 0x80
   202 000009BE 5B                  <3>  pop ebx
   202 000009BF 59                  <3>  pop ecx
   202 000009C0 5A                  <3>  pop edx
   202 000009C1 83C402              <1>  add esp, 2
   202 000009C4 9D                  <1>  popf
   202 000009C5 61                  <1>  popa
   203                                  GETUN eax
   203 000009C6 60                  <1> pushad
   203 000009C7 9C                  <1> pushfd
   203                              <1> 
   203 000009C8 31FF                <1> xor edi,edi
   203 000009CA 31F6                <1> xor esi,esi
   203                              <1> %%m1:
   203                              <1> GETCHAR
   203 000009CC 9C                  <2>  pushf
   203 000009CD 57                  <2>  push edi
   203 000009CE 83EC02              <2>  sub esp, 2
   203 000009D1 89E7                <2>  mov edi, esp
   203                              <2>  _syscall_read 0, edi, 1
   203                              <3>  _syscall_3 3,%1,%2,%3
   203 000009D3 52                  <4>  push edx
   203 000009D4 51                  <4>  push ecx
   203 000009D5 53                  <4>  push ebx
   203 000009D6 6A03                <4>  push %1
   203 000009D8 6A00                <4>  push %2
   203 000009DA 57                  <4>  push %3
   203 000009DB 6A01                <4>  push %4
   203 000009DD 5A                  <4>  pop edx
   203 000009DE 59                  <4>  pop ecx
   203 000009DF 5B                  <4>  pop ebx
   203 000009E0 58                  <4>  pop eax
   203 000009E1 CD80                <4>  int 0x80
   203 000009E3 5B                  <4>  pop ebx
   203 000009E4 59                  <4>  pop ecx
   203 000009E5 5A                  <4>  pop edx
   203 000009E6 83F801              <2>  cmp eax, 1
   203 000009E9 7506                <2>  jne %%eof_reached
   203 000009EB 31C0                <2>  xor eax,eax
   203 000009ED 8A07                <2>  mov al, [edi]
   203 000009EF EB04                <2>  jmp %%gcquit
   203                              <2> %%eof_reached:
   203 000009F1 31C0                <2>  xor eax, eax
   203 000009F3 F7D0                <2>  not eax
   203                              <2> %%gcquit:
   203 000009F5 83C402              <2>  add esp, 2
   203 000009F8 5F                  <2>  pop edi
   203 000009F9 9D                  <2>  popf
   203 000009FA 3C0A                <1> cmp al,0xA
   203 000009FC 7421                <1> je %%m2
   203 000009FE 3C30                <1> cmp al,'0'
   203 00000A00 7278                <1> jb %%m_err
   203 00000A02 3C39                <1> cmp al,'9'
   203 00000A04 7774                <1> ja %%m_err
   203 00000A06 47                  <1> inc edi
   203 00000A07 31C9                <1> xor ecx,ecx
   203 00000A09 88C1                <1> mov cl,al
   203 00000A0B 89F0                <1> mov eax,esi
   203 00000A0D BB0A000000          <1> mov ebx,10
   203 00000A12 F7E3                <1> mul ebx
   203 00000A14 80E930              <1> sub cl,48
   203 00000A17 01C8                <1> add eax,ecx
   203 00000A19 720E                <1> jc %%m3
   203 00000A1B 89C6                <1> mov esi,eax
   203 00000A1D EBAD                <1> jmp %%m1
   203                              <1> %%m2:
   203 00000A1F 83FF00              <1> cmp edi,0
   203 00000A22 74A8                <1> je %%m1
   203 00000A24 E99A000000          <1> jmp %%m4
   203                              <1> %%m3: PRINT "too big number"
   203                              <2> ..@139.m3: 
   203 00000A29 60                  <2>  pusha
   203 00000A2A 9C                  <2>  pushf
   203 00000A2B EB0F                <2>  jmp %%astr
   203 00000A2D 746F6F20626967206E- <2> %%str db %1, 0
   203 00000A36 756D62657200        <2>
   203                              <2> %%strln equ $-%%str
   203                              <2> %%astr: _syscall_write 1, %%str, %%strln
   203                              <3> ..@143.astr: 
   203                              <3>  _syscall_3 4,%1,%2,%3
   203 00000A3C 52                  <4>  push edx
   203 00000A3D 51                  <4>  push ecx
   203 00000A3E 53                  <4>  push ebx
   203 00000A3F 6A04                <4>  push %1
   203 00000A41 6A01                <4>  push %2
   203 00000A43 68[2D0A0000]        <4>  push %3
   203 00000A48 6A0F                <4>  push %4
   203 00000A4A 5A                  <4>  pop edx
   203 00000A4B 59                  <4>  pop ecx
   203 00000A4C 5B                  <4>  pop ebx
   203 00000A4D 58                  <4>  pop eax
   203 00000A4E CD80                <4>  int 0x80
   203 00000A50 5B                  <4>  pop ebx
   203 00000A51 59                  <4>  pop ecx
   203 00000A52 5A                  <4>  pop edx
   203 00000A53 9D                  <2>  popf
   203 00000A54 61                  <2>  popa
   203                              <1> PUTCHAR 10
   203 00000A55 60                  <2>  pusha
   203 00000A56 9C                  <2>  pushf
   203                              <2> %ifstr %1
   203                              <2>  mov al, %1
   203                              <2> %elifnum %1
   203 00000A57 B00A                <2>  mov al, %1
   203                              <2> %elifidni %1,al
   203                              <2>  nop
   203                              <2> %elifidni %1,ah
   203                              <2>  mov al, ah
   203                              <2> %elifidni %1,bl
   203                              <2>  mov al, bl
   203                              <2> %elifidni %1,bh
   203                              <2>  mov al, bh
   203                              <2> %elifidni %1,cl
   203                              <2>  mov al, cl
   203                              <2> %elifidni %1,ch
   203                              <2>  mov al, ch
   203                              <2> %elifidni %1,dl
   203                              <2>  mov al, dl
   203                              <2> %elifidni %1,dh
   203                              <2>  mov al, dh
   203                              <2> %else
   203                              <2>  mov al, %1
   203                              <2> %endif
   203 00000A59 83EC02              <2>  sub esp, 2
   203 00000A5C 89E7                <2>  mov edi, esp
   203 00000A5E 8807                <2>  mov [edi], al
   203                              <2>  _syscall_write 1, edi, 1
   203                              <3>  _syscall_3 4,%1,%2,%3
   203 00000A60 52                  <4>  push edx
   203 00000A61 51                  <4>  push ecx
   203 00000A62 53                  <4>  push ebx
   203 00000A63 6A04                <4>  push %1
   203 00000A65 6A01                <4>  push %2
   203 00000A67 57                  <4>  push %3
   203 00000A68 6A01                <4>  push %4
   203 00000A6A 5A                  <4>  pop edx
   203 00000A6B 59                  <4>  pop ecx
   203 00000A6C 5B                  <4>  pop ebx
   203 00000A6D 58                  <4>  pop eax
   203 00000A6E CD80                <4>  int 0x80
   203 00000A70 5B                  <4>  pop ebx
   203 00000A71 59                  <4>  pop ecx
   203 00000A72 5A                  <4>  pop edx
   203 00000A73 83C402              <2>  add esp, 2
   203 00000A76 9D                  <2>  popf
   203 00000A77 61                  <2>  popa
   203 00000A78 EB49                <1> jmp %%m4
   203                              <1> %%m_err: PRINT "ERROR!!!"
   203                              <2> ..@139.m_err: 
   203 00000A7A 60                  <2>  pusha
   203 00000A7B 9C                  <2>  pushf
   203 00000A7C EB09                <2>  jmp %%astr
   203 00000A7E 4552524F5221212100  <2> %%str db %1, 0
   203                              <2> %%strln equ $-%%str
   203                              <2> %%astr: _syscall_write 1, %%str, %%strln
   203                              <3> ..@149.astr: 
   203                              <3>  _syscall_3 4,%1,%2,%3
   203 00000A87 52                  <4>  push edx
   203 00000A88 51                  <4>  push ecx
   203 00000A89 53                  <4>  push ebx
   203 00000A8A 6A04                <4>  push %1
   203 00000A8C 6A01                <4>  push %2
   203 00000A8E 68[7E0A0000]        <4>  push %3
   203 00000A93 6A09                <4>  push %4
   203 00000A95 5A                  <4>  pop edx
   203 00000A96 59                  <4>  pop ecx
   203 00000A97 5B                  <4>  pop ebx
   203 00000A98 58                  <4>  pop eax
   203 00000A99 CD80                <4>  int 0x80
   203 00000A9B 5B                  <4>  pop ebx
   203 00000A9C 59                  <4>  pop ecx
   203 00000A9D 5A                  <4>  pop edx
   203 00000A9E 9D                  <2>  popf
   203 00000A9F 61                  <2>  popa
   203                              <1> PUTCHAR 0xa
   203 00000AA0 60                  <2>  pusha
   203 00000AA1 9C                  <2>  pushf
   203                              <2> %ifstr %1
   203                              <2>  mov al, %1
   203                              <2> %elifnum %1
   203 00000AA2 B00A                <2>  mov al, %1
   203                              <2> %elifidni %1,al
   203                              <2>  nop
   203                              <2> %elifidni %1,ah
   203                              <2>  mov al, ah
   203                              <2> %elifidni %1,bl
   203                              <2>  mov al, bl
   203                              <2> %elifidni %1,bh
   203                              <2>  mov al, bh
   203                              <2> %elifidni %1,cl
   203                              <2>  mov al, cl
   203                              <2> %elifidni %1,ch
   203                              <2>  mov al, ch
   203                              <2> %elifidni %1,dl
   203                              <2>  mov al, dl
   203                              <2> %elifidni %1,dh
   203                              <2>  mov al, dh
   203                              <2> %else
   203                              <2>  mov al, %1
   203                              <2> %endif
   203 00000AA4 83EC02              <2>  sub esp, 2
   203 00000AA7 89E7                <2>  mov edi, esp
   203 00000AA9 8807                <2>  mov [edi], al
   203                              <2>  _syscall_write 1, edi, 1
   203                              <3>  _syscall_3 4,%1,%2,%3
   203 00000AAB 52                  <4>  push edx
   203 00000AAC 51                  <4>  push ecx
   203 00000AAD 53                  <4>  push ebx
   203 00000AAE 6A04                <4>  push %1
   203 00000AB0 6A01                <4>  push %2
   203 00000AB2 57                  <4>  push %3
   203 00000AB3 6A01                <4>  push %4
   203 00000AB5 5A                  <4>  pop edx
   203 00000AB6 59                  <4>  pop ecx
   203 00000AB7 5B                  <4>  pop ebx
   203 00000AB8 58                  <4>  pop eax
   203 00000AB9 CD80                <4>  int 0x80
   203 00000ABB 5B                  <4>  pop ebx
   203 00000ABC 59                  <4>  pop ecx
   203 00000ABD 5A                  <4>  pop edx
   203 00000ABE 83C402              <2>  add esp, 2
   203 00000AC1 9D                  <2>  popf
   203 00000AC2 61                  <2>  popa
   203                              <1> %%m4:
   203                              <1> 
   203 00000AC3 56                  <1> push esi
   203 00000AC4 83C404              <1> add esp,4
   203 00000AC7 9D                  <1> popfd
   203 00000AC8 61                  <1> popad
   203 00000AC9 83EC28              <1> sub esp,40
   203 00000ACC 58                  <1> pop dword %1
   203 00000ACD 83C424              <1> add esp,36
   204 00000AD0 8B1D[04000000]          mov ebx,[a]
   205 00000AD6 FF7302                  push dword[ebx+node.next]
   206 00000AD9 E8FEF8FFFF              call new
   207 00000ADE 668907                  mov [edi+node.elem],ax
   208 00000AE1 897B02                  mov [ebx+node.next], edi
   209 00000AE4 8F4702                  pop dword[edi+node.next]
   210 00000AE7 E851F9FFFF              call print
   211 00000AEC C3                      ret
   212                                  
   213                                  ;вставить перое значение
   214                                  vstavitperv:
   215                                  PRINT "Введите значение элемента  (для вставки вначало)"
   215 00000AED 60                  <1>  pusha
   215 00000AEE 9C                  <1>  pushf
   215 00000AEF EB59                <1>  jmp %%astr
   215 00000AF1 D092D0B2D0B5D0B4D0- <1> %%str db %1, 0
   215 00000AFA B8D182D0B520D0B7D0- <1>
   215 00000B03 BDD0B0D187D0B5D0BD- <1>
   215 00000B0C D0B8D0B520D18DD0BB- <1>
   215 00000B15 D0B5D0BCD0B5D0BDD1- <1>
   215 00000B1E 82D0B0202028D0B4D0- <1>
   215 00000B27 BBD18F20D0B2D181D1- <1>
   215 00000B30 82D0B0D0B2D0BAD0B8- <1>
   215 00000B39 20D0B2D0BDD0B0D187- <1>
   215 00000B42 D0B0D0BBD0BE2900    <1>
   215                              <1> %%strln equ $-%%str
   215                              <1> %%astr: _syscall_write 1, %%str, %%strln
   215                              <2> ..@155.astr: 
   215                              <2>  _syscall_3 4,%1,%2,%3
   215 00000B4A 52                  <3>  push edx
   215 00000B4B 51                  <3>  push ecx
   215 00000B4C 53                  <3>  push ebx
   215 00000B4D 6A04                <3>  push %1
   215 00000B4F 6A01                <3>  push %2
   215 00000B51 68[F10A0000]        <3>  push %3
   215 00000B56 6A59                <3>  push %4
   215 00000B58 5A                  <3>  pop edx
   215 00000B59 59                  <3>  pop ecx
   215 00000B5A 5B                  <3>  pop ebx
   215 00000B5B 58                  <3>  pop eax
   215 00000B5C CD80                <3>  int 0x80
   215 00000B5E 5B                  <3>  pop ebx
   215 00000B5F 59                  <3>  pop ecx
   215 00000B60 5A                  <3>  pop edx
   215 00000B61 9D                  <1>  popf
   215 00000B62 61                  <1>  popa
   216                                  PUTCHAR 0xA
   216 00000B63 60                  <1>  pusha
   216 00000B64 9C                  <1>  pushf
   216                              <1> %ifstr %1
   216                              <1>  mov al, %1
   216                              <1> %elifnum %1
   216 00000B65 B00A                <1>  mov al, %1
   216                              <1> %elifidni %1,al
   216                              <1>  nop
   216                              <1> %elifidni %1,ah
   216                              <1>  mov al, ah
   216                              <1> %elifidni %1,bl
   216                              <1>  mov al, bl
   216                              <1> %elifidni %1,bh
   216                              <1>  mov al, bh
   216                              <1> %elifidni %1,cl
   216                              <1>  mov al, cl
   216                              <1> %elifidni %1,ch
   216                              <1>  mov al, ch
   216                              <1> %elifidni %1,dl
   216                              <1>  mov al, dl
   216                              <1> %elifidni %1,dh
   216                              <1>  mov al, dh
   216                              <1> %else
   216                              <1>  mov al, %1
   216                              <1> %endif
   216 00000B67 83EC02              <1>  sub esp, 2
   216 00000B6A 89E7                <1>  mov edi, esp
   216 00000B6C 8807                <1>  mov [edi], al
   216                              <1>  _syscall_write 1, edi, 1
   216                              <2>  _syscall_3 4,%1,%2,%3
   216 00000B6E 52                  <3>  push edx
   216 00000B6F 51                  <3>  push ecx
   216 00000B70 53                  <3>  push ebx
   216 00000B71 6A04                <3>  push %1
   216 00000B73 6A01                <3>  push %2
   216 00000B75 57                  <3>  push %3
   216 00000B76 6A01                <3>  push %4
   216 00000B78 5A                  <3>  pop edx
   216 00000B79 59                  <3>  pop ecx
   216 00000B7A 5B                  <3>  pop ebx
   216 00000B7B 58                  <3>  pop eax
   216 00000B7C CD80                <3>  int 0x80
   216 00000B7E 5B                  <3>  pop ebx
   216 00000B7F 59                  <3>  pop ecx
   216 00000B80 5A                  <3>  pop edx
   216 00000B81 83C402              <1>  add esp, 2
   216 00000B84 9D                  <1>  popf
   216 00000B85 61                  <1>  popa
   217                                  GETUN eax
   217 00000B86 60                  <1> pushad
   217 00000B87 9C                  <1> pushfd
   217                              <1> 
   217 00000B88 31FF                <1> xor edi,edi
   217 00000B8A 31F6                <1> xor esi,esi
   217                              <1> %%m1:
   217                              <1> GETCHAR
   217 00000B8C 9C                  <2>  pushf
   217 00000B8D 57                  <2>  push edi
   217 00000B8E 83EC02              <2>  sub esp, 2
   217 00000B91 89E7                <2>  mov edi, esp
   217                              <2>  _syscall_read 0, edi, 1
   217                              <3>  _syscall_3 3,%1,%2,%3
   217 00000B93 52                  <4>  push edx
   217 00000B94 51                  <4>  push ecx
   217 00000B95 53                  <4>  push ebx
   217 00000B96 6A03                <4>  push %1
   217 00000B98 6A00                <4>  push %2
   217 00000B9A 57                  <4>  push %3
   217 00000B9B 6A01                <4>  push %4
   217 00000B9D 5A                  <4>  pop edx
   217 00000B9E 59                  <4>  pop ecx
   217 00000B9F 5B                  <4>  pop ebx
   217 00000BA0 58                  <4>  pop eax
   217 00000BA1 CD80                <4>  int 0x80
   217 00000BA3 5B                  <4>  pop ebx
   217 00000BA4 59                  <4>  pop ecx
   217 00000BA5 5A                  <4>  pop edx
   217 00000BA6 83F801              <2>  cmp eax, 1
   217 00000BA9 7506                <2>  jne %%eof_reached
   217 00000BAB 31C0                <2>  xor eax,eax
   217 00000BAD 8A07                <2>  mov al, [edi]
   217 00000BAF EB04                <2>  jmp %%gcquit
   217                              <2> %%eof_reached:
   217 00000BB1 31C0                <2>  xor eax, eax
   217 00000BB3 F7D0                <2>  not eax
   217                              <2> %%gcquit:
   217 00000BB5 83C402              <2>  add esp, 2
   217 00000BB8 5F                  <2>  pop edi
   217 00000BB9 9D                  <2>  popf
   217 00000BBA 3C0A                <1> cmp al,0xA
   217 00000BBC 7421                <1> je %%m2
   217 00000BBE 3C30                <1> cmp al,'0'
   217 00000BC0 7278                <1> jb %%m_err
   217 00000BC2 3C39                <1> cmp al,'9'
   217 00000BC4 7774                <1> ja %%m_err
   217 00000BC6 47                  <1> inc edi
   217 00000BC7 31C9                <1> xor ecx,ecx
   217 00000BC9 88C1                <1> mov cl,al
   217 00000BCB 89F0                <1> mov eax,esi
   217 00000BCD BB0A000000          <1> mov ebx,10
   217 00000BD2 F7E3                <1> mul ebx
   217 00000BD4 80E930              <1> sub cl,48
   217 00000BD7 01C8                <1> add eax,ecx
   217 00000BD9 720E                <1> jc %%m3
   217 00000BDB 89C6                <1> mov esi,eax
   217 00000BDD EBAD                <1> jmp %%m1
   217                              <1> %%m2:
   217 00000BDF 83FF00              <1> cmp edi,0
   217 00000BE2 74A8                <1> je %%m1
   217 00000BE4 E99A000000          <1> jmp %%m4
   217                              <1> %%m3: PRINT "too big number"
   217                              <2> ..@161.m3: 
   217 00000BE9 60                  <2>  pusha
   217 00000BEA 9C                  <2>  pushf
   217 00000BEB EB0F                <2>  jmp %%astr
   217 00000BED 746F6F20626967206E- <2> %%str db %1, 0
   217 00000BF6 756D62657200        <2>
   217                              <2> %%strln equ $-%%str
   217                              <2> %%astr: _syscall_write 1, %%str, %%strln
   217                              <3> ..@165.astr: 
   217                              <3>  _syscall_3 4,%1,%2,%3
   217 00000BFC 52                  <4>  push edx
   217 00000BFD 51                  <4>  push ecx
   217 00000BFE 53                  <4>  push ebx
   217 00000BFF 6A04                <4>  push %1
   217 00000C01 6A01                <4>  push %2
   217 00000C03 68[ED0B0000]        <4>  push %3
   217 00000C08 6A0F                <4>  push %4
   217 00000C0A 5A                  <4>  pop edx
   217 00000C0B 59                  <4>  pop ecx
   217 00000C0C 5B                  <4>  pop ebx
   217 00000C0D 58                  <4>  pop eax
   217 00000C0E CD80                <4>  int 0x80
   217 00000C10 5B                  <4>  pop ebx
   217 00000C11 59                  <4>  pop ecx
   217 00000C12 5A                  <4>  pop edx
   217 00000C13 9D                  <2>  popf
   217 00000C14 61                  <2>  popa
   217                              <1> PUTCHAR 10
   217 00000C15 60                  <2>  pusha
   217 00000C16 9C                  <2>  pushf
   217                              <2> %ifstr %1
   217                              <2>  mov al, %1
   217                              <2> %elifnum %1
   217 00000C17 B00A                <2>  mov al, %1
   217                              <2> %elifidni %1,al
   217                              <2>  nop
   217                              <2> %elifidni %1,ah
   217                              <2>  mov al, ah
   217                              <2> %elifidni %1,bl
   217                              <2>  mov al, bl
   217                              <2> %elifidni %1,bh
   217                              <2>  mov al, bh
   217                              <2> %elifidni %1,cl
   217                              <2>  mov al, cl
   217                              <2> %elifidni %1,ch
   217                              <2>  mov al, ch
   217                              <2> %elifidni %1,dl
   217                              <2>  mov al, dl
   217                              <2> %elifidni %1,dh
   217                              <2>  mov al, dh
   217                              <2> %else
   217                              <2>  mov al, %1
   217                              <2> %endif
   217 00000C19 83EC02              <2>  sub esp, 2
   217 00000C1C 89E7                <2>  mov edi, esp
   217 00000C1E 8807                <2>  mov [edi], al
   217                              <2>  _syscall_write 1, edi, 1
   217                              <3>  _syscall_3 4,%1,%2,%3
   217 00000C20 52                  <4>  push edx
   217 00000C21 51                  <4>  push ecx
   217 00000C22 53                  <4>  push ebx
   217 00000C23 6A04                <4>  push %1
   217 00000C25 6A01                <4>  push %2
   217 00000C27 57                  <4>  push %3
   217 00000C28 6A01                <4>  push %4
   217 00000C2A 5A                  <4>  pop edx
   217 00000C2B 59                  <4>  pop ecx
   217 00000C2C 5B                  <4>  pop ebx
   217 00000C2D 58                  <4>  pop eax
   217 00000C2E CD80                <4>  int 0x80
   217 00000C30 5B                  <4>  pop ebx
   217 00000C31 59                  <4>  pop ecx
   217 00000C32 5A                  <4>  pop edx
   217 00000C33 83C402              <2>  add esp, 2
   217 00000C36 9D                  <2>  popf
   217 00000C37 61                  <2>  popa
   217 00000C38 EB49                <1> jmp %%m4
   217                              <1> %%m_err: PRINT "ERROR!!!"
   217                              <2> ..@161.m_err: 
   217 00000C3A 60                  <2>  pusha
   217 00000C3B 9C                  <2>  pushf
   217 00000C3C EB09                <2>  jmp %%astr
   217 00000C3E 4552524F5221212100  <2> %%str db %1, 0
   217                              <2> %%strln equ $-%%str
   217                              <2> %%astr: _syscall_write 1, %%str, %%strln
   217                              <3> ..@171.astr: 
   217                              <3>  _syscall_3 4,%1,%2,%3
   217 00000C47 52                  <4>  push edx
   217 00000C48 51                  <4>  push ecx
   217 00000C49 53                  <4>  push ebx
   217 00000C4A 6A04                <4>  push %1
   217 00000C4C 6A01                <4>  push %2
   217 00000C4E 68[3E0C0000]        <4>  push %3
   217 00000C53 6A09                <4>  push %4
   217 00000C55 5A                  <4>  pop edx
   217 00000C56 59                  <4>  pop ecx
   217 00000C57 5B                  <4>  pop ebx
   217 00000C58 58                  <4>  pop eax
   217 00000C59 CD80                <4>  int 0x80
   217 00000C5B 5B                  <4>  pop ebx
   217 00000C5C 59                  <4>  pop ecx
   217 00000C5D 5A                  <4>  pop edx
   217 00000C5E 9D                  <2>  popf
   217 00000C5F 61                  <2>  popa
   217                              <1> PUTCHAR 0xa
   217 00000C60 60                  <2>  pusha
   217 00000C61 9C                  <2>  pushf
   217                              <2> %ifstr %1
   217                              <2>  mov al, %1
   217                              <2> %elifnum %1
   217 00000C62 B00A                <2>  mov al, %1
   217                              <2> %elifidni %1,al
   217                              <2>  nop
   217                              <2> %elifidni %1,ah
   217                              <2>  mov al, ah
   217                              <2> %elifidni %1,bl
   217                              <2>  mov al, bl
   217                              <2> %elifidni %1,bh
   217                              <2>  mov al, bh
   217                              <2> %elifidni %1,cl
   217                              <2>  mov al, cl
   217                              <2> %elifidni %1,ch
   217                              <2>  mov al, ch
   217                              <2> %elifidni %1,dl
   217                              <2>  mov al, dl
   217                              <2> %elifidni %1,dh
   217                              <2>  mov al, dh
   217                              <2> %else
   217                              <2>  mov al, %1
   217                              <2> %endif
   217 00000C64 83EC02              <2>  sub esp, 2
   217 00000C67 89E7                <2>  mov edi, esp
   217 00000C69 8807                <2>  mov [edi], al
   217                              <2>  _syscall_write 1, edi, 1
   217                              <3>  _syscall_3 4,%1,%2,%3
   217 00000C6B 52                  <4>  push edx
   217 00000C6C 51                  <4>  push ecx
   217 00000C6D 53                  <4>  push ebx
   217 00000C6E 6A04                <4>  push %1
   217 00000C70 6A01                <4>  push %2
   217 00000C72 57                  <4>  push %3
   217 00000C73 6A01                <4>  push %4
   217 00000C75 5A                  <4>  pop edx
   217 00000C76 59                  <4>  pop ecx
   217 00000C77 5B                  <4>  pop ebx
   217 00000C78 58                  <4>  pop eax
   217 00000C79 CD80                <4>  int 0x80
   217 00000C7B 5B                  <4>  pop ebx
   217 00000C7C 59                  <4>  pop ecx
   217 00000C7D 5A                  <4>  pop edx
   217 00000C7E 83C402              <2>  add esp, 2
   217 00000C81 9D                  <2>  popf
   217 00000C82 61                  <2>  popa
   217                              <1> %%m4:
   217                              <1> 
   217 00000C83 56                  <1> push esi
   217 00000C84 83C404              <1> add esp,4
   217 00000C87 9D                  <1> popfd
   217 00000C88 61                  <1> popad
   217 00000C89 83EC28              <1> sub esp,40
   217 00000C8C 58                  <1> pop dword %1
   217 00000C8D 83C424              <1> add esp,36
   218                                  PUTCHAR 0xA
   218 00000C90 60                  <1>  pusha
   218 00000C91 9C                  <1>  pushf
   218                              <1> %ifstr %1
   218                              <1>  mov al, %1
   218                              <1> %elifnum %1
   218 00000C92 B00A                <1>  mov al, %1
   218                              <1> %elifidni %1,al
   218                              <1>  nop
   218                              <1> %elifidni %1,ah
   218                              <1>  mov al, ah
   218                              <1> %elifidni %1,bl
   218                              <1>  mov al, bl
   218                              <1> %elifidni %1,bh
   218                              <1>  mov al, bh
   218                              <1> %elifidni %1,cl
   218                              <1>  mov al, cl
   218                              <1> %elifidni %1,ch
   218                              <1>  mov al, ch
   218                              <1> %elifidni %1,dl
   218                              <1>  mov al, dl
   218                              <1> %elifidni %1,dh
   218                              <1>  mov al, dh
   218                              <1> %else
   218                              <1>  mov al, %1
   218                              <1> %endif
   218 00000C94 83EC02              <1>  sub esp, 2
   218 00000C97 89E7                <1>  mov edi, esp
   218 00000C99 8807                <1>  mov [edi], al
   218                              <1>  _syscall_write 1, edi, 1
   218                              <2>  _syscall_3 4,%1,%2,%3
   218 00000C9B 52                  <3>  push edx
   218 00000C9C 51                  <3>  push ecx
   218 00000C9D 53                  <3>  push ebx
   218 00000C9E 6A04                <3>  push %1
   218 00000CA0 6A01                <3>  push %2
   218 00000CA2 57                  <3>  push %3
   218 00000CA3 6A01                <3>  push %4
   218 00000CA5 5A                  <3>  pop edx
   218 00000CA6 59                  <3>  pop ecx
   218 00000CA7 5B                  <3>  pop ebx
   218 00000CA8 58                  <3>  pop eax
   218 00000CA9 CD80                <3>  int 0x80
   218 00000CAB 5B                  <3>  pop ebx
   218 00000CAC 59                  <3>  pop ecx
   218 00000CAD 5A                  <3>  pop edx
   218 00000CAE 83C402              <1>  add esp, 2
   218 00000CB1 9D                  <1>  popf
   218 00000CB2 61                  <1>  popa
   219 00000CB3 E824F7FFFF              call new
   220 00000CB8 FF35[00000000]          push dword[list]
   221 00000CBE 893D[00000000]          mov [list], edi
   222 00000CC4 8F4702                  pop dword[edi+node.next]
   223 00000CC7 668907                  mov [edi+node.elem], ax
   224 00000CCA E86EF7FFFF              call print
   225                                  PUTCHAR 0xA
   225 00000CCF 60                  <1>  pusha
   225 00000CD0 9C                  <1>  pushf
   225                              <1> %ifstr %1
   225                              <1>  mov al, %1
   225                              <1> %elifnum %1
   225 00000CD1 B00A                <1>  mov al, %1
   225                              <1> %elifidni %1,al
   225                              <1>  nop
   225                              <1> %elifidni %1,ah
   225                              <1>  mov al, ah
   225                              <1> %elifidni %1,bl
   225                              <1>  mov al, bl
   225                              <1> %elifidni %1,bh
   225                              <1>  mov al, bh
   225                              <1> %elifidni %1,cl
   225                              <1>  mov al, cl
   225                              <1> %elifidni %1,ch
   225                              <1>  mov al, ch
   225                              <1> %elifidni %1,dl
   225                              <1>  mov al, dl
   225                              <1> %elifidni %1,dh
   225                              <1>  mov al, dh
   225                              <1> %else
   225                              <1>  mov al, %1
   225                              <1> %endif
   225 00000CD3 83EC02              <1>  sub esp, 2
   225 00000CD6 89E7                <1>  mov edi, esp
   225 00000CD8 8807                <1>  mov [edi], al
   225                              <1>  _syscall_write 1, edi, 1
   225                              <2>  _syscall_3 4,%1,%2,%3
   225 00000CDA 52                  <3>  push edx
   225 00000CDB 51                  <3>  push ecx
   225 00000CDC 53                  <3>  push ebx
   225 00000CDD 6A04                <3>  push %1
   225 00000CDF 6A01                <3>  push %2
   225 00000CE1 57                  <3>  push %3
   225 00000CE2 6A01                <3>  push %4
   225 00000CE4 5A                  <3>  pop edx
   225 00000CE5 59                  <3>  pop ecx
   225 00000CE6 5B                  <3>  pop ebx
   225 00000CE7 58                  <3>  pop eax
   225 00000CE8 CD80                <3>  int 0x80
   225 00000CEA 5B                  <3>  pop ebx
   225 00000CEB 59                  <3>  pop ecx
   225 00000CEC 5A                  <3>  pop edx
   225 00000CED 83C402              <1>  add esp, 2
   225 00000CF0 9D                  <1>  popf
   225 00000CF1 61                  <1>  popa
   226 00000CF2 C3                      ret
   227                                  
   228                                  ; вставить последнее значение
   229                                  vstavitlast:
   230                                  PRINT "Введите значение элемента (для вставки в конец)"
   230 00000CF3 60                  <1>  pusha
   230 00000CF4 9C                  <1>  pushf
   230 00000CF5 EB57                <1>  jmp %%astr
   230 00000CF7 D092D0B2D0B5D0B4D0- <1> %%str db %1, 0
   230 00000D00 B8D182D0B520D0B7D0- <1>
   230 00000D09 BDD0B0D187D0B5D0BD- <1>
   230 00000D12 D0B8D0B520D18DD0BB- <1>
   230 00000D1B D0B5D0BCD0B5D0BDD1- <1>
   230 00000D24 82D0B02028D0B4D0BB- <1>
   230 00000D2D D18F20D0B2D181D182- <1>
   230 00000D36 D0B0D0B2D0BAD0B820- <1>
   230 00000D3F D0B220D0BAD0BED0BD- <1>
   230 00000D48 D0B5D1862900        <1>
   230                              <1> %%strln equ $-%%str
   230                              <1> %%astr: _syscall_write 1, %%str, %%strln
   230                              <2> ..@183.astr: 
   230                              <2>  _syscall_3 4,%1,%2,%3
   230 00000D4E 52                  <3>  push edx
   230 00000D4F 51                  <3>  push ecx
   230 00000D50 53                  <3>  push ebx
   230 00000D51 6A04                <3>  push %1
   230 00000D53 6A01                <3>  push %2
   230 00000D55 68[F70C0000]        <3>  push %3
   230 00000D5A 6A57                <3>  push %4
   230 00000D5C 5A                  <3>  pop edx
   230 00000D5D 59                  <3>  pop ecx
   230 00000D5E 5B                  <3>  pop ebx
   230 00000D5F 58                  <3>  pop eax
   230 00000D60 CD80                <3>  int 0x80
   230 00000D62 5B                  <3>  pop ebx
   230 00000D63 59                  <3>  pop ecx
   230 00000D64 5A                  <3>  pop edx
   230 00000D65 9D                  <1>  popf
   230 00000D66 61                  <1>  popa
   231                                  PUTCHAR 0xA
   231 00000D67 60                  <1>  pusha
   231 00000D68 9C                  <1>  pushf
   231                              <1> %ifstr %1
   231                              <1>  mov al, %1
   231                              <1> %elifnum %1
   231 00000D69 B00A                <1>  mov al, %1
   231                              <1> %elifidni %1,al
   231                              <1>  nop
   231                              <1> %elifidni %1,ah
   231                              <1>  mov al, ah
   231                              <1> %elifidni %1,bl
   231                              <1>  mov al, bl
   231                              <1> %elifidni %1,bh
   231                              <1>  mov al, bh
   231                              <1> %elifidni %1,cl
   231                              <1>  mov al, cl
   231                              <1> %elifidni %1,ch
   231                              <1>  mov al, ch
   231                              <1> %elifidni %1,dl
   231                              <1>  mov al, dl
   231                              <1> %elifidni %1,dh
   231                              <1>  mov al, dh
   231                              <1> %else
   231                              <1>  mov al, %1
   231                              <1> %endif
   231 00000D6B 83EC02              <1>  sub esp, 2
   231 00000D6E 89E7                <1>  mov edi, esp
   231 00000D70 8807                <1>  mov [edi], al
   231                              <1>  _syscall_write 1, edi, 1
   231                              <2>  _syscall_3 4,%1,%2,%3
   231 00000D72 52                  <3>  push edx
   231 00000D73 51                  <3>  push ecx
   231 00000D74 53                  <3>  push ebx
   231 00000D75 6A04                <3>  push %1
   231 00000D77 6A01                <3>  push %2
   231 00000D79 57                  <3>  push %3
   231 00000D7A 6A01                <3>  push %4
   231 00000D7C 5A                  <3>  pop edx
   231 00000D7D 59                  <3>  pop ecx
   231 00000D7E 5B                  <3>  pop ebx
   231 00000D7F 58                  <3>  pop eax
   231 00000D80 CD80                <3>  int 0x80
   231 00000D82 5B                  <3>  pop ebx
   231 00000D83 59                  <3>  pop ecx
   231 00000D84 5A                  <3>  pop edx
   231 00000D85 83C402              <1>  add esp, 2
   231 00000D88 9D                  <1>  popf
   231 00000D89 61                  <1>  popa
   232                                  GETUN eax
   232 00000D8A 60                  <1> pushad
   232 00000D8B 9C                  <1> pushfd
   232                              <1> 
   232 00000D8C 31FF                <1> xor edi,edi
   232 00000D8E 31F6                <1> xor esi,esi
   232                              <1> %%m1:
   232                              <1> GETCHAR
   232 00000D90 9C                  <2>  pushf
   232 00000D91 57                  <2>  push edi
   232 00000D92 83EC02              <2>  sub esp, 2
   232 00000D95 89E7                <2>  mov edi, esp
   232                              <2>  _syscall_read 0, edi, 1
   232                              <3>  _syscall_3 3,%1,%2,%3
   232 00000D97 52                  <4>  push edx
   232 00000D98 51                  <4>  push ecx
   232 00000D99 53                  <4>  push ebx
   232 00000D9A 6A03                <4>  push %1
   232 00000D9C 6A00                <4>  push %2
   232 00000D9E 57                  <4>  push %3
   232 00000D9F 6A01                <4>  push %4
   232 00000DA1 5A                  <4>  pop edx
   232 00000DA2 59                  <4>  pop ecx
   232 00000DA3 5B                  <4>  pop ebx
   232 00000DA4 58                  <4>  pop eax
   232 00000DA5 CD80                <4>  int 0x80
   232 00000DA7 5B                  <4>  pop ebx
   232 00000DA8 59                  <4>  pop ecx
   232 00000DA9 5A                  <4>  pop edx
   232 00000DAA 83F801              <2>  cmp eax, 1
   232 00000DAD 7506                <2>  jne %%eof_reached
   232 00000DAF 31C0                <2>  xor eax,eax
   232 00000DB1 8A07                <2>  mov al, [edi]
   232 00000DB3 EB04                <2>  jmp %%gcquit
   232                              <2> %%eof_reached:
   232 00000DB5 31C0                <2>  xor eax, eax
   232 00000DB7 F7D0                <2>  not eax
   232                              <2> %%gcquit:
   232 00000DB9 83C402              <2>  add esp, 2
   232 00000DBC 5F                  <2>  pop edi
   232 00000DBD 9D                  <2>  popf
   232 00000DBE 3C0A                <1> cmp al,0xA
   232 00000DC0 7421                <1> je %%m2
   232 00000DC2 3C30                <1> cmp al,'0'
   232 00000DC4 7278                <1> jb %%m_err
   232 00000DC6 3C39                <1> cmp al,'9'
   232 00000DC8 7774                <1> ja %%m_err
   232 00000DCA 47                  <1> inc edi
   232 00000DCB 31C9                <1> xor ecx,ecx
   232 00000DCD 88C1                <1> mov cl,al
   232 00000DCF 89F0                <1> mov eax,esi
   232 00000DD1 BB0A000000          <1> mov ebx,10
   232 00000DD6 F7E3                <1> mul ebx
   232 00000DD8 80E930              <1> sub cl,48
   232 00000DDB 01C8                <1> add eax,ecx
   232 00000DDD 720E                <1> jc %%m3
   232 00000DDF 89C6                <1> mov esi,eax
   232 00000DE1 EBAD                <1> jmp %%m1
   232                              <1> %%m2:
   232 00000DE3 83FF00              <1> cmp edi,0
   232 00000DE6 74A8                <1> je %%m1
   232 00000DE8 E99A000000          <1> jmp %%m4
   232                              <1> %%m3: PRINT "too big number"
   232                              <2> ..@189.m3: 
   232 00000DED 60                  <2>  pusha
   232 00000DEE 9C                  <2>  pushf
   232 00000DEF EB0F                <2>  jmp %%astr
   232 00000DF1 746F6F20626967206E- <2> %%str db %1, 0
   232 00000DFA 756D62657200        <2>
   232                              <2> %%strln equ $-%%str
   232                              <2> %%astr: _syscall_write 1, %%str, %%strln
   232                              <3> ..@193.astr: 
   232                              <3>  _syscall_3 4,%1,%2,%3
   232 00000E00 52                  <4>  push edx
   232 00000E01 51                  <4>  push ecx
   232 00000E02 53                  <4>  push ebx
   232 00000E03 6A04                <4>  push %1
   232 00000E05 6A01                <4>  push %2
   232 00000E07 68[F10D0000]        <4>  push %3
   232 00000E0C 6A0F                <4>  push %4
   232 00000E0E 5A                  <4>  pop edx
   232 00000E0F 59                  <4>  pop ecx
   232 00000E10 5B                  <4>  pop ebx
   232 00000E11 58                  <4>  pop eax
   232 00000E12 CD80                <4>  int 0x80
   232 00000E14 5B                  <4>  pop ebx
   232 00000E15 59                  <4>  pop ecx
   232 00000E16 5A                  <4>  pop edx
   232 00000E17 9D                  <2>  popf
   232 00000E18 61                  <2>  popa
   232                              <1> PUTCHAR 10
   232 00000E19 60                  <2>  pusha
   232 00000E1A 9C                  <2>  pushf
   232                              <2> %ifstr %1
   232                              <2>  mov al, %1
   232                              <2> %elifnum %1
   232 00000E1B B00A                <2>  mov al, %1
   232                              <2> %elifidni %1,al
   232                              <2>  nop
   232                              <2> %elifidni %1,ah
   232                              <2>  mov al, ah
   232                              <2> %elifidni %1,bl
   232                              <2>  mov al, bl
   232                              <2> %elifidni %1,bh
   232                              <2>  mov al, bh
   232                              <2> %elifidni %1,cl
   232                              <2>  mov al, cl
   232                              <2> %elifidni %1,ch
   232                              <2>  mov al, ch
   232                              <2> %elifidni %1,dl
   232                              <2>  mov al, dl
   232                              <2> %elifidni %1,dh
   232                              <2>  mov al, dh
   232                              <2> %else
   232                              <2>  mov al, %1
   232                              <2> %endif
   232 00000E1D 83EC02              <2>  sub esp, 2
   232 00000E20 89E7                <2>  mov edi, esp
   232 00000E22 8807                <2>  mov [edi], al
   232                              <2>  _syscall_write 1, edi, 1
   232                              <3>  _syscall_3 4,%1,%2,%3
   232 00000E24 52                  <4>  push edx
   232 00000E25 51                  <4>  push ecx
   232 00000E26 53                  <4>  push ebx
   232 00000E27 6A04                <4>  push %1
   232 00000E29 6A01                <4>  push %2
   232 00000E2B 57                  <4>  push %3
   232 00000E2C 6A01                <4>  push %4
   232 00000E2E 5A                  <4>  pop edx
   232 00000E2F 59                  <4>  pop ecx
   232 00000E30 5B                  <4>  pop ebx
   232 00000E31 58                  <4>  pop eax
   232 00000E32 CD80                <4>  int 0x80
   232 00000E34 5B                  <4>  pop ebx
   232 00000E35 59                  <4>  pop ecx
   232 00000E36 5A                  <4>  pop edx
   232 00000E37 83C402              <2>  add esp, 2
   232 00000E3A 9D                  <2>  popf
   232 00000E3B 61                  <2>  popa
   232 00000E3C EB49                <1> jmp %%m4
   232                              <1> %%m_err: PRINT "ERROR!!!"
   232                              <2> ..@189.m_err: 
   232 00000E3E 60                  <2>  pusha
   232 00000E3F 9C                  <2>  pushf
   232 00000E40 EB09                <2>  jmp %%astr
   232 00000E42 4552524F5221212100  <2> %%str db %1, 0
   232                              <2> %%strln equ $-%%str
   232                              <2> %%astr: _syscall_write 1, %%str, %%strln
   232                              <3> ..@199.astr: 
   232                              <3>  _syscall_3 4,%1,%2,%3
   232 00000E4B 52                  <4>  push edx
   232 00000E4C 51                  <4>  push ecx
   232 00000E4D 53                  <4>  push ebx
   232 00000E4E 6A04                <4>  push %1
   232 00000E50 6A01                <4>  push %2
   232 00000E52 68[420E0000]        <4>  push %3
   232 00000E57 6A09                <4>  push %4
   232 00000E59 5A                  <4>  pop edx
   232 00000E5A 59                  <4>  pop ecx
   232 00000E5B 5B                  <4>  pop ebx
   232 00000E5C 58                  <4>  pop eax
   232 00000E5D CD80                <4>  int 0x80
   232 00000E5F 5B                  <4>  pop ebx
   232 00000E60 59                  <4>  pop ecx
   232 00000E61 5A                  <4>  pop edx
   232 00000E62 9D                  <2>  popf
   232 00000E63 61                  <2>  popa
   232                              <1> PUTCHAR 0xa
   232 00000E64 60                  <2>  pusha
   232 00000E65 9C                  <2>  pushf
   232                              <2> %ifstr %1
   232                              <2>  mov al, %1
   232                              <2> %elifnum %1
   232 00000E66 B00A                <2>  mov al, %1
   232                              <2> %elifidni %1,al
   232                              <2>  nop
   232                              <2> %elifidni %1,ah
   232                              <2>  mov al, ah
   232                              <2> %elifidni %1,bl
   232                              <2>  mov al, bl
   232                              <2> %elifidni %1,bh
   232                              <2>  mov al, bh
   232                              <2> %elifidni %1,cl
   232                              <2>  mov al, cl
   232                              <2> %elifidni %1,ch
   232                              <2>  mov al, ch
   232                              <2> %elifidni %1,dl
   232                              <2>  mov al, dl
   232                              <2> %elifidni %1,dh
   232                              <2>  mov al, dh
   232                              <2> %else
   232                              <2>  mov al, %1
   232                              <2> %endif
   232 00000E68 83EC02              <2>  sub esp, 2
   232 00000E6B 89E7                <2>  mov edi, esp
   232 00000E6D 8807                <2>  mov [edi], al
   232                              <2>  _syscall_write 1, edi, 1
   232                              <3>  _syscall_3 4,%1,%2,%3
   232 00000E6F 52                  <4>  push edx
   232 00000E70 51                  <4>  push ecx
   232 00000E71 53                  <4>  push ebx
   232 00000E72 6A04                <4>  push %1
   232 00000E74 6A01                <4>  push %2
   232 00000E76 57                  <4>  push %3
   232 00000E77 6A01                <4>  push %4
   232 00000E79 5A                  <4>  pop edx
   232 00000E7A 59                  <4>  pop ecx
   232 00000E7B 5B                  <4>  pop ebx
   232 00000E7C 58                  <4>  pop eax
   232 00000E7D CD80                <4>  int 0x80
   232 00000E7F 5B                  <4>  pop ebx
   232 00000E80 59                  <4>  pop ecx
   232 00000E81 5A                  <4>  pop edx
   232 00000E82 83C402              <2>  add esp, 2
   232 00000E85 9D                  <2>  popf
   232 00000E86 61                  <2>  popa
   232                              <1> %%m4:
   232                              <1> 
   232 00000E87 56                  <1> push esi
   232 00000E88 83C404              <1> add esp,4
   232 00000E8B 9D                  <1> popfd
   232 00000E8C 61                  <1> popad
   232 00000E8D 83EC28              <1> sub esp,40
   232 00000E90 58                  <1> pop dword %1
   232 00000E91 83C424              <1> add esp,36
   233                                  PUTCHAR 0xA
   233 00000E94 60                  <1>  pusha
   233 00000E95 9C                  <1>  pushf
   233                              <1> %ifstr %1
   233                              <1>  mov al, %1
   233                              <1> %elifnum %1
   233 00000E96 B00A                <1>  mov al, %1
   233                              <1> %elifidni %1,al
   233                              <1>  nop
   233                              <1> %elifidni %1,ah
   233                              <1>  mov al, ah
   233                              <1> %elifidni %1,bl
   233                              <1>  mov al, bl
   233                              <1> %elifidni %1,bh
   233                              <1>  mov al, bh
   233                              <1> %elifidni %1,cl
   233                              <1>  mov al, cl
   233                              <1> %elifidni %1,ch
   233                              <1>  mov al, ch
   233                              <1> %elifidni %1,dl
   233                              <1>  mov al, dl
   233                              <1> %elifidni %1,dh
   233                              <1>  mov al, dh
   233                              <1> %else
   233                              <1>  mov al, %1
   233                              <1> %endif
   233 00000E98 83EC02              <1>  sub esp, 2
   233 00000E9B 89E7                <1>  mov edi, esp
   233 00000E9D 8807                <1>  mov [edi], al
   233                              <1>  _syscall_write 1, edi, 1
   233                              <2>  _syscall_3 4,%1,%2,%3
   233 00000E9F 52                  <3>  push edx
   233 00000EA0 51                  <3>  push ecx
   233 00000EA1 53                  <3>  push ebx
   233 00000EA2 6A04                <3>  push %1
   233 00000EA4 6A01                <3>  push %2
   233 00000EA6 57                  <3>  push %3
   233 00000EA7 6A01                <3>  push %4
   233 00000EA9 5A                  <3>  pop edx
   233 00000EAA 59                  <3>  pop ecx
   233 00000EAB 5B                  <3>  pop ebx
   233 00000EAC 58                  <3>  pop eax
   233 00000EAD CD80                <3>  int 0x80
   233 00000EAF 5B                  <3>  pop ebx
   233 00000EB0 59                  <3>  pop ecx
   233 00000EB1 5A                  <3>  pop edx
   233 00000EB2 83C402              <1>  add esp, 2
   233 00000EB5 9D                  <1>  popf
   233 00000EB6 61                  <1>  popa
   234 00000EB7 8B1D[00000000]          mov ebx, [list]
   235                                  q1:
   236 00000EBD 837B0200                cmp dword[ebx+node.next], NULL
   237 00000EC1 7518                    jne q2
   238 00000EC3 E814F5FFFF              call new
   239 00000EC8 897B02                  mov [ebx+node.next], edi
   240 00000ECB 668907                  mov [edi+node.elem], ax
   241 00000ECE C7470200000000          mov dword[edi+node.next], NULL
   242 00000ED5 E863F5FFFF              call print
   243 00000EDA C3                      ret
   244                                  q2:
   245 00000EDB 8B5B02                  mov ebx, [ebx+node.next]
   246 00000EDE EBDD                    jmp  q1
   247 00000EE0 C3                      ret
   248                                  ; вставить до
   249                                  vstavitdo:
   250                                  PRINT "Введите значение звена, до которого нужно вставить новое"
   250 00000EE1 60                  <1>  pusha
   250 00000EE2 9C                  <1>  pushf
   250 00000EE3 EB69                <1>  jmp %%astr
   250 00000EE5 D092D0B2D0B5D0B4D0- <1> %%str db %1, 0
   250 00000EEE B8D182D0B520D0B7D0- <1>
   250 00000EF7 BDD0B0D187D0B5D0BD- <1>
   250 00000F00 D0B8D0B520D0B7D0B2- <1>
   250 00000F09 D0B5D0BDD0B02C20D0- <1>
   250 00000F12 B4D0BE20D0BAD0BED1- <1>
   250 00000F1B 82D0BED180D0BED0B3- <1>
   250 00000F24 D0BE20D0BDD183D0B6- <1>
   250 00000F2D D0BDD0BE20D0B2D181- <1>
   250 00000F36 D182D0B0D0B2D0B8D1- <1>
   250 00000F3F 82D18C20D0BDD0BED0- <1>
   250 00000F48 B2D0BED0B500        <1>
   250                              <1> %%strln equ $-%%str
   250                              <1> %%astr: _syscall_write 1, %%str, %%strln
   250                              <2> ..@208.astr: 
   250                              <2>  _syscall_3 4,%1,%2,%3
   250 00000F4E 52                  <3>  push edx
   250 00000F4F 51                  <3>  push ecx
   250 00000F50 53                  <3>  push ebx
   250 00000F51 6A04                <3>  push %1
   250 00000F53 6A01                <3>  push %2
   250 00000F55 68[E50E0000]        <3>  push %3
   250 00000F5A 6A69                <3>  push %4
   250 00000F5C 5A                  <3>  pop edx
   250 00000F5D 59                  <3>  pop ecx
   250 00000F5E 5B                  <3>  pop ebx
   250 00000F5F 58                  <3>  pop eax
   250 00000F60 CD80                <3>  int 0x80
   250 00000F62 5B                  <3>  pop ebx
   250 00000F63 59                  <3>  pop ecx
   250 00000F64 5A                  <3>  pop edx
   250 00000F65 9D                  <1>  popf
   250 00000F66 61                  <1>  popa
   251                                  PUTCHAR 0xA
   251 00000F67 60                  <1>  pusha
   251 00000F68 9C                  <1>  pushf
   251                              <1> %ifstr %1
   251                              <1>  mov al, %1
   251                              <1> %elifnum %1
   251 00000F69 B00A                <1>  mov al, %1
   251                              <1> %elifidni %1,al
   251                              <1>  nop
   251                              <1> %elifidni %1,ah
   251                              <1>  mov al, ah
   251                              <1> %elifidni %1,bl
   251                              <1>  mov al, bl
   251                              <1> %elifidni %1,bh
   251                              <1>  mov al, bh
   251                              <1> %elifidni %1,cl
   251                              <1>  mov al, cl
   251                              <1> %elifidni %1,ch
   251                              <1>  mov al, ch
   251                              <1> %elifidni %1,dl
   251                              <1>  mov al, dl
   251                              <1> %elifidni %1,dh
   251                              <1>  mov al, dh
   251                              <1> %else
   251                              <1>  mov al, %1
   251                              <1> %endif
   251 00000F6B 83EC02              <1>  sub esp, 2
   251 00000F6E 89E7                <1>  mov edi, esp
   251 00000F70 8807                <1>  mov [edi], al
   251                              <1>  _syscall_write 1, edi, 1
   251                              <2>  _syscall_3 4,%1,%2,%3
   251 00000F72 52                  <3>  push edx
   251 00000F73 51                  <3>  push ecx
   251 00000F74 53                  <3>  push ebx
   251 00000F75 6A04                <3>  push %1
   251 00000F77 6A01                <3>  push %2
   251 00000F79 57                  <3>  push %3
   251 00000F7A 6A01                <3>  push %4
   251 00000F7C 5A                  <3>  pop edx
   251 00000F7D 59                  <3>  pop ecx
   251 00000F7E 5B                  <3>  pop ebx
   251 00000F7F 58                  <3>  pop eax
   251 00000F80 CD80                <3>  int 0x80
   251 00000F82 5B                  <3>  pop ebx
   251 00000F83 59                  <3>  pop ecx
   251 00000F84 5A                  <3>  pop edx
   251 00000F85 83C402              <1>  add esp, 2
   251 00000F88 9D                  <1>  popf
   251 00000F89 61                  <1>  popa
   252                                  GETUN eax
   252 00000F8A 60                  <1> pushad
   252 00000F8B 9C                  <1> pushfd
   252                              <1> 
   252 00000F8C 31FF                <1> xor edi,edi
   252 00000F8E 31F6                <1> xor esi,esi
   252                              <1> %%m1:
   252                              <1> GETCHAR
   252 00000F90 9C                  <2>  pushf
   252 00000F91 57                  <2>  push edi
   252 00000F92 83EC02              <2>  sub esp, 2
   252 00000F95 89E7                <2>  mov edi, esp
   252                              <2>  _syscall_read 0, edi, 1
   252                              <3>  _syscall_3 3,%1,%2,%3
   252 00000F97 52                  <4>  push edx
   252 00000F98 51                  <4>  push ecx
   252 00000F99 53                  <4>  push ebx
   252 00000F9A 6A03                <4>  push %1
   252 00000F9C 6A00                <4>  push %2
   252 00000F9E 57                  <4>  push %3
   252 00000F9F 6A01                <4>  push %4
   252 00000FA1 5A                  <4>  pop edx
   252 00000FA2 59                  <4>  pop ecx
   252 00000FA3 5B                  <4>  pop ebx
   252 00000FA4 58                  <4>  pop eax
   252 00000FA5 CD80                <4>  int 0x80
   252 00000FA7 5B                  <4>  pop ebx
   252 00000FA8 59                  <4>  pop ecx
   252 00000FA9 5A                  <4>  pop edx
   252 00000FAA 83F801              <2>  cmp eax, 1
   252 00000FAD 7506                <2>  jne %%eof_reached
   252 00000FAF 31C0                <2>  xor eax,eax
   252 00000FB1 8A07                <2>  mov al, [edi]
   252 00000FB3 EB04                <2>  jmp %%gcquit
   252                              <2> %%eof_reached:
   252 00000FB5 31C0                <2>  xor eax, eax
   252 00000FB7 F7D0                <2>  not eax
   252                              <2> %%gcquit:
   252 00000FB9 83C402              <2>  add esp, 2
   252 00000FBC 5F                  <2>  pop edi
   252 00000FBD 9D                  <2>  popf
   252 00000FBE 3C0A                <1> cmp al,0xA
   252 00000FC0 7421                <1> je %%m2
   252 00000FC2 3C30                <1> cmp al,'0'
   252 00000FC4 7278                <1> jb %%m_err
   252 00000FC6 3C39                <1> cmp al,'9'
   252 00000FC8 7774                <1> ja %%m_err
   252 00000FCA 47                  <1> inc edi
   252 00000FCB 31C9                <1> xor ecx,ecx
   252 00000FCD 88C1                <1> mov cl,al
   252 00000FCF 89F0                <1> mov eax,esi
   252 00000FD1 BB0A000000          <1> mov ebx,10
   252 00000FD6 F7E3                <1> mul ebx
   252 00000FD8 80E930              <1> sub cl,48
   252 00000FDB 01C8                <1> add eax,ecx
   252 00000FDD 720E                <1> jc %%m3
   252 00000FDF 89C6                <1> mov esi,eax
   252 00000FE1 EBAD                <1> jmp %%m1
   252                              <1> %%m2:
   252 00000FE3 83FF00              <1> cmp edi,0
   252 00000FE6 74A8                <1> je %%m1
   252 00000FE8 E99A000000          <1> jmp %%m4
   252                              <1> %%m3: PRINT "too big number"
   252                              <2> ..@214.m3: 
   252 00000FED 60                  <2>  pusha
   252 00000FEE 9C                  <2>  pushf
   252 00000FEF EB0F                <2>  jmp %%astr
   252 00000FF1 746F6F20626967206E- <2> %%str db %1, 0
   252 00000FFA 756D62657200        <2>
   252                              <2> %%strln equ $-%%str
   252                              <2> %%astr: _syscall_write 1, %%str, %%strln
   252                              <3> ..@218.astr: 
   252                              <3>  _syscall_3 4,%1,%2,%3
   252 00001000 52                  <4>  push edx
   252 00001001 51                  <4>  push ecx
   252 00001002 53                  <4>  push ebx
   252 00001003 6A04                <4>  push %1
   252 00001005 6A01                <4>  push %2
   252 00001007 68[F10F0000]        <4>  push %3
   252 0000100C 6A0F                <4>  push %4
   252 0000100E 5A                  <4>  pop edx
   252 0000100F 59                  <4>  pop ecx
   252 00001010 5B                  <4>  pop ebx
   252 00001011 58                  <4>  pop eax
   252 00001012 CD80                <4>  int 0x80
   252 00001014 5B                  <4>  pop ebx
   252 00001015 59                  <4>  pop ecx
   252 00001016 5A                  <4>  pop edx
   252 00001017 9D                  <2>  popf
   252 00001018 61                  <2>  popa
   252                              <1> PUTCHAR 10
   252 00001019 60                  <2>  pusha
   252 0000101A 9C                  <2>  pushf
   252                              <2> %ifstr %1
   252                              <2>  mov al, %1
   252                              <2> %elifnum %1
   252 0000101B B00A                <2>  mov al, %1
   252                              <2> %elifidni %1,al
   252                              <2>  nop
   252                              <2> %elifidni %1,ah
   252                              <2>  mov al, ah
   252                              <2> %elifidni %1,bl
   252                              <2>  mov al, bl
   252                              <2> %elifidni %1,bh
   252                              <2>  mov al, bh
   252                              <2> %elifidni %1,cl
   252                              <2>  mov al, cl
   252                              <2> %elifidni %1,ch
   252                              <2>  mov al, ch
   252                              <2> %elifidni %1,dl
   252                              <2>  mov al, dl
   252                              <2> %elifidni %1,dh
   252                              <2>  mov al, dh
   252                              <2> %else
   252                              <2>  mov al, %1
   252                              <2> %endif
   252 0000101D 83EC02              <2>  sub esp, 2
   252 00001020 89E7                <2>  mov edi, esp
   252 00001022 8807                <2>  mov [edi], al
   252                              <2>  _syscall_write 1, edi, 1
   252                              <3>  _syscall_3 4,%1,%2,%3
   252 00001024 52                  <4>  push edx
   252 00001025 51                  <4>  push ecx
   252 00001026 53                  <4>  push ebx
   252 00001027 6A04                <4>  push %1
   252 00001029 6A01                <4>  push %2
   252 0000102B 57                  <4>  push %3
   252 0000102C 6A01                <4>  push %4
   252 0000102E 5A                  <4>  pop edx
   252 0000102F 59                  <4>  pop ecx
   252 00001030 5B                  <4>  pop ebx
   252 00001031 58                  <4>  pop eax
   252 00001032 CD80                <4>  int 0x80
   252 00001034 5B                  <4>  pop ebx
   252 00001035 59                  <4>  pop ecx
   252 00001036 5A                  <4>  pop edx
   252 00001037 83C402              <2>  add esp, 2
   252 0000103A 9D                  <2>  popf
   252 0000103B 61                  <2>  popa
   252 0000103C EB49                <1> jmp %%m4
   252                              <1> %%m_err: PRINT "ERROR!!!"
   252                              <2> ..@214.m_err: 
   252 0000103E 60                  <2>  pusha
   252 0000103F 9C                  <2>  pushf
   252 00001040 EB09                <2>  jmp %%astr
   252 00001042 4552524F5221212100  <2> %%str db %1, 0
   252                              <2> %%strln equ $-%%str
   252                              <2> %%astr: _syscall_write 1, %%str, %%strln
   252                              <3> ..@224.astr: 
   252                              <3>  _syscall_3 4,%1,%2,%3
   252 0000104B 52                  <4>  push edx
   252 0000104C 51                  <4>  push ecx
   252 0000104D 53                  <4>  push ebx
   252 0000104E 6A04                <4>  push %1
   252 00001050 6A01                <4>  push %2
   252 00001052 68[42100000]        <4>  push %3
   252 00001057 6A09                <4>  push %4
   252 00001059 5A                  <4>  pop edx
   252 0000105A 59                  <4>  pop ecx
   252 0000105B 5B                  <4>  pop ebx
   252 0000105C 58                  <4>  pop eax
   252 0000105D CD80                <4>  int 0x80
   252 0000105F 5B                  <4>  pop ebx
   252 00001060 59                  <4>  pop ecx
   252 00001061 5A                  <4>  pop edx
   252 00001062 9D                  <2>  popf
   252 00001063 61                  <2>  popa
   252                              <1> PUTCHAR 0xa
   252 00001064 60                  <2>  pusha
   252 00001065 9C                  <2>  pushf
   252                              <2> %ifstr %1
   252                              <2>  mov al, %1
   252                              <2> %elifnum %1
   252 00001066 B00A                <2>  mov al, %1
   252                              <2> %elifidni %1,al
   252                              <2>  nop
   252                              <2> %elifidni %1,ah
   252                              <2>  mov al, ah
   252                              <2> %elifidni %1,bl
   252                              <2>  mov al, bl
   252                              <2> %elifidni %1,bh
   252                              <2>  mov al, bh
   252                              <2> %elifidni %1,cl
   252                              <2>  mov al, cl
   252                              <2> %elifidni %1,ch
   252                              <2>  mov al, ch
   252                              <2> %elifidni %1,dl
   252                              <2>  mov al, dl
   252                              <2> %elifidni %1,dh
   252                              <2>  mov al, dh
   252                              <2> %else
   252                              <2>  mov al, %1
   252                              <2> %endif
   252 00001068 83EC02              <2>  sub esp, 2
   252 0000106B 89E7                <2>  mov edi, esp
   252 0000106D 8807                <2>  mov [edi], al
   252                              <2>  _syscall_write 1, edi, 1
   252                              <3>  _syscall_3 4,%1,%2,%3
   252 0000106F 52                  <4>  push edx
   252 00001070 51                  <4>  push ecx
   252 00001071 53                  <4>  push ebx
   252 00001072 6A04                <4>  push %1
   252 00001074 6A01                <4>  push %2
   252 00001076 57                  <4>  push %3
   252 00001077 6A01                <4>  push %4
   252 00001079 5A                  <4>  pop edx
   252 0000107A 59                  <4>  pop ecx
   252 0000107B 5B                  <4>  pop ebx
   252 0000107C 58                  <4>  pop eax
   252 0000107D CD80                <4>  int 0x80
   252 0000107F 5B                  <4>  pop ebx
   252 00001080 59                  <4>  pop ecx
   252 00001081 5A                  <4>  pop edx
   252 00001082 83C402              <2>  add esp, 2
   252 00001085 9D                  <2>  popf
   252 00001086 61                  <2>  popa
   252                              <1> %%m4:
   252                              <1> 
   252 00001087 56                  <1> push esi
   252 00001088 83C404              <1> add esp,4
   252 0000108B 9D                  <1> popfd
   252 0000108C 61                  <1> popad
   252 0000108D 83EC28              <1> sub esp,40
   252 00001090 58                  <1> pop dword %1
   252 00001091 83C424              <1> add esp,36
   253                                  PUTCHAR 0xa
   253 00001094 60                  <1>  pusha
   253 00001095 9C                  <1>  pushf
   253                              <1> %ifstr %1
   253                              <1>  mov al, %1
   253                              <1> %elifnum %1
   253 00001096 B00A                <1>  mov al, %1
   253                              <1> %elifidni %1,al
   253                              <1>  nop
   253                              <1> %elifidni %1,ah
   253                              <1>  mov al, ah
   253                              <1> %elifidni %1,bl
   253                              <1>  mov al, bl
   253                              <1> %elifidni %1,bh
   253                              <1>  mov al, bh
   253                              <1> %elifidni %1,cl
   253                              <1>  mov al, cl
   253                              <1> %elifidni %1,ch
   253                              <1>  mov al, ch
   253                              <1> %elifidni %1,dl
   253                              <1>  mov al, dl
   253                              <1> %elifidni %1,dh
   253                              <1>  mov al, dh
   253                              <1> %else
   253                              <1>  mov al, %1
   253                              <1> %endif
   253 00001098 83EC02              <1>  sub esp, 2
   253 0000109B 89E7                <1>  mov edi, esp
   253 0000109D 8807                <1>  mov [edi], al
   253                              <1>  _syscall_write 1, edi, 1
   253                              <2>  _syscall_3 4,%1,%2,%3
   253 0000109F 52                  <3>  push edx
   253 000010A0 51                  <3>  push ecx
   253 000010A1 53                  <3>  push ebx
   253 000010A2 6A04                <3>  push %1
   253 000010A4 6A01                <3>  push %2
   253 000010A6 57                  <3>  push %3
   253 000010A7 6A01                <3>  push %4
   253 000010A9 5A                  <3>  pop edx
   253 000010AA 59                  <3>  pop ecx
   253 000010AB 5B                  <3>  pop ebx
   253 000010AC 58                  <3>  pop eax
   253 000010AD CD80                <3>  int 0x80
   253 000010AF 5B                  <3>  pop ebx
   253 000010B0 59                  <3>  pop ecx
   253 000010B1 5A                  <3>  pop edx
   253 000010B2 83C402              <1>  add esp, 2
   253 000010B5 9D                  <1>  popf
   253 000010B6 61                  <1>  popa
   254 000010B7 E8CA010000              call find
   255                                  PRINT "Введите значение"
   255 000010BC 60                  <1>  pusha
   255 000010BD 9C                  <1>  pushf
   255 000010BE EB20                <1>  jmp %%astr
   255 000010C0 D092D0B2D0B5D0B4D0- <1> %%str db %1, 0
   255 000010C9 B8D182D0B520D0B7D0- <1>
   255 000010D2 BDD0B0D187D0B5D0BD- <1>
   255 000010DB D0B8D0B500          <1>
   255                              <1> %%strln equ $-%%str
   255                              <1> %%astr: _syscall_write 1, %%str, %%strln
   255                              <2> ..@233.astr: 
   255                              <2>  _syscall_3 4,%1,%2,%3
   255 000010E0 52                  <3>  push edx
   255 000010E1 51                  <3>  push ecx
   255 000010E2 53                  <3>  push ebx
   255 000010E3 6A04                <3>  push %1
   255 000010E5 6A01                <3>  push %2
   255 000010E7 68[C0100000]        <3>  push %3
   255 000010EC 6A20                <3>  push %4
   255 000010EE 5A                  <3>  pop edx
   255 000010EF 59                  <3>  pop ecx
   255 000010F0 5B                  <3>  pop ebx
   255 000010F1 58                  <3>  pop eax
   255 000010F2 CD80                <3>  int 0x80
   255 000010F4 5B                  <3>  pop ebx
   255 000010F5 59                  <3>  pop ecx
   255 000010F6 5A                  <3>  pop edx
   255 000010F7 9D                  <1>  popf
   255 000010F8 61                  <1>  popa
   256                                  PUTCHAR 0xA
   256 000010F9 60                  <1>  pusha
   256 000010FA 9C                  <1>  pushf
   256                              <1> %ifstr %1
   256                              <1>  mov al, %1
   256                              <1> %elifnum %1
   256 000010FB B00A                <1>  mov al, %1
   256                              <1> %elifidni %1,al
   256                              <1>  nop
   256                              <1> %elifidni %1,ah
   256                              <1>  mov al, ah
   256                              <1> %elifidni %1,bl
   256                              <1>  mov al, bl
   256                              <1> %elifidni %1,bh
   256                              <1>  mov al, bh
   256                              <1> %elifidni %1,cl
   256                              <1>  mov al, cl
   256                              <1> %elifidni %1,ch
   256                              <1>  mov al, ch
   256                              <1> %elifidni %1,dl
   256                              <1>  mov al, dl
   256                              <1> %elifidni %1,dh
   256                              <1>  mov al, dh
   256                              <1> %else
   256                              <1>  mov al, %1
   256                              <1> %endif
   256 000010FD 83EC02              <1>  sub esp, 2
   256 00001100 89E7                <1>  mov edi, esp
   256 00001102 8807                <1>  mov [edi], al
   256                              <1>  _syscall_write 1, edi, 1
   256                              <2>  _syscall_3 4,%1,%2,%3
   256 00001104 52                  <3>  push edx
   256 00001105 51                  <3>  push ecx
   256 00001106 53                  <3>  push ebx
   256 00001107 6A04                <3>  push %1
   256 00001109 6A01                <3>  push %2
   256 0000110B 57                  <3>  push %3
   256 0000110C 6A01                <3>  push %4
   256 0000110E 5A                  <3>  pop edx
   256 0000110F 59                  <3>  pop ecx
   256 00001110 5B                  <3>  pop ebx
   256 00001111 58                  <3>  pop eax
   256 00001112 CD80                <3>  int 0x80
   256 00001114 5B                  <3>  pop ebx
   256 00001115 59                  <3>  pop ecx
   256 00001116 5A                  <3>  pop edx
   256 00001117 83C402              <1>  add esp, 2
   256 0000111A 9D                  <1>  popf
   256 0000111B 61                  <1>  popa
   257                                  GETUN eax
   257 0000111C 60                  <1> pushad
   257 0000111D 9C                  <1> pushfd
   257                              <1> 
   257 0000111E 31FF                <1> xor edi,edi
   257 00001120 31F6                <1> xor esi,esi
   257                              <1> %%m1:
   257                              <1> GETCHAR
   257 00001122 9C                  <2>  pushf
   257 00001123 57                  <2>  push edi
   257 00001124 83EC02              <2>  sub esp, 2
   257 00001127 89E7                <2>  mov edi, esp
   257                              <2>  _syscall_read 0, edi, 1
   257                              <3>  _syscall_3 3,%1,%2,%3
   257 00001129 52                  <4>  push edx
   257 0000112A 51                  <4>  push ecx
   257 0000112B 53                  <4>  push ebx
   257 0000112C 6A03                <4>  push %1
   257 0000112E 6A00                <4>  push %2
   257 00001130 57                  <4>  push %3
   257 00001131 6A01                <4>  push %4
   257 00001133 5A                  <4>  pop edx
   257 00001134 59                  <4>  pop ecx
   257 00001135 5B                  <4>  pop ebx
   257 00001136 58                  <4>  pop eax
   257 00001137 CD80                <4>  int 0x80
   257 00001139 5B                  <4>  pop ebx
   257 0000113A 59                  <4>  pop ecx
   257 0000113B 5A                  <4>  pop edx
   257 0000113C 83F801              <2>  cmp eax, 1
   257 0000113F 7506                <2>  jne %%eof_reached
   257 00001141 31C0                <2>  xor eax,eax
   257 00001143 8A07                <2>  mov al, [edi]
   257 00001145 EB04                <2>  jmp %%gcquit
   257                              <2> %%eof_reached:
   257 00001147 31C0                <2>  xor eax, eax
   257 00001149 F7D0                <2>  not eax
   257                              <2> %%gcquit:
   257 0000114B 83C402              <2>  add esp, 2
   257 0000114E 5F                  <2>  pop edi
   257 0000114F 9D                  <2>  popf
   257 00001150 3C0A                <1> cmp al,0xA
   257 00001152 7421                <1> je %%m2
   257 00001154 3C30                <1> cmp al,'0'
   257 00001156 7278                <1> jb %%m_err
   257 00001158 3C39                <1> cmp al,'9'
   257 0000115A 7774                <1> ja %%m_err
   257 0000115C 47                  <1> inc edi
   257 0000115D 31C9                <1> xor ecx,ecx
   257 0000115F 88C1                <1> mov cl,al
   257 00001161 89F0                <1> mov eax,esi
   257 00001163 BB0A000000          <1> mov ebx,10
   257 00001168 F7E3                <1> mul ebx
   257 0000116A 80E930              <1> sub cl,48
   257 0000116D 01C8                <1> add eax,ecx
   257 0000116F 720E                <1> jc %%m3
   257 00001171 89C6                <1> mov esi,eax
   257 00001173 EBAD                <1> jmp %%m1
   257                              <1> %%m2:
   257 00001175 83FF00              <1> cmp edi,0
   257 00001178 74A8                <1> je %%m1
   257 0000117A E99A000000          <1> jmp %%m4
   257                              <1> %%m3: PRINT "too big number"
   257                              <2> ..@239.m3: 
   257 0000117F 60                  <2>  pusha
   257 00001180 9C                  <2>  pushf
   257 00001181 EB0F                <2>  jmp %%astr
   257 00001183 746F6F20626967206E- <2> %%str db %1, 0
   257 0000118C 756D62657200        <2>
   257                              <2> %%strln equ $-%%str
   257                              <2> %%astr: _syscall_write 1, %%str, %%strln
   257                              <3> ..@243.astr: 
   257                              <3>  _syscall_3 4,%1,%2,%3
   257 00001192 52                  <4>  push edx
   257 00001193 51                  <4>  push ecx
   257 00001194 53                  <4>  push ebx
   257 00001195 6A04                <4>  push %1
   257 00001197 6A01                <4>  push %2
   257 00001199 68[83110000]        <4>  push %3
   257 0000119E 6A0F                <4>  push %4
   257 000011A0 5A                  <4>  pop edx
   257 000011A1 59                  <4>  pop ecx
   257 000011A2 5B                  <4>  pop ebx
   257 000011A3 58                  <4>  pop eax
   257 000011A4 CD80                <4>  int 0x80
   257 000011A6 5B                  <4>  pop ebx
   257 000011A7 59                  <4>  pop ecx
   257 000011A8 5A                  <4>  pop edx
   257 000011A9 9D                  <2>  popf
   257 000011AA 61                  <2>  popa
   257                              <1> PUTCHAR 10
   257 000011AB 60                  <2>  pusha
   257 000011AC 9C                  <2>  pushf
   257                              <2> %ifstr %1
   257                              <2>  mov al, %1
   257                              <2> %elifnum %1
   257 000011AD B00A                <2>  mov al, %1
   257                              <2> %elifidni %1,al
   257                              <2>  nop
   257                              <2> %elifidni %1,ah
   257                              <2>  mov al, ah
   257                              <2> %elifidni %1,bl
   257                              <2>  mov al, bl
   257                              <2> %elifidni %1,bh
   257                              <2>  mov al, bh
   257                              <2> %elifidni %1,cl
   257                              <2>  mov al, cl
   257                              <2> %elifidni %1,ch
   257                              <2>  mov al, ch
   257                              <2> %elifidni %1,dl
   257                              <2>  mov al, dl
   257                              <2> %elifidni %1,dh
   257                              <2>  mov al, dh
   257                              <2> %else
   257                              <2>  mov al, %1
   257                              <2> %endif
   257 000011AF 83EC02              <2>  sub esp, 2
   257 000011B2 89E7                <2>  mov edi, esp
   257 000011B4 8807                <2>  mov [edi], al
   257                              <2>  _syscall_write 1, edi, 1
   257                              <3>  _syscall_3 4,%1,%2,%3
   257 000011B6 52                  <4>  push edx
   257 000011B7 51                  <4>  push ecx
   257 000011B8 53                  <4>  push ebx
   257 000011B9 6A04                <4>  push %1
   257 000011BB 6A01                <4>  push %2
   257 000011BD 57                  <4>  push %3
   257 000011BE 6A01                <4>  push %4
   257 000011C0 5A                  <4>  pop edx
   257 000011C1 59                  <4>  pop ecx
   257 000011C2 5B                  <4>  pop ebx
   257 000011C3 58                  <4>  pop eax
   257 000011C4 CD80                <4>  int 0x80
   257 000011C6 5B                  <4>  pop ebx
   257 000011C7 59                  <4>  pop ecx
   257 000011C8 5A                  <4>  pop edx
   257 000011C9 83C402              <2>  add esp, 2
   257 000011CC 9D                  <2>  popf
   257 000011CD 61                  <2>  popa
   257 000011CE EB49                <1> jmp %%m4
   257                              <1> %%m_err: PRINT "ERROR!!!"
   257                              <2> ..@239.m_err: 
   257 000011D0 60                  <2>  pusha
   257 000011D1 9C                  <2>  pushf
   257 000011D2 EB09                <2>  jmp %%astr
   257 000011D4 4552524F5221212100  <2> %%str db %1, 0
   257                              <2> %%strln equ $-%%str
   257                              <2> %%astr: _syscall_write 1, %%str, %%strln
   257                              <3> ..@249.astr: 
   257                              <3>  _syscall_3 4,%1,%2,%3
   257 000011DD 52                  <4>  push edx
   257 000011DE 51                  <4>  push ecx
   257 000011DF 53                  <4>  push ebx
   257 000011E0 6A04                <4>  push %1
   257 000011E2 6A01                <4>  push %2
   257 000011E4 68[D4110000]        <4>  push %3
   257 000011E9 6A09                <4>  push %4
   257 000011EB 5A                  <4>  pop edx
   257 000011EC 59                  <4>  pop ecx
   257 000011ED 5B                  <4>  pop ebx
   257 000011EE 58                  <4>  pop eax
   257 000011EF CD80                <4>  int 0x80
   257 000011F1 5B                  <4>  pop ebx
   257 000011F2 59                  <4>  pop ecx
   257 000011F3 5A                  <4>  pop edx
   257 000011F4 9D                  <2>  popf
   257 000011F5 61                  <2>  popa
   257                              <1> PUTCHAR 0xa
   257 000011F6 60                  <2>  pusha
   257 000011F7 9C                  <2>  pushf
   257                              <2> %ifstr %1
   257                              <2>  mov al, %1
   257                              <2> %elifnum %1
   257 000011F8 B00A                <2>  mov al, %1
   257                              <2> %elifidni %1,al
   257                              <2>  nop
   257                              <2> %elifidni %1,ah
   257                              <2>  mov al, ah
   257                              <2> %elifidni %1,bl
   257                              <2>  mov al, bl
   257                              <2> %elifidni %1,bh
   257                              <2>  mov al, bh
   257                              <2> %elifidni %1,cl
   257                              <2>  mov al, cl
   257                              <2> %elifidni %1,ch
   257                              <2>  mov al, ch
   257                              <2> %elifidni %1,dl
   257                              <2>  mov al, dl
   257                              <2> %elifidni %1,dh
   257                              <2>  mov al, dh
   257                              <2> %else
   257                              <2>  mov al, %1
   257                              <2> %endif
   257 000011FA 83EC02              <2>  sub esp, 2
   257 000011FD 89E7                <2>  mov edi, esp
   257 000011FF 8807                <2>  mov [edi], al
   257                              <2>  _syscall_write 1, edi, 1
   257                              <3>  _syscall_3 4,%1,%2,%3
   257 00001201 52                  <4>  push edx
   257 00001202 51                  <4>  push ecx
   257 00001203 53                  <4>  push ebx
   257 00001204 6A04                <4>  push %1
   257 00001206 6A01                <4>  push %2
   257 00001208 57                  <4>  push %3
   257 00001209 6A01                <4>  push %4
   257 0000120B 5A                  <4>  pop edx
   257 0000120C 59                  <4>  pop ecx
   257 0000120D 5B                  <4>  pop ebx
   257 0000120E 58                  <4>  pop eax
   257 0000120F CD80                <4>  int 0x80
   257 00001211 5B                  <4>  pop ebx
   257 00001212 59                  <4>  pop ecx
   257 00001213 5A                  <4>  pop edx
   257 00001214 83C402              <2>  add esp, 2
   257 00001217 9D                  <2>  popf
   257 00001218 61                  <2>  popa
   257                              <1> %%m4:
   257                              <1> 
   257 00001219 56                  <1> push esi
   257 0000121A 83C404              <1> add esp,4
   257 0000121D 9D                  <1> popfd
   257 0000121E 61                  <1> popad
   257 0000121F 83EC28              <1> sub esp,40
   257 00001222 58                  <1> pop dword %1
   257 00001223 83C424              <1> add esp,36
   258                                  PUTCHAR 0xA
   258 00001226 60                  <1>  pusha
   258 00001227 9C                  <1>  pushf
   258                              <1> %ifstr %1
   258                              <1>  mov al, %1
   258                              <1> %elifnum %1
   258 00001228 B00A                <1>  mov al, %1
   258                              <1> %elifidni %1,al
   258                              <1>  nop
   258                              <1> %elifidni %1,ah
   258                              <1>  mov al, ah
   258                              <1> %elifidni %1,bl
   258                              <1>  mov al, bl
   258                              <1> %elifidni %1,bh
   258                              <1>  mov al, bh
   258                              <1> %elifidni %1,cl
   258                              <1>  mov al, cl
   258                              <1> %elifidni %1,ch
   258                              <1>  mov al, ch
   258                              <1> %elifidni %1,dl
   258                              <1>  mov al, dl
   258                              <1> %elifidni %1,dh
   258                              <1>  mov al, dh
   258                              <1> %else
   258                              <1>  mov al, %1
   258                              <1> %endif
   258 0000122A 83EC02              <1>  sub esp, 2
   258 0000122D 89E7                <1>  mov edi, esp
   258 0000122F 8807                <1>  mov [edi], al
   258                              <1>  _syscall_write 1, edi, 1
   258                              <2>  _syscall_3 4,%1,%2,%3
   258 00001231 52                  <3>  push edx
   258 00001232 51                  <3>  push ecx
   258 00001233 53                  <3>  push ebx
   258 00001234 6A04                <3>  push %1
   258 00001236 6A01                <3>  push %2
   258 00001238 57                  <3>  push %3
   258 00001239 6A01                <3>  push %4
   258 0000123B 5A                  <3>  pop edx
   258 0000123C 59                  <3>  pop ecx
   258 0000123D 5B                  <3>  pop ebx
   258 0000123E 58                  <3>  pop eax
   258 0000123F CD80                <3>  int 0x80
   258 00001241 5B                  <3>  pop ebx
   258 00001242 59                  <3>  pop ecx
   258 00001243 5A                  <3>  pop edx
   258 00001244 83C402              <1>  add esp, 2
   258 00001247 9D                  <1>  popf
   258 00001248 61                  <1>  popa
   259 00001249 E88EF1FFFF              call new
   260 0000124E 833D[08000000]00        cmp dword[a+4], NULL
   261 00001255 7514                    jne str1
   262 00001257 FF35[00000000]          push dword[list]
   263 0000125D 893D[00000000]          mov [list], edi
   264 00001263 8F4702                  pop dword[edi+node.next]
   265 00001266 668907                  mov [edi+node.elem], ax
   266 00001269 EB15                    jmp str2
   267                                  str1:
   268 0000126B 668907                  mov [edi+node.elem], ax
   269 0000126E 8B1D[08000000]          mov ebx, [a+4]
   270 00001274 897B02                  mov [ebx+node.next], edi
   271 00001277 8B1D[04000000]          mov ebx, [a]
   272 0000127D 895F02                  mov [edi+node.next], ebx
   273                                  str2:
   274 00001280 E8B8F1FFFF              call print
   275 00001285 C3                      ret
   276                                  
   277                                  find:
   278 00001286 60                      pushad 
   279 00001287 8B1D[00000000]          mov ebx, [list]
   280 0000128D BA00000000              mov edx, NULL
   281                                  find1:
   282 00001292 83FB00                  cmp ebx, NULL
   283 00001295 7502                    jne find2
   284 00001297 EB1A                    jmp end
   285                                  find2:
   286 00001299 663903                  cmp word[ebx+node.elem],ax
   287 0000129C 750E                    jne find3
   288 0000129E 891D[04000000]          mov [a], ebx
   289 000012A4 8915[08000000]          mov [a+4], edx
   290 000012AA EB07                    jmp end
   291                                  find3:
   292 000012AC 89DA                    mov edx, ebx
   293 000012AE 8B5B02                  mov ebx, [ebx+node.next]
   294 000012B1 EBDF                    jmp find1
   295                                  end:
   296 000012B3 61                      popad
   297 000012B4 C3                      ret
   298                                  
   299                                  deletelist:
   300 000012B5 8B1D[00000000]          mov ebx, [list]
   301                                  list1:
   302 000012BB 83FB00                  cmp ebx, NULL
   303 000012BE 7562                    jne list2
   304                                  PRINT "Список был удален"
   304 000012C0 60                  <1>  pusha
   304 000012C1 9C                  <1>  pushf
   304 000012C2 EB21                <1>  jmp %%astr
   304 000012C4 D0A1D0BFD0B8D181D0- <1> %%str db %1, 0
   304 000012CD BED0BA20D0B1D18BD0- <1>
   304 000012D6 BB20D183D0B4D0B0D0- <1>
   304 000012DF BBD0B5D0BD00        <1>
   304                              <1> %%strln equ $-%%str
   304                              <1> %%astr: _syscall_write 1, %%str, %%strln
   304                              <2> ..@258.astr: 
   304                              <2>  _syscall_3 4,%1,%2,%3
   304 000012E5 52                  <3>  push edx
   304 000012E6 51                  <3>  push ecx
   304 000012E7 53                  <3>  push ebx
   304 000012E8 6A04                <3>  push %1
   304 000012EA 6A01                <3>  push %2
   304 000012EC 68[C4120000]        <3>  push %3
   304 000012F1 6A21                <3>  push %4
   304 000012F3 5A                  <3>  pop edx
   304 000012F4 59                  <3>  pop ecx
   304 000012F5 5B                  <3>  pop ebx
   304 000012F6 58                  <3>  pop eax
   304 000012F7 CD80                <3>  int 0x80
   304 000012F9 5B                  <3>  pop ebx
   304 000012FA 59                  <3>  pop ecx
   304 000012FB 5A                  <3>  pop edx
   304 000012FC 9D                  <1>  popf
   304 000012FD 61                  <1>  popa
   305                                  PUTCHAR 0xa
   305 000012FE 60                  <1>  pusha
   305 000012FF 9C                  <1>  pushf
   305                              <1> %ifstr %1
   305                              <1>  mov al, %1
   305                              <1> %elifnum %1
   305 00001300 B00A                <1>  mov al, %1
   305                              <1> %elifidni %1,al
   305                              <1>  nop
   305                              <1> %elifidni %1,ah
   305                              <1>  mov al, ah
   305                              <1> %elifidni %1,bl
   305                              <1>  mov al, bl
   305                              <1> %elifidni %1,bh
   305                              <1>  mov al, bh
   305                              <1> %elifidni %1,cl
   305                              <1>  mov al, cl
   305                              <1> %elifidni %1,ch
   305                              <1>  mov al, ch
   305                              <1> %elifidni %1,dl
   305                              <1>  mov al, dl
   305                              <1> %elifidni %1,dh
   305                              <1>  mov al, dh
   305                              <1> %else
   305                              <1>  mov al, %1
   305                              <1> %endif
   305 00001302 83EC02              <1>  sub esp, 2
   305 00001305 89E7                <1>  mov edi, esp
   305 00001307 8807                <1>  mov [edi], al
   305                              <1>  _syscall_write 1, edi, 1
   305                              <2>  _syscall_3 4,%1,%2,%3
   305 00001309 52                  <3>  push edx
   305 0000130A 51                  <3>  push ecx
   305 0000130B 53                  <3>  push ebx
   305 0000130C 6A04                <3>  push %1
   305 0000130E 6A01                <3>  push %2
   305 00001310 57                  <3>  push %3
   305 00001311 6A01                <3>  push %4
   305 00001313 5A                  <3>  pop edx
   305 00001314 59                  <3>  pop ecx
   305 00001315 5B                  <3>  pop ebx
   305 00001316 58                  <3>  pop eax
   305 00001317 CD80                <3>  int 0x80
   305 00001319 5B                  <3>  pop ebx
   305 0000131A 59                  <3>  pop ecx
   305 0000131B 5A                  <3>  pop edx
   305 0000131C 83C402              <1>  add esp, 2
   305 0000131F 9D                  <1>  popf
   305 00001320 61                  <1>  popa
   306 00001321 C3                      ret
   307                                  list2:
   308 00001322 89DF                    mov edi, ebx
   309 00001324 8B5B02                  mov ebx, [ebx+node.next]
   310 00001327 E8E0F1FFFF              call free
   311 0000132C EB8D                    jmp list1
   312                                  
   313                                  sort:
   314 0000132E 60                      pushad
   315 0000132F C605[0C000000]00        mov byte[b], 0
   316 00001336 8B1D[00000000]          mov ebx, [list]
   317                                  sort1:
   318 0000133C 83FB00                  cmp ebx, NULL
   319 0000133F 7545                    jne sort2
   320 00001341 61                      popad
   321 00001342 8A0D[0C000000]          mov cl, [b]
   322 00001348 000D[0C000000]          add [b], cl
   323 0000134E 31C9                    xor ecx, ecx
   324 00001350 8A0D[0C000000]          mov cl, [b]
   325                                  sort3:
   326 00001356 8B1D[00000000]          mov ebx, [list]
   327                                  sort4:
   328 0000135C 837B0200                cmp dword[ebx+node.next], NULL
   329 00001360 7508                    jne sort5
   330 00001362 49                      dec ecx
   331 00001363 83F900                  cmp ecx, 0
   332 00001366 7418                    je prr
   333 00001368 EBEC                    jmp sort3
   334                                  sort5:
   335 0000136A 668B13                  mov dx, [ebx+node.elem]
   336 0000136D 8B7302                  mov esi, [ebx+node.next]
   337 00001370 663B16                  cmp dx, [esi+node.elem]
   338 00001373 7207                    jb sort6
   339 00001375 89D8                    mov eax, ebx
   340 00001377 E815000000              call change
   341                                  sort6:
   342 0000137C 89F3                    mov ebx, esi
   343 0000137E EBDC                    jmp sort4
   344                                  prr:
   345 00001380 E8B8F0FFFF              call print
   346 00001385 C3                      ret
   347                                  sort2:
   348 00001386 FE05[0C000000]          inc byte[b]
   349 0000138C 8B5B02                  mov ebx, [ebx+node.next]
   350 0000138F EBAB                    jmp sort1
   351                                  
   352                                  change:
   353 00001391 60                      pushad
   354 00001392 66FF30                  push word[eax+node.elem]
   355 00001395 8B5802                  mov ebx, [eax+node.next]
   356 00001398 668B13                  mov dx, [ebx+node.elem]
   357 0000139B 668F03                  pop word[ebx+node.elem]
   358 0000139E 668910                  mov [eax+node.elem], dx
   359 000013A1 61                      popad
   360 000013A2 C3                      ret
