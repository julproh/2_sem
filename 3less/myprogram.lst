     1                                  global _start
     2                                  %include "st_io.inc"
     1                              <1> ;; File stud_io.inc for Linux O.S.
     2                              <1> ;; Copyright (c) Andrey Vikt. Stolyarov, 2009.
     3                              <1> ;; I, the author, hereby grant everyone the right to use this
     4                              <1> ;; file for any purpose, in any manner, in it's original or
     5                              <1> ;; modified form, provided that any modified versions are
     6                              <1> ;; clearly marked as such.
     7                              <1> ;; file changed, macros added (by Divari I.N.,
     8                              <1> ;; Department of computer science, MIPT, 2019-2020)
     9                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    10                              <1> ;; system dependend part
    11                              <1> 
    12                              <1> ; generic 3-param syscall
    13                              <1> %macro _syscall_3 4
    14                              <1> 	push edx
    15                              <1> 	push ecx
    16                              <1> 	push ebx ; it is senseless to save eax as it holds the return
    17                              <1> 	push %1
    18                              <1> 	push %2
    19                              <1> 	push %3
    20                              <1> 	push %4
    21                              <1> 	pop edx
    22                              <1> 	pop ecx
    23                              <1> 	pop ebx
    24                              <1> 	pop eax 
    25                              <1> 	int 0x80
    26                              <1> 	pop ebx
    27                              <1> 	pop ecx
    28                              <1> 	pop edx
    29                              <1> %endmacro
    30                              <1> 
    31                              <1> ; syscall_exit is the only syscall we use that has 1 parameter
    32                              <1> %macro _syscall_exit 1
    33                              <1> 	mov ebx, %1	; exit code
    34                              <1> 	mov eax, 1	; 1 = sys_exit
    35                              <1> 	int 0x80
    36                              <1> %endmacro
    37                              <1> 
    38                              <1> ;; system dependent part ends here
    39                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    40                              <1> 
    41                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    42                              <1> ; output: eax: read bytes
    43                              <1> %macro _syscall_read 3
    44                              <1> 	_syscall_3 3,%1,%2,%3
    45                              <1> %endmacro
    46                              <1> 
    47                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    48                              <1> ; output: eax: written bytes
    49                              <1> %macro _syscall_write 3
    50                              <1> 	_syscall_3 4,%1,%2,%3
    51                              <1> %endmacro
    52                              <1> 
    53                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    54                              <1> %macro 	PRINT 1
    55                              <1> 	pusha
    56                              <1> 	pushf
    57                              <1> 	jmp %%astr
    58                              <1> %%str	db	%1, 0
    59                              <1> %%strln	equ	$-%%str
    60                              <1> %%astr:	_syscall_write 1, %%str, %%strln
    61                              <1> 	popf
    62                              <1> 	popa
    63                              <1> %endmacro
    64                              <1> 
    65                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    66                              <1> %macro	PUTCHAR 1
    67                              <1> 	pusha
    68                              <1> 	pushf
    69                              <1> %ifstr %1
    70                              <1> 	mov	al, %1
    71                              <1> %elifnum %1
    72                              <1> 	mov	al, %1
    73                              <1> %elifidni %1,al
    74                              <1> 	nop
    75                              <1> %elifidni %1,ah
    76                              <1> 	mov	al, ah
    77                              <1> %elifidni %1,bl
    78                              <1> 	mov	al, bl
    79                              <1> %elifidni %1,bh
    80                              <1> 	mov	al, bh
    81                              <1> %elifidni %1,cl
    82                              <1> 	mov	al, cl
    83                              <1> %elifidni %1,ch
    84                              <1> 	mov	al, ch
    85                              <1> %elifidni %1,dl
    86                              <1> 	mov	al, dl
    87                              <1> %elifidni %1,dh
    88                              <1> 	mov	al, dh
    89                              <1> %else
    90                              <1> 	mov	al, %1  ; let's hope it is a memory location such as [var]
    91                              <1> %endif
    92                              <1> 	sub	esp, 2  ; reserve memory for buffer
    93                              <1> 	mov	edi, esp
    94                              <1> 	mov	[edi], al
    95                              <1> 	_syscall_write 1, edi, 1
    96                              <1> 	add	esp, 2
    97                              <1> 	popf
    98                              <1> 	popa
    99                              <1> %endmacro
   100                              <1> 
   101                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   102                              <1> %macro	GETCHAR 0
   103                              <1> 	pushf
   104                              <1> 	push	edi
   105                              <1> 	sub	esp, 2
   106                              <1> 	mov	edi, esp
   107                              <1> 	_syscall_read 0, edi, 1
   108                              <1> 	cmp	eax, 1
   109                              <1> 	jne	%%eof_reached
   110                              <1> 	xor	eax,eax
   111                              <1> 	mov	al, [edi]
   112                              <1> 	jmp	%%gcquit
   113                              <1> %%eof_reached:
   114                              <1> 	xor	eax, eax
   115                              <1> 	not	eax 		; eax := -1
   116                              <1> %%gcquit:
   117                              <1> 	add	esp, 2
   118                              <1> 	pop	edi
   119                              <1> 	popf
   120                              <1> %endmacro
   121                              <1> 
   122                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   123                              <1> %macro FINISH 0-1 0
   124                              <1> 	_syscall_exit %1
   125                              <1> %endmacro
   126                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   127                              <1> %macro UNSINT 1
   128                              <1> pusha
   129                              <1> pushf
   130                              <1> push dword %1
   131                              <1> pop eax
   132                              <1> mov edi,eax
   133                              <1> mov esi,10
   134                              <1>   xor ebx,ebx
   135                              <1> %%m1:
   136                              <1>    xor edx,edx
   137                              <1>    div esi
   138                              <1>    inc ebx
   139                              <1>    cmp eax,0
   140                              <1>    jne %%m1
   141                              <1>     
   142                              <1>    mov eax,1
   143                              <1>    mov ecx,ebx
   144                              <1>    dec ecx
   145                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   146                              <1>     cmp ecx,0
   147                              <1>      je %%m4
   148                              <1> %%m2:  mul esi
   149                              <1>        loop %%m2
   150                              <1> 
   151                              <1>        mov ebx,eax
   152                              <1> 
   153                              <1> %%m3:       
   154                              <1>       mov eax,edi 
   155                              <1>       xor edx,edx 
   156                              <1>       div ebx
   157                              <1>       add al,'0'
   158                              <1>       PUTCHAR al
   159                              <1>       mov edi,edx
   160                              <1>       xor edx,edx
   161                              <1>       mov eax,ebx
   162                              <1>       div esi
   163                              <1>       cmp eax,1
   164                              <1>       je %%m4
   165                              <1>       mov ebx,eax
   166                              <1>       jmp %%m3
   167                              <1>  %%m4:      
   168                              <1>       mov edx,edi
   169                              <1>       add dl,'0'
   170                              <1>       PUTCHAR dl
   171                              <1>        
   172                              <1>   
   173                              <1> popf
   174                              <1> popa
   175                              <1> %endmacro
   176                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   177                              <1> %macro SIGNINT 1
   178                              <1> pusha
   179                              <1> pushf
   180                              <1> push dword %1
   181                              <1> pop eax
   182                              <1>     cmp eax,0
   183                              <1>     jge %%m5
   184                              <1>     PUTCHAR '-'
   185                              <1>     neg eax
   186                              <1> %%m5:
   187                              <1>       UNSINT eax
   188                              <1> popf
   189                              <1> popa
   190                              <1> %endmacro
     3                                  section .data
     4 00000000 2A                       a db  "*"
     5 00000001 C2010000                 b dd  450  
     6 00000005 F2FFFFFF                 d dd -14
     7                                  section .text
     8                                  _start:
     9                                  	PRINT "Hello, world!"
     9 00000000 60                  <1>  pusha
     9 00000001 9C                  <1>  pushf
     9 00000002 EB0E                <1>  jmp %%astr
     9 00000004 48656C6C6F2C20776F- <1> %%str db %1, 0
     9 0000000D 726C642100          <1>
     9                              <1> %%strln equ $-%%str
     9                              <1> %%astr: _syscall_write 1, %%str, %%strln
     9                              <2> ..@3.astr: 
     9                              <2>  _syscall_3 4,%1,%2,%3
     9 00000012 52                  <3>  push edx
     9 00000013 51                  <3>  push ecx
     9 00000014 53                  <3>  push ebx
     9 00000015 6A04                <3>  push %1
     9 00000017 6A01                <3>  push %2
     9 00000019 68[04000000]        <3>  push %3
     9 0000001E 6A0E                <3>  push %4
     9 00000020 5A                  <3>  pop edx
     9 00000021 59                  <3>  pop ecx
     9 00000022 5B                  <3>  pop ebx
     9 00000023 58                  <3>  pop eax
     9 00000024 CD80                <3>  int 0x80
     9 00000026 5B                  <3>  pop ebx
     9 00000027 59                  <3>  pop ecx
     9 00000028 5A                  <3>  pop edx
     9 00000029 9D                  <1>  popf
     9 0000002A 61                  <1>  popa
    10                                  	PUTCHAR 0xA
    10 0000002B 60                  <1>  pusha
    10 0000002C 9C                  <1>  pushf
    10                              <1> %ifstr %1
    10                              <1>  mov al, %1
    10                              <1> %elifnum %1
    10 0000002D B00A                <1>  mov al, %1
    10                              <1> %elifidni %1,al
    10                              <1>  nop
    10                              <1> %elifidni %1,ah
    10                              <1>  mov al, ah
    10                              <1> %elifidni %1,bl
    10                              <1>  mov al, bl
    10                              <1> %elifidni %1,bh
    10                              <1>  mov al, bh
    10                              <1> %elifidni %1,cl
    10                              <1>  mov al, cl
    10                              <1> %elifidni %1,ch
    10                              <1>  mov al, ch
    10                              <1> %elifidni %1,dl
    10                              <1>  mov al, dl
    10                              <1> %elifidni %1,dh
    10                              <1>  mov al, dh
    10                              <1> %else
    10                              <1>  mov al, %1
    10                              <1> %endif
    10 0000002F 83EC02              <1>  sub esp, 2
    10 00000032 89E7                <1>  mov edi, esp
    10 00000034 8807                <1>  mov [edi], al
    10                              <1>  _syscall_write 1, edi, 1
    10                              <2>  _syscall_3 4,%1,%2,%3
    10 00000036 52                  <3>  push edx
    10 00000037 51                  <3>  push ecx
    10 00000038 53                  <3>  push ebx
    10 00000039 6A04                <3>  push %1
    10 0000003B 6A01                <3>  push %2
    10 0000003D 57                  <3>  push %3
    10 0000003E 6A01                <3>  push %4
    10 00000040 5A                  <3>  pop edx
    10 00000041 59                  <3>  pop ecx
    10 00000042 5B                  <3>  pop ebx
    10 00000043 58                  <3>  pop eax
    10 00000044 CD80                <3>  int 0x80
    10 00000046 5B                  <3>  pop ebx
    10 00000047 59                  <3>  pop ecx
    10 00000048 5A                  <3>  pop edx
    10 00000049 83C402              <1>  add esp, 2
    10 0000004C 9D                  <1>  popf
    10 0000004D 61                  <1>  popa
    11 0000004E A0[00000000]            	mov al, [a]
    12                                  	PUTCHAR al
    12 00000053 60                  <1>  pusha
    12 00000054 9C                  <1>  pushf
    12                              <1> %ifstr %1
    12                              <1>  mov al, %1
    12                              <1> %elifnum %1
    12                              <1>  mov al, %1
    12                              <1> %elifidni %1,al
    12 00000055 90                  <1>  nop
    12                              <1> %elifidni %1,ah
    12                              <1>  mov al, ah
    12                              <1> %elifidni %1,bl
    12                              <1>  mov al, bl
    12                              <1> %elifidni %1,bh
    12                              <1>  mov al, bh
    12                              <1> %elifidni %1,cl
    12                              <1>  mov al, cl
    12                              <1> %elifidni %1,ch
    12                              <1>  mov al, ch
    12                              <1> %elifidni %1,dl
    12                              <1>  mov al, dl
    12                              <1> %elifidni %1,dh
    12                              <1>  mov al, dh
    12                              <1> %else
    12                              <1>  mov al, %1
    12                              <1> %endif
    12 00000056 83EC02              <1>  sub esp, 2
    12 00000059 89E7                <1>  mov edi, esp
    12 0000005B 8807                <1>  mov [edi], al
    12                              <1>  _syscall_write 1, edi, 1
    12                              <2>  _syscall_3 4,%1,%2,%3
    12 0000005D 52                  <3>  push edx
    12 0000005E 51                  <3>  push ecx
    12 0000005F 53                  <3>  push ebx
    12 00000060 6A04                <3>  push %1
    12 00000062 6A01                <3>  push %2
    12 00000064 57                  <3>  push %3
    12 00000065 6A01                <3>  push %4
    12 00000067 5A                  <3>  pop edx
    12 00000068 59                  <3>  pop ecx
    12 00000069 5B                  <3>  pop ebx
    12 0000006A 58                  <3>  pop eax
    12 0000006B CD80                <3>  int 0x80
    12 0000006D 5B                  <3>  pop ebx
    12 0000006E 59                  <3>  pop ecx
    12 0000006F 5A                  <3>  pop edx
    12 00000070 83C402              <1>  add esp, 2
    12 00000073 9D                  <1>  popf
    12 00000074 61                  <1>  popa
    13                                  	PUTCHAR 0xA
    13 00000075 60                  <1>  pusha
    13 00000076 9C                  <1>  pushf
    13                              <1> %ifstr %1
    13                              <1>  mov al, %1
    13                              <1> %elifnum %1
    13 00000077 B00A                <1>  mov al, %1
    13                              <1> %elifidni %1,al
    13                              <1>  nop
    13                              <1> %elifidni %1,ah
    13                              <1>  mov al, ah
    13                              <1> %elifidni %1,bl
    13                              <1>  mov al, bl
    13                              <1> %elifidni %1,bh
    13                              <1>  mov al, bh
    13                              <1> %elifidni %1,cl
    13                              <1>  mov al, cl
    13                              <1> %elifidni %1,ch
    13                              <1>  mov al, ch
    13                              <1> %elifidni %1,dl
    13                              <1>  mov al, dl
    13                              <1> %elifidni %1,dh
    13                              <1>  mov al, dh
    13                              <1> %else
    13                              <1>  mov al, %1
    13                              <1> %endif
    13 00000079 83EC02              <1>  sub esp, 2
    13 0000007C 89E7                <1>  mov edi, esp
    13 0000007E 8807                <1>  mov [edi], al
    13                              <1>  _syscall_write 1, edi, 1
    13                              <2>  _syscall_3 4,%1,%2,%3
    13 00000080 52                  <3>  push edx
    13 00000081 51                  <3>  push ecx
    13 00000082 53                  <3>  push ebx
    13 00000083 6A04                <3>  push %1
    13 00000085 6A01                <3>  push %2
    13 00000087 57                  <3>  push %3
    13 00000088 6A01                <3>  push %4
    13 0000008A 5A                  <3>  pop edx
    13 0000008B 59                  <3>  pop ecx
    13 0000008C 5B                  <3>  pop ebx
    13 0000008D 58                  <3>  pop eax
    13 0000008E CD80                <3>  int 0x80
    13 00000090 5B                  <3>  pop ebx
    13 00000091 59                  <3>  pop ecx
    13 00000092 5A                  <3>  pop edx
    13 00000093 83C402              <1>  add esp, 2
    13 00000096 9D                  <1>  popf
    13 00000097 61                  <1>  popa
    14                                  	GETCHAR 
    14 00000098 9C                  <1>  pushf
    14 00000099 57                  <1>  push edi
    14 0000009A 83EC02              <1>  sub esp, 2
    14 0000009D 89E7                <1>  mov edi, esp
    14                              <1>  _syscall_read 0, edi, 1
    14                              <2>  _syscall_3 3,%1,%2,%3
    14 0000009F 52                  <3>  push edx
    14 000000A0 51                  <3>  push ecx
    14 000000A1 53                  <3>  push ebx
    14 000000A2 6A03                <3>  push %1
    14 000000A4 6A00                <3>  push %2
    14 000000A6 57                  <3>  push %3
    14 000000A7 6A01                <3>  push %4
    14 000000A9 5A                  <3>  pop edx
    14 000000AA 59                  <3>  pop ecx
    14 000000AB 5B                  <3>  pop ebx
    14 000000AC 58                  <3>  pop eax
    14 000000AD CD80                <3>  int 0x80
    14 000000AF 5B                  <3>  pop ebx
    14 000000B0 59                  <3>  pop ecx
    14 000000B1 5A                  <3>  pop edx
    14 000000B2 83F801              <1>  cmp eax, 1
    14 000000B5 7506                <1>  jne %%eof_reached
    14 000000B7 31C0                <1>  xor eax,eax
    14 000000B9 8A07                <1>  mov al, [edi]
    14 000000BB EB04                <1>  jmp %%gcquit
    14                              <1> %%eof_reached:
    14 000000BD 31C0                <1>  xor eax, eax
    14 000000BF F7D0                <1>  not eax
    14                              <1> %%gcquit:
    14 000000C1 83C402              <1>  add esp, 2
    14 000000C4 5F                  <1>  pop edi
    14 000000C5 9D                  <1>  popf
    15                                  	PRINT "YOUR TEXT is: "	
    15 000000C6 60                  <1>  pusha
    15 000000C7 9C                  <1>  pushf
    15 000000C8 EB0F                <1>  jmp %%astr
    15 000000CA 594F55522054455854- <1> %%str db %1, 0
    15 000000D3 2069733A2000        <1>
    15                              <1> %%strln equ $-%%str
    15                              <1> %%astr: _syscall_write 1, %%str, %%strln
    15                              <2> ..@18.astr: 
    15                              <2>  _syscall_3 4,%1,%2,%3
    15 000000D9 52                  <3>  push edx
    15 000000DA 51                  <3>  push ecx
    15 000000DB 53                  <3>  push ebx
    15 000000DC 6A04                <3>  push %1
    15 000000DE 6A01                <3>  push %2
    15 000000E0 68[CA000000]        <3>  push %3
    15 000000E5 6A0F                <3>  push %4
    15 000000E7 5A                  <3>  pop edx
    15 000000E8 59                  <3>  pop ecx
    15 000000E9 5B                  <3>  pop ebx
    15 000000EA 58                  <3>  pop eax
    15 000000EB CD80                <3>  int 0x80
    15 000000ED 5B                  <3>  pop ebx
    15 000000EE 59                  <3>  pop ecx
    15 000000EF 5A                  <3>  pop edx
    15 000000F0 9D                  <1>  popf
    15 000000F1 61                  <1>  popa
    16                                  	PUTCHAR al
    16 000000F2 60                  <1>  pusha
    16 000000F3 9C                  <1>  pushf
    16                              <1> %ifstr %1
    16                              <1>  mov al, %1
    16                              <1> %elifnum %1
    16                              <1>  mov al, %1
    16                              <1> %elifidni %1,al
    16 000000F4 90                  <1>  nop
    16                              <1> %elifidni %1,ah
    16                              <1>  mov al, ah
    16                              <1> %elifidni %1,bl
    16                              <1>  mov al, bl
    16                              <1> %elifidni %1,bh
    16                              <1>  mov al, bh
    16                              <1> %elifidni %1,cl
    16                              <1>  mov al, cl
    16                              <1> %elifidni %1,ch
    16                              <1>  mov al, ch
    16                              <1> %elifidni %1,dl
    16                              <1>  mov al, dl
    16                              <1> %elifidni %1,dh
    16                              <1>  mov al, dh
    16                              <1> %else
    16                              <1>  mov al, %1
    16                              <1> %endif
    16 000000F5 83EC02              <1>  sub esp, 2
    16 000000F8 89E7                <1>  mov edi, esp
    16 000000FA 8807                <1>  mov [edi], al
    16                              <1>  _syscall_write 1, edi, 1
    16                              <2>  _syscall_3 4,%1,%2,%3
    16 000000FC 52                  <3>  push edx
    16 000000FD 51                  <3>  push ecx
    16 000000FE 53                  <3>  push ebx
    16 000000FF 6A04                <3>  push %1
    16 00000101 6A01                <3>  push %2
    16 00000103 57                  <3>  push %3
    16 00000104 6A01                <3>  push %4
    16 00000106 5A                  <3>  pop edx
    16 00000107 59                  <3>  pop ecx
    16 00000108 5B                  <3>  pop ebx
    16 00000109 58                  <3>  pop eax
    16 0000010A CD80                <3>  int 0x80
    16 0000010C 5B                  <3>  pop ebx
    16 0000010D 59                  <3>  pop ecx
    16 0000010E 5A                  <3>  pop edx
    16 0000010F 83C402              <1>  add esp, 2
    16 00000112 9D                  <1>  popf
    16 00000113 61                  <1>  popa
    17                                  	PUTCHAR 0xA
    17 00000114 60                  <1>  pusha
    17 00000115 9C                  <1>  pushf
    17                              <1> %ifstr %1
    17                              <1>  mov al, %1
    17                              <1> %elifnum %1
    17 00000116 B00A                <1>  mov al, %1
    17                              <1> %elifidni %1,al
    17                              <1>  nop
    17                              <1> %elifidni %1,ah
    17                              <1>  mov al, ah
    17                              <1> %elifidni %1,bl
    17                              <1>  mov al, bl
    17                              <1> %elifidni %1,bh
    17                              <1>  mov al, bh
    17                              <1> %elifidni %1,cl
    17                              <1>  mov al, cl
    17                              <1> %elifidni %1,ch
    17                              <1>  mov al, ch
    17                              <1> %elifidni %1,dl
    17                              <1>  mov al, dl
    17                              <1> %elifidni %1,dh
    17                              <1>  mov al, dh
    17                              <1> %else
    17                              <1>  mov al, %1
    17                              <1> %endif
    17 00000118 83EC02              <1>  sub esp, 2
    17 0000011B 89E7                <1>  mov edi, esp
    17 0000011D 8807                <1>  mov [edi], al
    17                              <1>  _syscall_write 1, edi, 1
    17                              <2>  _syscall_3 4,%1,%2,%3
    17 0000011F 52                  <3>  push edx
    17 00000120 51                  <3>  push ecx
    17 00000121 53                  <3>  push ebx
    17 00000122 6A04                <3>  push %1
    17 00000124 6A01                <3>  push %2
    17 00000126 57                  <3>  push %3
    17 00000127 6A01                <3>  push %4
    17 00000129 5A                  <3>  pop edx
    17 0000012A 59                  <3>  pop ecx
    17 0000012B 5B                  <3>  pop ebx
    17 0000012C 58                  <3>  pop eax
    17 0000012D CD80                <3>  int 0x80
    17 0000012F 5B                  <3>  pop ebx
    17 00000130 59                  <3>  pop ecx
    17 00000131 5A                  <3>  pop edx
    17 00000132 83C402              <1>  add esp, 2
    17 00000135 9D                  <1>  popf
    17 00000136 61                  <1>  popa
    18 00000137 A1[01000000]            	mov eax, [b]
    19                                  	UNSINT eax
    19 0000013C 60                  <1> pusha
    19 0000013D 9C                  <1> pushf
    19 0000013E 50                  <1> push dword %1
    19 0000013F 58                  <1> pop eax
    19 00000140 89C7                <1> mov edi,eax
    19 00000142 BE0A000000          <1> mov esi,10
    19 00000147 31DB                <1>  xor ebx,ebx
    19                              <1> %%m1:
    19 00000149 31D2                <1>  xor edx,edx
    19 0000014B F7F6                <1>  div esi
    19 0000014D 43                  <1>  inc ebx
    19 0000014E 83F800              <1>  cmp eax,0
    19 00000151 75F6                <1>  jne %%m1
    19                              <1> 
    19 00000153 B801000000          <1>  mov eax,1
    19 00000158 89D9                <1>  mov ecx,ebx
    19 0000015A 49                  <1>  dec ecx
    19                              <1> 
    19 0000015B 83F900              <1>  cmp ecx,0
    19 0000015E 7441                <1>  je %%m4
    19 00000160 F7E6                <1> %%m2: mul esi
    19 00000162 E2FC                <1>  loop %%m2
    19                              <1> 
    19 00000164 89C3                <1>  mov ebx,eax
    19                              <1> 
    19                              <1> %%m3:
    19 00000166 89F8                <1>  mov eax,edi
    19 00000168 31D2                <1>  xor edx,edx
    19 0000016A F7F3                <1>  div ebx
    19 0000016C 0430                <1>  add al,'0'
    19                              <1>  PUTCHAR al
    19 0000016E 60                  <2>  pusha
    19 0000016F 9C                  <2>  pushf
    19                              <2> %ifstr %1
    19                              <2>  mov al, %1
    19                              <2> %elifnum %1
    19                              <2>  mov al, %1
    19                              <2> %elifidni %1,al
    19 00000170 90                  <2>  nop
    19                              <2> %elifidni %1,ah
    19                              <2>  mov al, ah
    19                              <2> %elifidni %1,bl
    19                              <2>  mov al, bl
    19                              <2> %elifidni %1,bh
    19                              <2>  mov al, bh
    19                              <2> %elifidni %1,cl
    19                              <2>  mov al, cl
    19                              <2> %elifidni %1,ch
    19                              <2>  mov al, ch
    19                              <2> %elifidni %1,dl
    19                              <2>  mov al, dl
    19                              <2> %elifidni %1,dh
    19                              <2>  mov al, dh
    19                              <2> %else
    19                              <2>  mov al, %1
    19                              <2> %endif
    19 00000171 83EC02              <2>  sub esp, 2
    19 00000174 89E7                <2>  mov edi, esp
    19 00000176 8807                <2>  mov [edi], al
    19                              <2>  _syscall_write 1, edi, 1
    19                              <3>  _syscall_3 4,%1,%2,%3
    19 00000178 52                  <4>  push edx
    19 00000179 51                  <4>  push ecx
    19 0000017A 53                  <4>  push ebx
    19 0000017B 6A04                <4>  push %1
    19 0000017D 6A01                <4>  push %2
    19 0000017F 57                  <4>  push %3
    19 00000180 6A01                <4>  push %4
    19 00000182 5A                  <4>  pop edx
    19 00000183 59                  <4>  pop ecx
    19 00000184 5B                  <4>  pop ebx
    19 00000185 58                  <4>  pop eax
    19 00000186 CD80                <4>  int 0x80
    19 00000188 5B                  <4>  pop ebx
    19 00000189 59                  <4>  pop ecx
    19 0000018A 5A                  <4>  pop edx
    19 0000018B 83C402              <2>  add esp, 2
    19 0000018E 9D                  <2>  popf
    19 0000018F 61                  <2>  popa
    19 00000190 89D7                <1>  mov edi,edx
    19 00000192 31D2                <1>  xor edx,edx
    19 00000194 89D8                <1>  mov eax,ebx
    19 00000196 F7F6                <1>  div esi
    19 00000198 83F801              <1>  cmp eax,1
    19 0000019B 7404                <1>  je %%m4
    19 0000019D 89C3                <1>  mov ebx,eax
    19 0000019F EBC5                <1>  jmp %%m3
    19                              <1>  %%m4:
    19 000001A1 89FA                <1>  mov edx,edi
    19 000001A3 80C230              <1>  add dl,'0'
    19                              <1>  PUTCHAR dl
    19 000001A6 60                  <2>  pusha
    19 000001A7 9C                  <2>  pushf
    19                              <2> %ifstr %1
    19                              <2>  mov al, %1
    19                              <2> %elifnum %1
    19                              <2>  mov al, %1
    19                              <2> %elifidni %1,al
    19                              <2>  nop
    19                              <2> %elifidni %1,ah
    19                              <2>  mov al, ah
    19                              <2> %elifidni %1,bl
    19                              <2>  mov al, bl
    19                              <2> %elifidni %1,bh
    19                              <2>  mov al, bh
    19                              <2> %elifidni %1,cl
    19                              <2>  mov al, cl
    19                              <2> %elifidni %1,ch
    19                              <2>  mov al, ch
    19                              <2> %elifidni %1,dl
    19 000001A8 88D0                <2>  mov al, dl
    19                              <2> %elifidni %1,dh
    19                              <2>  mov al, dh
    19                              <2> %else
    19                              <2>  mov al, %1
    19                              <2> %endif
    19 000001AA 83EC02              <2>  sub esp, 2
    19 000001AD 89E7                <2>  mov edi, esp
    19 000001AF 8807                <2>  mov [edi], al
    19                              <2>  _syscall_write 1, edi, 1
    19                              <3>  _syscall_3 4,%1,%2,%3
    19 000001B1 52                  <4>  push edx
    19 000001B2 51                  <4>  push ecx
    19 000001B3 53                  <4>  push ebx
    19 000001B4 6A04                <4>  push %1
    19 000001B6 6A01                <4>  push %2
    19 000001B8 57                  <4>  push %3
    19 000001B9 6A01                <4>  push %4
    19 000001BB 5A                  <4>  pop edx
    19 000001BC 59                  <4>  pop ecx
    19 000001BD 5B                  <4>  pop ebx
    19 000001BE 58                  <4>  pop eax
    19 000001BF CD80                <4>  int 0x80
    19 000001C1 5B                  <4>  pop ebx
    19 000001C2 59                  <4>  pop ecx
    19 000001C3 5A                  <4>  pop edx
    19 000001C4 83C402              <2>  add esp, 2
    19 000001C7 9D                  <2>  popf
    19 000001C8 61                  <2>  popa
    19                              <1> 
    19                              <1> 
    19 000001C9 9D                  <1> popf
    19 000001CA 61                  <1> popa
    20                                  	PUTCHAR 0xA
    20 000001CB 60                  <1>  pusha
    20 000001CC 9C                  <1>  pushf
    20                              <1> %ifstr %1
    20                              <1>  mov al, %1
    20                              <1> %elifnum %1
    20 000001CD B00A                <1>  mov al, %1
    20                              <1> %elifidni %1,al
    20                              <1>  nop
    20                              <1> %elifidni %1,ah
    20                              <1>  mov al, ah
    20                              <1> %elifidni %1,bl
    20                              <1>  mov al, bl
    20                              <1> %elifidni %1,bh
    20                              <1>  mov al, bh
    20                              <1> %elifidni %1,cl
    20                              <1>  mov al, cl
    20                              <1> %elifidni %1,ch
    20                              <1>  mov al, ch
    20                              <1> %elifidni %1,dl
    20                              <1>  mov al, dl
    20                              <1> %elifidni %1,dh
    20                              <1>  mov al, dh
    20                              <1> %else
    20                              <1>  mov al, %1
    20                              <1> %endif
    20 000001CF 83EC02              <1>  sub esp, 2
    20 000001D2 89E7                <1>  mov edi, esp
    20 000001D4 8807                <1>  mov [edi], al
    20                              <1>  _syscall_write 1, edi, 1
    20                              <2>  _syscall_3 4,%1,%2,%3
    20 000001D6 52                  <3>  push edx
    20 000001D7 51                  <3>  push ecx
    20 000001D8 53                  <3>  push ebx
    20 000001D9 6A04                <3>  push %1
    20 000001DB 6A01                <3>  push %2
    20 000001DD 57                  <3>  push %3
    20 000001DE 6A01                <3>  push %4
    20 000001E0 5A                  <3>  pop edx
    20 000001E1 59                  <3>  pop ecx
    20 000001E2 5B                  <3>  pop ebx
    20 000001E3 58                  <3>  pop eax
    20 000001E4 CD80                <3>  int 0x80
    20 000001E6 5B                  <3>  pop ebx
    20 000001E7 59                  <3>  pop ecx
    20 000001E8 5A                  <3>  pop edx
    20 000001E9 83C402              <1>  add esp, 2
    20 000001EC 9D                  <1>  popf
    20 000001ED 61                  <1>  popa
    21 000001EE A1[05000000]            	mov eax, [d]
    22                                  	SIGNINT eax
    22 000001F3 60                  <1> pusha
    22 000001F4 9C                  <1> pushf
    22 000001F5 50                  <1> push dword %1
    22 000001F6 58                  <1> pop eax
    22 000001F7 83F800              <1>  cmp eax,0
    22 000001FA 7D25                <1>  jge %%m5
    22                              <1>  PUTCHAR '-'
    22 000001FC 60                  <2>  pusha
    22 000001FD 9C                  <2>  pushf
    22                              <2> %ifstr %1
    22 000001FE B02D                <2>  mov al, %1
    22                              <2> %elifnum %1
    22                              <2>  mov al, %1
    22                              <2> %elifidni %1,al
    22                              <2>  nop
    22                              <2> %elifidni %1,ah
    22                              <2>  mov al, ah
    22                              <2> %elifidni %1,bl
    22                              <2>  mov al, bl
    22                              <2> %elifidni %1,bh
    22                              <2>  mov al, bh
    22                              <2> %elifidni %1,cl
    22                              <2>  mov al, cl
    22                              <2> %elifidni %1,ch
    22                              <2>  mov al, ch
    22                              <2> %elifidni %1,dl
    22                              <2>  mov al, dl
    22                              <2> %elifidni %1,dh
    22                              <2>  mov al, dh
    22                              <2> %else
    22                              <2>  mov al, %1
    22                              <2> %endif
    22 00000200 83EC02              <2>  sub esp, 2
    22 00000203 89E7                <2>  mov edi, esp
    22 00000205 8807                <2>  mov [edi], al
    22                              <2>  _syscall_write 1, edi, 1
    22                              <3>  _syscall_3 4,%1,%2,%3
    22 00000207 52                  <4>  push edx
    22 00000208 51                  <4>  push ecx
    22 00000209 53                  <4>  push ebx
    22 0000020A 6A04                <4>  push %1
    22 0000020C 6A01                <4>  push %2
    22 0000020E 57                  <4>  push %3
    22 0000020F 6A01                <4>  push %4
    22 00000211 5A                  <4>  pop edx
    22 00000212 59                  <4>  pop ecx
    22 00000213 5B                  <4>  pop ebx
    22 00000214 58                  <4>  pop eax
    22 00000215 CD80                <4>  int 0x80
    22 00000217 5B                  <4>  pop ebx
    22 00000218 59                  <4>  pop ecx
    22 00000219 5A                  <4>  pop edx
    22 0000021A 83C402              <2>  add esp, 2
    22 0000021D 9D                  <2>  popf
    22 0000021E 61                  <2>  popa
    22 0000021F F7D8                <1>  neg eax
    22                              <1> %%m5:
    22                              <1>  UNSINT eax
    22 00000221 60                  <2> pusha
    22 00000222 9C                  <2> pushf
    22 00000223 50                  <2> push dword %1
    22 00000224 58                  <2> pop eax
    22 00000225 89C7                <2> mov edi,eax
    22 00000227 BE0A000000          <2> mov esi,10
    22 0000022C 31DB                <2>  xor ebx,ebx
    22                              <2> %%m1:
    22 0000022E 31D2                <2>  xor edx,edx
    22 00000230 F7F6                <2>  div esi
    22 00000232 43                  <2>  inc ebx
    22 00000233 83F800              <2>  cmp eax,0
    22 00000236 75F6                <2>  jne %%m1
    22                              <2> 
    22 00000238 B801000000          <2>  mov eax,1
    22 0000023D 89D9                <2>  mov ecx,ebx
    22 0000023F 49                  <2>  dec ecx
    22                              <2> 
    22 00000240 83F900              <2>  cmp ecx,0
    22 00000243 7441                <2>  je %%m4
    22 00000245 F7E6                <2> %%m2: mul esi
    22 00000247 E2FC                <2>  loop %%m2
    22                              <2> 
    22 00000249 89C3                <2>  mov ebx,eax
    22                              <2> 
    22                              <2> %%m3:
    22 0000024B 89F8                <2>  mov eax,edi
    22 0000024D 31D2                <2>  xor edx,edx
    22 0000024F F7F3                <2>  div ebx
    22 00000251 0430                <2>  add al,'0'
    22                              <2>  PUTCHAR al
    22 00000253 60                  <3>  pusha
    22 00000254 9C                  <3>  pushf
    22                              <3> %ifstr %1
    22                              <3>  mov al, %1
    22                              <3> %elifnum %1
    22                              <3>  mov al, %1
    22                              <3> %elifidni %1,al
    22 00000255 90                  <3>  nop
    22                              <3> %elifidni %1,ah
    22                              <3>  mov al, ah
    22                              <3> %elifidni %1,bl
    22                              <3>  mov al, bl
    22                              <3> %elifidni %1,bh
    22                              <3>  mov al, bh
    22                              <3> %elifidni %1,cl
    22                              <3>  mov al, cl
    22                              <3> %elifidni %1,ch
    22                              <3>  mov al, ch
    22                              <3> %elifidni %1,dl
    22                              <3>  mov al, dl
    22                              <3> %elifidni %1,dh
    22                              <3>  mov al, dh
    22                              <3> %else
    22                              <3>  mov al, %1
    22                              <3> %endif
    22 00000256 83EC02              <3>  sub esp, 2
    22 00000259 89E7                <3>  mov edi, esp
    22 0000025B 8807                <3>  mov [edi], al
    22                              <3>  _syscall_write 1, edi, 1
    22                              <4>  _syscall_3 4,%1,%2,%3
    22 0000025D 52                  <5>  push edx
    22 0000025E 51                  <5>  push ecx
    22 0000025F 53                  <5>  push ebx
    22 00000260 6A04                <5>  push %1
    22 00000262 6A01                <5>  push %2
    22 00000264 57                  <5>  push %3
    22 00000265 6A01                <5>  push %4
    22 00000267 5A                  <5>  pop edx
    22 00000268 59                  <5>  pop ecx
    22 00000269 5B                  <5>  pop ebx
    22 0000026A 58                  <5>  pop eax
    22 0000026B CD80                <5>  int 0x80
    22 0000026D 5B                  <5>  pop ebx
    22 0000026E 59                  <5>  pop ecx
    22 0000026F 5A                  <5>  pop edx
    22 00000270 83C402              <3>  add esp, 2
    22 00000273 9D                  <3>  popf
    22 00000274 61                  <3>  popa
    22 00000275 89D7                <2>  mov edi,edx
    22 00000277 31D2                <2>  xor edx,edx
    22 00000279 89D8                <2>  mov eax,ebx
    22 0000027B F7F6                <2>  div esi
    22 0000027D 83F801              <2>  cmp eax,1
    22 00000280 7404                <2>  je %%m4
    22 00000282 89C3                <2>  mov ebx,eax
    22 00000284 EBC5                <2>  jmp %%m3
    22                              <2>  %%m4:
    22 00000286 89FA                <2>  mov edx,edi
    22 00000288 80C230              <2>  add dl,'0'
    22                              <2>  PUTCHAR dl
    22 0000028B 60                  <3>  pusha
    22 0000028C 9C                  <3>  pushf
    22                              <3> %ifstr %1
    22                              <3>  mov al, %1
    22                              <3> %elifnum %1
    22                              <3>  mov al, %1
    22                              <3> %elifidni %1,al
    22                              <3>  nop
    22                              <3> %elifidni %1,ah
    22                              <3>  mov al, ah
    22                              <3> %elifidni %1,bl
    22                              <3>  mov al, bl
    22                              <3> %elifidni %1,bh
    22                              <3>  mov al, bh
    22                              <3> %elifidni %1,cl
    22                              <3>  mov al, cl
    22                              <3> %elifidni %1,ch
    22                              <3>  mov al, ch
    22                              <3> %elifidni %1,dl
    22 0000028D 88D0                <3>  mov al, dl
    22                              <3> %elifidni %1,dh
    22                              <3>  mov al, dh
    22                              <3> %else
    22                              <3>  mov al, %1
    22                              <3> %endif
    22 0000028F 83EC02              <3>  sub esp, 2
    22 00000292 89E7                <3>  mov edi, esp
    22 00000294 8807                <3>  mov [edi], al
    22                              <3>  _syscall_write 1, edi, 1
    22                              <4>  _syscall_3 4,%1,%2,%3
    22 00000296 52                  <5>  push edx
    22 00000297 51                  <5>  push ecx
    22 00000298 53                  <5>  push ebx
    22 00000299 6A04                <5>  push %1
    22 0000029B 6A01                <5>  push %2
    22 0000029D 57                  <5>  push %3
    22 0000029E 6A01                <5>  push %4
    22 000002A0 5A                  <5>  pop edx
    22 000002A1 59                  <5>  pop ecx
    22 000002A2 5B                  <5>  pop ebx
    22 000002A3 58                  <5>  pop eax
    22 000002A4 CD80                <5>  int 0x80
    22 000002A6 5B                  <5>  pop ebx
    22 000002A7 59                  <5>  pop ecx
    22 000002A8 5A                  <5>  pop edx
    22 000002A9 83C402              <3>  add esp, 2
    22 000002AC 9D                  <3>  popf
    22 000002AD 61                  <3>  popa
    22                              <2> 
    22                              <2> 
    22 000002AE 9D                  <2> popf
    22 000002AF 61                  <2> popa
    22 000002B0 9D                  <1> popf
    22 000002B1 61                  <1> popa
    23                                  	PUTCHAR 0xA
    23 000002B2 60                  <1>  pusha
    23 000002B3 9C                  <1>  pushf
    23                              <1> %ifstr %1
    23                              <1>  mov al, %1
    23                              <1> %elifnum %1
    23 000002B4 B00A                <1>  mov al, %1
    23                              <1> %elifidni %1,al
    23                              <1>  nop
    23                              <1> %elifidni %1,ah
    23                              <1>  mov al, ah
    23                              <1> %elifidni %1,bl
    23                              <1>  mov al, bl
    23                              <1> %elifidni %1,bh
    23                              <1>  mov al, bh
    23                              <1> %elifidni %1,cl
    23                              <1>  mov al, cl
    23                              <1> %elifidni %1,ch
    23                              <1>  mov al, ch
    23                              <1> %elifidni %1,dl
    23                              <1>  mov al, dl
    23                              <1> %elifidni %1,dh
    23                              <1>  mov al, dh
    23                              <1> %else
    23                              <1>  mov al, %1
    23                              <1> %endif
    23 000002B6 83EC02              <1>  sub esp, 2
    23 000002B9 89E7                <1>  mov edi, esp
    23 000002BB 8807                <1>  mov [edi], al
    23                              <1>  _syscall_write 1, edi, 1
    23                              <2>  _syscall_3 4,%1,%2,%3
    23 000002BD 52                  <3>  push edx
    23 000002BE 51                  <3>  push ecx
    23 000002BF 53                  <3>  push ebx
    23 000002C0 6A04                <3>  push %1
    23 000002C2 6A01                <3>  push %2
    23 000002C4 57                  <3>  push %3
    23 000002C5 6A01                <3>  push %4
    23 000002C7 5A                  <3>  pop edx
    23 000002C8 59                  <3>  pop ecx
    23 000002C9 5B                  <3>  pop ebx
    23 000002CA 58                  <3>  pop eax
    23 000002CB CD80                <3>  int 0x80
    23 000002CD 5B                  <3>  pop ebx
    23 000002CE 59                  <3>  pop ecx
    23 000002CF 5A                  <3>  pop edx
    23 000002D0 83C402              <1>  add esp, 2
    23 000002D3 9D                  <1>  popf
    23 000002D4 61                  <1>  popa
    24                                  FINISH
    24                              <1>  _syscall_exit %1
    24 000002D5 BB00000000          <2>  mov ebx, %1
    24 000002DA B801000000          <2>  mov eax, 1
    24 000002DF CD80                <2>  int 0x80
    25                                  
