     1                                  %include "st_io.inc"
     1                              <1> ;; File stud_io.inc for Linux O.S.
     2                              <1> ;; Copyright (c) Andrey Vikt. Stolyarov, 2009.
     3                              <1> ;; I, the author, hereby grant everyone the right to use this
     4                              <1> ;; file for any purpose, in any manner, in it's original or
     5                              <1> ;; modified form, provided that any modified versions are
     6                              <1> ;; clearly marked as such.
     7                              <1> ;; file changed, macros added (by Divari I.N.,
     8                              <1> ;; Department of computer science, MIPT, 2019-2020)
     9                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    10                              <1> ;; system dependend part
    11                              <1> 
    12                              <1> ; generic 3-param syscall
    13                              <1> %macro _syscall_3 4
    14                              <1> 	push edx
    15                              <1> 	push ecx
    16                              <1> 	push ebx ; it is senseless to save eax as it holds the return
    17                              <1> 	push %1
    18                              <1> 	push %2
    19                              <1> 	push %3
    20                              <1> 	push %4
    21                              <1> 	pop edx
    22                              <1> 	pop ecx
    23                              <1> 	pop ebx
    24                              <1> 	pop eax 
    25                              <1> 	int 0x80
    26                              <1> 	pop ebx
    27                              <1> 	pop ecx
    28                              <1> 	pop edx
    29                              <1> %endmacro
    30                              <1> 
    31                              <1> ; syscall_exit is the only syscall we use that has 1 parameter
    32                              <1> %macro _syscall_exit 1
    33                              <1> 	mov ebx, %1	; exit code
    34                              <1> 	mov eax, 1	; 1 = sys_exit
    35                              <1> 	int 0x80
    36                              <1> %endmacro
    37                              <1> 
    38                              <1> ;; system dependent part ends here
    39                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    40                              <1> 
    41                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    42                              <1> ; output: eax: read bytes
    43                              <1> %macro _syscall_read 3
    44                              <1> 	_syscall_3 3,%1,%2,%3
    45                              <1> %endmacro
    46                              <1> 
    47                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    48                              <1> ; output: eax: written bytes
    49                              <1> %macro _syscall_write 3
    50                              <1> 	_syscall_3 4,%1,%2,%3
    51                              <1> %endmacro
    52                              <1> 
    53                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    54                              <1> %macro 	PRINT 1
    55                              <1> 	pusha
    56                              <1> 	pushf
    57                              <1> 	jmp %%astr
    58                              <1> %%str	db	%1, 0
    59                              <1> %%strln	equ	$-%%str
    60                              <1> %%astr:	_syscall_write 1, %%str, %%strln
    61                              <1> 	popf
    62                              <1> 	popa
    63                              <1> %endmacro
    64                              <1> 
    65                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    66                              <1> %macro	PUTCHAR 1
    67                              <1> 	pusha
    68                              <1> 	pushf
    69                              <1> %ifstr %1
    70                              <1> 	mov	al, %1
    71                              <1> %elifnum %1
    72                              <1> 	mov	al, %1
    73                              <1> %elifidni %1,al
    74                              <1> 	nop
    75                              <1> %elifidni %1,ah
    76                              <1> 	mov	al, ah
    77                              <1> %elifidni %1,bl
    78                              <1> 	mov	al, bl
    79                              <1> %elifidni %1,bh
    80                              <1> 	mov	al, bh
    81                              <1> %elifidni %1,cl
    82                              <1> 	mov	al, cl
    83                              <1> %elifidni %1,ch
    84                              <1> 	mov	al, ch
    85                              <1> %elifidni %1,dl
    86                              <1> 	mov	al, dl
    87                              <1> %elifidni %1,dh
    88                              <1> 	mov	al, dh
    89                              <1> %else
    90                              <1> 	mov	al, %1  ; let's hope it is a memory location such as [var]
    91                              <1> %endif
    92                              <1> 	sub	esp, 2  ; reserve memory for buffer
    93                              <1> 	mov	edi, esp
    94                              <1> 	mov	[edi], al
    95                              <1> 	_syscall_write 1, edi, 1
    96                              <1> 	add	esp, 2
    97                              <1> 	popf
    98                              <1> 	popa
    99                              <1> %endmacro
   100                              <1> 
   101                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   102                              <1> %macro	GETCHAR 0
   103                              <1> 	pushf
   104                              <1> 	push	edi
   105                              <1> 	sub	esp, 2
   106                              <1> 	mov	edi, esp
   107                              <1> 	_syscall_read 0, edi, 1
   108                              <1> 	cmp	eax, 1
   109                              <1> 	jne	%%eof_reached
   110                              <1> 	xor	eax,eax
   111                              <1> 	mov	al, [edi]
   112                              <1> 	jmp	%%gcquit
   113                              <1> %%eof_reached:
   114                              <1> 	xor	eax, eax
   115                              <1> 	not	eax 		; eax := -1
   116                              <1> %%gcquit:
   117                              <1> 	add	esp, 2
   118                              <1> 	pop	edi
   119                              <1> 	popf
   120                              <1> %endmacro
   121                              <1> 
   122                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   123                              <1> %macro FINISH 0-1 0
   124                              <1> 	_syscall_exit %1
   125                              <1> %endmacro
   126                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   127                              <1> %macro UNSINT 1
   128                              <1> pusha
   129                              <1> pushf
   130                              <1> push dword %1
   131                              <1> pop eax
   132                              <1> mov edi,eax
   133                              <1> mov esi,10
   134                              <1>   xor ebx,ebx
   135                              <1> %%m1:
   136                              <1>    xor edx,edx
   137                              <1>    div esi
   138                              <1>    inc ebx
   139                              <1>    cmp eax,0
   140                              <1>    jne %%m1
   141                              <1>     
   142                              <1>    mov eax,1
   143                              <1>    mov ecx,ebx
   144                              <1>    dec ecx
   145                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   146                              <1>     cmp ecx,0
   147                              <1>      je %%m4
   148                              <1> %%m2:  mul esi
   149                              <1>        loop %%m2
   150                              <1> 
   151                              <1>        mov ebx,eax
   152                              <1> 
   153                              <1> %%m3:       
   154                              <1>       mov eax,edi 
   155                              <1>       xor edx,edx 
   156                              <1>       div ebx
   157                              <1>       add al,'0'
   158                              <1>       PUTCHAR al
   159                              <1>       mov edi,edx
   160                              <1>       xor edx,edx
   161                              <1>       mov eax,ebx
   162                              <1>       div esi
   163                              <1>       cmp eax,1
   164                              <1>       je %%m4
   165                              <1>       mov ebx,eax
   166                              <1>       jmp %%m3
   167                              <1>  %%m4:      
   168                              <1>       mov edx,edi
   169                              <1>       add dl,'0'
   170                              <1>       PUTCHAR dl
   171                              <1>        
   172                              <1>   
   173                              <1> popf
   174                              <1> popa
   175                              <1> %endmacro
   176                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   177                              <1> %macro SIGNINT 1
   178                              <1> pusha
   179                              <1> pushf
   180                              <1> push dword %1
   181                              <1> pop eax
   182                              <1>     cmp eax,0
   183                              <1>     jge %%m5
   184                              <1>     PUTCHAR '-'
   185                              <1>     neg eax
   186                              <1> %%m5:
   187                              <1>       UNSINT eax
   188                              <1> popf
   189                              <1> popa
   190                              <1> %endmacro
     2                                  global _start
     3                                  section .data
     4 00000000 2D000000                a dd 45
     5 00000004 37000000                b dd 55
     6                                  section .bss
     7 00000000 <res 00000001>          d resb 1
     8                                  section .text
     9                                  
    10                                  sum:
    11 00000000 89E5                    mov ebp, esp
    12 00000002 8B5504                  mov edx, [ebp+4]
    13 00000005 035508                  add edx, [ebp+8]
    14                                  UNSINT edx
    14 00000008 60                  <1> pusha
    14 00000009 9C                  <1> pushf
    14 0000000A 52                  <1> push dword %1
    14 0000000B 58                  <1> pop eax
    14 0000000C 89C7                <1> mov edi,eax
    14 0000000E BE0A000000          <1> mov esi,10
    14 00000013 31DB                <1>  xor ebx,ebx
    14                              <1> %%m1:
    14 00000015 31D2                <1>  xor edx,edx
    14 00000017 F7F6                <1>  div esi
    14 00000019 43                  <1>  inc ebx
    14 0000001A 83F800              <1>  cmp eax,0
    14 0000001D 75F6                <1>  jne %%m1
    14                              <1> 
    14 0000001F B801000000          <1>  mov eax,1
    14 00000024 89D9                <1>  mov ecx,ebx
    14 00000026 49                  <1>  dec ecx
    14                              <1> 
    14 00000027 83F900              <1>  cmp ecx,0
    14 0000002A 7441                <1>  je %%m4
    14 0000002C F7E6                <1> %%m2: mul esi
    14 0000002E E2FC                <1>  loop %%m2
    14                              <1> 
    14 00000030 89C3                <1>  mov ebx,eax
    14                              <1> 
    14                              <1> %%m3:
    14 00000032 89F8                <1>  mov eax,edi
    14 00000034 31D2                <1>  xor edx,edx
    14 00000036 F7F3                <1>  div ebx
    14 00000038 0430                <1>  add al,'0'
    14                              <1>  PUTCHAR al
    14 0000003A 60                  <2>  pusha
    14 0000003B 9C                  <2>  pushf
    14                              <2> %ifstr %1
    14                              <2>  mov al, %1
    14                              <2> %elifnum %1
    14                              <2>  mov al, %1
    14                              <2> %elifidni %1,al
    14 0000003C 90                  <2>  nop
    14                              <2> %elifidni %1,ah
    14                              <2>  mov al, ah
    14                              <2> %elifidni %1,bl
    14                              <2>  mov al, bl
    14                              <2> %elifidni %1,bh
    14                              <2>  mov al, bh
    14                              <2> %elifidni %1,cl
    14                              <2>  mov al, cl
    14                              <2> %elifidni %1,ch
    14                              <2>  mov al, ch
    14                              <2> %elifidni %1,dl
    14                              <2>  mov al, dl
    14                              <2> %elifidni %1,dh
    14                              <2>  mov al, dh
    14                              <2> %else
    14                              <2>  mov al, %1
    14                              <2> %endif
    14 0000003D 83EC02              <2>  sub esp, 2
    14 00000040 89E7                <2>  mov edi, esp
    14 00000042 8807                <2>  mov [edi], al
    14                              <2>  _syscall_write 1, edi, 1
    14                              <3>  _syscall_3 4,%1,%2,%3
    14 00000044 52                  <4>  push edx
    14 00000045 51                  <4>  push ecx
    14 00000046 53                  <4>  push ebx
    14 00000047 6A04                <4>  push %1
    14 00000049 6A01                <4>  push %2
    14 0000004B 57                  <4>  push %3
    14 0000004C 6A01                <4>  push %4
    14 0000004E 5A                  <4>  pop edx
    14 0000004F 59                  <4>  pop ecx
    14 00000050 5B                  <4>  pop ebx
    14 00000051 58                  <4>  pop eax
    14 00000052 CD80                <4>  int 0x80
    14 00000054 5B                  <4>  pop ebx
    14 00000055 59                  <4>  pop ecx
    14 00000056 5A                  <4>  pop edx
    14 00000057 83C402              <2>  add esp, 2
    14 0000005A 9D                  <2>  popf
    14 0000005B 61                  <2>  popa
    14 0000005C 89D7                <1>  mov edi,edx
    14 0000005E 31D2                <1>  xor edx,edx
    14 00000060 89D8                <1>  mov eax,ebx
    14 00000062 F7F6                <1>  div esi
    14 00000064 83F801              <1>  cmp eax,1
    14 00000067 7404                <1>  je %%m4
    14 00000069 89C3                <1>  mov ebx,eax
    14 0000006B EBC5                <1>  jmp %%m3
    14                              <1>  %%m4:
    14 0000006D 89FA                <1>  mov edx,edi
    14 0000006F 80C230              <1>  add dl,'0'
    14                              <1>  PUTCHAR dl
    14 00000072 60                  <2>  pusha
    14 00000073 9C                  <2>  pushf
    14                              <2> %ifstr %1
    14                              <2>  mov al, %1
    14                              <2> %elifnum %1
    14                              <2>  mov al, %1
    14                              <2> %elifidni %1,al
    14                              <2>  nop
    14                              <2> %elifidni %1,ah
    14                              <2>  mov al, ah
    14                              <2> %elifidni %1,bl
    14                              <2>  mov al, bl
    14                              <2> %elifidni %1,bh
    14                              <2>  mov al, bh
    14                              <2> %elifidni %1,cl
    14                              <2>  mov al, cl
    14                              <2> %elifidni %1,ch
    14                              <2>  mov al, ch
    14                              <2> %elifidni %1,dl
    14 00000074 88D0                <2>  mov al, dl
    14                              <2> %elifidni %1,dh
    14                              <2>  mov al, dh
    14                              <2> %else
    14                              <2>  mov al, %1
    14                              <2> %endif
    14 00000076 83EC02              <2>  sub esp, 2
    14 00000079 89E7                <2>  mov edi, esp
    14 0000007B 8807                <2>  mov [edi], al
    14                              <2>  _syscall_write 1, edi, 1
    14                              <3>  _syscall_3 4,%1,%2,%3
    14 0000007D 52                  <4>  push edx
    14 0000007E 51                  <4>  push ecx
    14 0000007F 53                  <4>  push ebx
    14 00000080 6A04                <4>  push %1
    14 00000082 6A01                <4>  push %2
    14 00000084 57                  <4>  push %3
    14 00000085 6A01                <4>  push %4
    14 00000087 5A                  <4>  pop edx
    14 00000088 59                  <4>  pop ecx
    14 00000089 5B                  <4>  pop ebx
    14 0000008A 58                  <4>  pop eax
    14 0000008B CD80                <4>  int 0x80
    14 0000008D 5B                  <4>  pop ebx
    14 0000008E 59                  <4>  pop ecx
    14 0000008F 5A                  <4>  pop edx
    14 00000090 83C402              <2>  add esp, 2
    14 00000093 9D                  <2>  popf
    14 00000094 61                  <2>  popa
    14                              <1> 
    14                              <1> 
    14 00000095 9D                  <1> popf
    14 00000096 61                  <1> popa
    15                                  PUTCHAR 0xA
    15 00000097 60                  <1>  pusha
    15 00000098 9C                  <1>  pushf
    15                              <1> %ifstr %1
    15                              <1>  mov al, %1
    15                              <1> %elifnum %1
    15 00000099 B00A                <1>  mov al, %1
    15                              <1> %elifidni %1,al
    15                              <1>  nop
    15                              <1> %elifidni %1,ah
    15                              <1>  mov al, ah
    15                              <1> %elifidni %1,bl
    15                              <1>  mov al, bl
    15                              <1> %elifidni %1,bh
    15                              <1>  mov al, bh
    15                              <1> %elifidni %1,cl
    15                              <1>  mov al, cl
    15                              <1> %elifidni %1,ch
    15                              <1>  mov al, ch
    15                              <1> %elifidni %1,dl
    15                              <1>  mov al, dl
    15                              <1> %elifidni %1,dh
    15                              <1>  mov al, dh
    15                              <1> %else
    15                              <1>  mov al, %1
    15                              <1> %endif
    15 0000009B 83EC02              <1>  sub esp, 2
    15 0000009E 89E7                <1>  mov edi, esp
    15 000000A0 8807                <1>  mov [edi], al
    15                              <1>  _syscall_write 1, edi, 1
    15                              <2>  _syscall_3 4,%1,%2,%3
    15 000000A2 52                  <3>  push edx
    15 000000A3 51                  <3>  push ecx
    15 000000A4 53                  <3>  push ebx
    15 000000A5 6A04                <3>  push %1
    15 000000A7 6A01                <3>  push %2
    15 000000A9 57                  <3>  push %3
    15 000000AA 6A01                <3>  push %4
    15 000000AC 5A                  <3>  pop edx
    15 000000AD 59                  <3>  pop ecx
    15 000000AE 5B                  <3>  pop ebx
    15 000000AF 58                  <3>  pop eax
    15 000000B0 CD80                <3>  int 0x80
    15 000000B2 5B                  <3>  pop ebx
    15 000000B3 59                  <3>  pop ecx
    15 000000B4 5A                  <3>  pop edx
    15 000000B5 83C402              <1>  add esp, 2
    15 000000B8 9D                  <1>  popf
    15 000000B9 61                  <1>  popa
    16 000000BA C3                      ret
    17                                  
    18                                  razn:
    19 000000BB 89E5                    mov ebp, esp
    20 000000BD 8B5504                  mov edx, [ebp+4]
    21 000000C0 2B5508                  sub edx, [ebp+8]
    22                                  UNSINT edx
    22 000000C3 60                  <1> pusha
    22 000000C4 9C                  <1> pushf
    22 000000C5 52                  <1> push dword %1
    22 000000C6 58                  <1> pop eax
    22 000000C7 89C7                <1> mov edi,eax
    22 000000C9 BE0A000000          <1> mov esi,10
    22 000000CE 31DB                <1>  xor ebx,ebx
    22                              <1> %%m1:
    22 000000D0 31D2                <1>  xor edx,edx
    22 000000D2 F7F6                <1>  div esi
    22 000000D4 43                  <1>  inc ebx
    22 000000D5 83F800              <1>  cmp eax,0
    22 000000D8 75F6                <1>  jne %%m1
    22                              <1> 
    22 000000DA B801000000          <1>  mov eax,1
    22 000000DF 89D9                <1>  mov ecx,ebx
    22 000000E1 49                  <1>  dec ecx
    22                              <1> 
    22 000000E2 83F900              <1>  cmp ecx,0
    22 000000E5 7441                <1>  je %%m4
    22 000000E7 F7E6                <1> %%m2: mul esi
    22 000000E9 E2FC                <1>  loop %%m2
    22                              <1> 
    22 000000EB 89C3                <1>  mov ebx,eax
    22                              <1> 
    22                              <1> %%m3:
    22 000000ED 89F8                <1>  mov eax,edi
    22 000000EF 31D2                <1>  xor edx,edx
    22 000000F1 F7F3                <1>  div ebx
    22 000000F3 0430                <1>  add al,'0'
    22                              <1>  PUTCHAR al
    22 000000F5 60                  <2>  pusha
    22 000000F6 9C                  <2>  pushf
    22                              <2> %ifstr %1
    22                              <2>  mov al, %1
    22                              <2> %elifnum %1
    22                              <2>  mov al, %1
    22                              <2> %elifidni %1,al
    22 000000F7 90                  <2>  nop
    22                              <2> %elifidni %1,ah
    22                              <2>  mov al, ah
    22                              <2> %elifidni %1,bl
    22                              <2>  mov al, bl
    22                              <2> %elifidni %1,bh
    22                              <2>  mov al, bh
    22                              <2> %elifidni %1,cl
    22                              <2>  mov al, cl
    22                              <2> %elifidni %1,ch
    22                              <2>  mov al, ch
    22                              <2> %elifidni %1,dl
    22                              <2>  mov al, dl
    22                              <2> %elifidni %1,dh
    22                              <2>  mov al, dh
    22                              <2> %else
    22                              <2>  mov al, %1
    22                              <2> %endif
    22 000000F8 83EC02              <2>  sub esp, 2
    22 000000FB 89E7                <2>  mov edi, esp
    22 000000FD 8807                <2>  mov [edi], al
    22                              <2>  _syscall_write 1, edi, 1
    22                              <3>  _syscall_3 4,%1,%2,%3
    22 000000FF 52                  <4>  push edx
    22 00000100 51                  <4>  push ecx
    22 00000101 53                  <4>  push ebx
    22 00000102 6A04                <4>  push %1
    22 00000104 6A01                <4>  push %2
    22 00000106 57                  <4>  push %3
    22 00000107 6A01                <4>  push %4
    22 00000109 5A                  <4>  pop edx
    22 0000010A 59                  <4>  pop ecx
    22 0000010B 5B                  <4>  pop ebx
    22 0000010C 58                  <4>  pop eax
    22 0000010D CD80                <4>  int 0x80
    22 0000010F 5B                  <4>  pop ebx
    22 00000110 59                  <4>  pop ecx
    22 00000111 5A                  <4>  pop edx
    22 00000112 83C402              <2>  add esp, 2
    22 00000115 9D                  <2>  popf
    22 00000116 61                  <2>  popa
    22 00000117 89D7                <1>  mov edi,edx
    22 00000119 31D2                <1>  xor edx,edx
    22 0000011B 89D8                <1>  mov eax,ebx
    22 0000011D F7F6                <1>  div esi
    22 0000011F 83F801              <1>  cmp eax,1
    22 00000122 7404                <1>  je %%m4
    22 00000124 89C3                <1>  mov ebx,eax
    22 00000126 EBC5                <1>  jmp %%m3
    22                              <1>  %%m4:
    22 00000128 89FA                <1>  mov edx,edi
    22 0000012A 80C230              <1>  add dl,'0'
    22                              <1>  PUTCHAR dl
    22 0000012D 60                  <2>  pusha
    22 0000012E 9C                  <2>  pushf
    22                              <2> %ifstr %1
    22                              <2>  mov al, %1
    22                              <2> %elifnum %1
    22                              <2>  mov al, %1
    22                              <2> %elifidni %1,al
    22                              <2>  nop
    22                              <2> %elifidni %1,ah
    22                              <2>  mov al, ah
    22                              <2> %elifidni %1,bl
    22                              <2>  mov al, bl
    22                              <2> %elifidni %1,bh
    22                              <2>  mov al, bh
    22                              <2> %elifidni %1,cl
    22                              <2>  mov al, cl
    22                              <2> %elifidni %1,ch
    22                              <2>  mov al, ch
    22                              <2> %elifidni %1,dl
    22 0000012F 88D0                <2>  mov al, dl
    22                              <2> %elifidni %1,dh
    22                              <2>  mov al, dh
    22                              <2> %else
    22                              <2>  mov al, %1
    22                              <2> %endif
    22 00000131 83EC02              <2>  sub esp, 2
    22 00000134 89E7                <2>  mov edi, esp
    22 00000136 8807                <2>  mov [edi], al
    22                              <2>  _syscall_write 1, edi, 1
    22                              <3>  _syscall_3 4,%1,%2,%3
    22 00000138 52                  <4>  push edx
    22 00000139 51                  <4>  push ecx
    22 0000013A 53                  <4>  push ebx
    22 0000013B 6A04                <4>  push %1
    22 0000013D 6A01                <4>  push %2
    22 0000013F 57                  <4>  push %3
    22 00000140 6A01                <4>  push %4
    22 00000142 5A                  <4>  pop edx
    22 00000143 59                  <4>  pop ecx
    22 00000144 5B                  <4>  pop ebx
    22 00000145 58                  <4>  pop eax
    22 00000146 CD80                <4>  int 0x80
    22 00000148 5B                  <4>  pop ebx
    22 00000149 59                  <4>  pop ecx
    22 0000014A 5A                  <4>  pop edx
    22 0000014B 83C402              <2>  add esp, 2
    22 0000014E 9D                  <2>  popf
    22 0000014F 61                  <2>  popa
    22                              <1> 
    22                              <1> 
    22 00000150 9D                  <1> popf
    22 00000151 61                  <1> popa
    23                                  PUTCHAR 0xA
    23 00000152 60                  <1>  pusha
    23 00000153 9C                  <1>  pushf
    23                              <1> %ifstr %1
    23                              <1>  mov al, %1
    23                              <1> %elifnum %1
    23 00000154 B00A                <1>  mov al, %1
    23                              <1> %elifidni %1,al
    23                              <1>  nop
    23                              <1> %elifidni %1,ah
    23                              <1>  mov al, ah
    23                              <1> %elifidni %1,bl
    23                              <1>  mov al, bl
    23                              <1> %elifidni %1,bh
    23                              <1>  mov al, bh
    23                              <1> %elifidni %1,cl
    23                              <1>  mov al, cl
    23                              <1> %elifidni %1,ch
    23                              <1>  mov al, ch
    23                              <1> %elifidni %1,dl
    23                              <1>  mov al, dl
    23                              <1> %elifidni %1,dh
    23                              <1>  mov al, dh
    23                              <1> %else
    23                              <1>  mov al, %1
    23                              <1> %endif
    23 00000156 83EC02              <1>  sub esp, 2
    23 00000159 89E7                <1>  mov edi, esp
    23 0000015B 8807                <1>  mov [edi], al
    23                              <1>  _syscall_write 1, edi, 1
    23                              <2>  _syscall_3 4,%1,%2,%3
    23 0000015D 52                  <3>  push edx
    23 0000015E 51                  <3>  push ecx
    23 0000015F 53                  <3>  push ebx
    23 00000160 6A04                <3>  push %1
    23 00000162 6A01                <3>  push %2
    23 00000164 57                  <3>  push %3
    23 00000165 6A01                <3>  push %4
    23 00000167 5A                  <3>  pop edx
    23 00000168 59                  <3>  pop ecx
    23 00000169 5B                  <3>  pop ebx
    23 0000016A 58                  <3>  pop eax
    23 0000016B CD80                <3>  int 0x80
    23 0000016D 5B                  <3>  pop ebx
    23 0000016E 59                  <3>  pop ecx
    23 0000016F 5A                  <3>  pop edx
    23 00000170 83C402              <1>  add esp, 2
    23 00000173 9D                  <1>  popf
    23 00000174 61                  <1>  popa
    24 00000175 C3                      ret
    25                                  
    26                                  _start:
    27 00000176 A1[00000000]            mov eax, [a]
    28 0000017B 8B1D[04000000]          mov ebx, [b]
    29 00000181 50                      push eax
    30 00000182 53                      push ebx
    31 00000183 E878FEFFFF              call sum
    32 00000188 E82EFFFFFF              call razn
    33                                  FINISH
    33                              <1>  _syscall_exit %1
    33 0000018D BB00000000          <2>  mov ebx, %1
    33 00000192 B801000000          <2>  mov eax, 1
    33 00000197 CD80                <2>  int 0x80
    34                                  
