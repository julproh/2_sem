     1                                  %include "st_io.inc"
     1                              <1> ;; File stud_io.inc for Linux O.S.
     2                              <1> ;; Copyright (c) Andrey Vikt. Stolyarov, 2009.
     3                              <1> ;; I, the author, hereby grant everyone the right to use this
     4                              <1> ;; file for any purpose, in any manner, in it's original or
     5                              <1> ;; modified form, provided that any modified versions are
     6                              <1> ;; clearly marked as such.
     7                              <1> ;; file changed, macros added (by Divari I.N.,
     8                              <1> ;; Department of computer science, MIPT, 2019-2020) 
     9                              <1> 
    10                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    11                              <1> ;; system dependend part
    12                              <1> 
    13                              <1> ; generic 3-param syscall
    14                              <1> %macro _syscall_3 4
    15                              <1> 	push edx
    16                              <1> 	push ecx
    17                              <1> 	push ebx ; it is senseless to save eax as it holds the return
    18                              <1> 	push %1
    19                              <1> 	push %2
    20                              <1> 	push %3
    21                              <1> 	push %4
    22                              <1> 	pop edx
    23                              <1> 	pop ecx
    24                              <1> 	pop ebx
    25                              <1> 	pop eax 
    26                              <1> 	int 0x80
    27                              <1> 	pop ebx
    28                              <1> 	pop ecx
    29                              <1> 	pop edx
    30                              <1> %endmacro
    31                              <1> 
    32                              <1> ; syscall_exit is the only syscall we use that has 1 parameter
    33                              <1> %macro _syscall_exit 1
    34                              <1> 	mov ebx, %1	; exit code
    35                              <1> 	mov eax, 1	; 1 = sys_exit
    36                              <1> 	int 0x80
    37                              <1> %endmacro
    38                              <1> 
    39                              <1> ;; system dependent part ends here
    40                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    41                              <1> 
    42                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    43                              <1> ; output: eax: read bytes
    44                              <1> %macro _syscall_read 3
    45                              <1> 	_syscall_3 3,%1,%2,%3
    46                              <1> %endmacro
    47                              <1> 
    48                              <1> ; %1: descriptor   %2: buffer addr   %3: buffer length 
    49                              <1> ; output: eax: written bytes
    50                              <1> %macro _syscall_write 3
    51                              <1> 	_syscall_3 4,%1,%2,%3
    52                              <1> %endmacro
    53                              <1> 
    54                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    55                              <1> %macro 	PRINT 1
    56                              <1> 	pusha
    57                              <1> 	pushf
    58                              <1> 	jmp %%astr
    59                              <1> %%str	db	%1, 0
    60                              <1> %%strln	equ	$-%%str
    61                              <1> %%astr:	_syscall_write 1, %%str, %%strln
    62                              <1> 	popf
    63                              <1> 	popa
    64                              <1> %endmacro
    65                              <1> 
    66                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    67                              <1> %macro	PUTCHAR 1
    68                              <1> 	pusha
    69                              <1> 	pushf
    70                              <1> %ifstr %1
    71                              <1> 	mov	al, %1
    72                              <1> %elifnum %1
    73                              <1> 	mov	al, %1
    74                              <1> %elifidni %1,al
    75                              <1> 	nop
    76                              <1> %elifidni %1,ah
    77                              <1> 	mov	al, ah
    78                              <1> %elifidni %1,bl
    79                              <1> 	mov	al, bl
    80                              <1> %elifidni %1,bh
    81                              <1> 	mov	al, bh
    82                              <1> %elifidni %1,cl
    83                              <1> 	mov	al, cl
    84                              <1> %elifidni %1,ch
    85                              <1> 	mov	al, ch
    86                              <1> %elifidni %1,dl
    87                              <1> 	mov	al, dl
    88                              <1> %elifidni %1,dh
    89                              <1> 	mov	al, dh
    90                              <1> %else
    91                              <1> 	mov	al, %1  ; let's hope it is a memory location such as [var]
    92                              <1> %endif
    93                              <1> 	sub	esp, 2  ; reserve memory for buffer
    94                              <1> 	mov	edi, esp
    95                              <1> 	mov	[edi], al
    96                              <1> 	_syscall_write 1, edi, 1
    97                              <1> 	add	esp, 2
    98                              <1> 	popf
    99                              <1> 	popa
   100                              <1> %endmacro
   101                              <1> 
   102                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   103                              <1> %macro	GETCHAR 0
   104                              <1> 	pushf
   105                              <1> 	push	edi
   106                              <1> 	sub	esp, 2
   107                              <1> 	mov	edi, esp
   108                              <1> 	_syscall_read 0, edi, 1
   109                              <1> 	cmp	eax, 1
   110                              <1> 	jne	%%eof_reached
   111                              <1> 	xor	eax,eax
   112                              <1> 	mov	al, [edi]
   113                              <1> 	jmp	%%gcquit
   114                              <1> %%eof_reached:
   115                              <1> 	xor	eax, eax
   116                              <1> 	not	eax 		; eax := -1
   117                              <1> %%gcquit:
   118                              <1> 	add	esp, 2
   119                              <1> 	pop	edi
   120                              <1> 	popf
   121                              <1> %endmacro
   122                              <1> 
   123                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   124                              <1> %macro FINISH 0-1 0
   125                              <1> 	_syscall_exit %1
   126                              <1> %endmacro
   127                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   128                              <1> %macro UNSINT 1
   129                              <1> pusha
   130                              <1> pushf
   131                              <1> push dword %1
   132                              <1> pop eax
   133                              <1> mov edi,eax
   134                              <1> mov esi,10
   135                              <1>   xor ebx,ebx
   136                              <1> %%m1:
   137                              <1>    xor edx,edx
   138                              <1>    div esi
   139                              <1>    inc ebx
   140                              <1>    cmp eax,0
   141                              <1>    jne %%m1
   142                              <1>     
   143                              <1>    mov eax,1
   144                              <1>    mov ecx,ebx
   145                              <1>    dec ecx
   146                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   147                              <1>     cmp ecx,0
   148                              <1>      je %%m4
   149                              <1> %%m2:  mul esi
   150                              <1>        loop %%m2
   151                              <1> 
   152                              <1>        mov ebx,eax
   153                              <1> 
   154                              <1> %%m3:       
   155                              <1>       mov eax,edi 
   156                              <1>       xor edx,edx 
   157                              <1>       div ebx
   158                              <1>       add al,'0'
   159                              <1>       PUTCHAR al
   160                              <1>       mov edi,edx
   161                              <1>       xor edx,edx
   162                              <1>       mov eax,ebx
   163                              <1>       div esi
   164                              <1>       cmp eax,1
   165                              <1>       je %%m4
   166                              <1>       mov ebx,eax
   167                              <1>       jmp %%m3
   168                              <1>  %%m4:      
   169                              <1>       mov edx,edi
   170                              <1>       add dl,'0'
   171                              <1>       PUTCHAR dl
   172                              <1>        
   173                              <1>   
   174                              <1> popf
   175                              <1> popa
   176                              <1> %endmacro
   177                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   178                              <1> %macro SIGNINT 1
   179                              <1> pusha
   180                              <1> pushf
   181                              <1> push dword %1
   182                              <1> pop eax
   183                              <1>     cmp eax,0
   184                              <1>     jge %%m5
   185                              <1>     PUTCHAR '-'
   186                              <1>     neg eax
   187                              <1> %%m5:
   188                              <1>       UNSINT eax
   189                              <1> popf
   190                              <1> popa
   191                              <1> %endmacro
   192                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   193                              <1> %macro GETUN 1
   194                              <1> pushad
   195                              <1> pushfd
   196                              <1> ;;;;;;;;;;;;;;;;;;;;;;
   197                              <1> xor edi,edi
   198                              <1> xor esi,esi
   199                              <1> %%m1:
   200                              <1> GETCHAR
   201                              <1> cmp al,0xA
   202                              <1> je %%m2
   203                              <1> cmp al,'0'
   204                              <1> jb %%m_err
   205                              <1> cmp al,'9'
   206                              <1> ja %%m_err
   207                              <1> inc edi
   208                              <1> xor ecx,ecx
   209                              <1> mov cl,al
   210                              <1> mov eax,esi
   211                              <1> mov ebx,10
   212                              <1> mul ebx
   213                              <1> sub cl,48
   214                              <1> add eax,ecx
   215                              <1> jc %%m3
   216                              <1> mov esi,eax
   217                              <1> jmp %%m1
   218                              <1> %%m2: 
   219                              <1> cmp edi,0
   220                              <1> je %%m1
   221                              <1> jmp %%m4
   222                              <1> %%m3: PRINT "too big number"
   223                              <1> PUTCHAR 10
   224                              <1> jmp %%m4
   225                              <1> %%m_err: PRINT "ERROR!!!"
   226                              <1> PUTCHAR 0xa
   227                              <1> %%m4:
   228                              <1> ;;;;;;;;;;;;;;;;;;
   229                              <1> push esi
   230                              <1> add esp,4
   231                              <1> popfd
   232                              <1> popad
   233                              <1> sub esp,40
   234                              <1> pop dword %1
   235                              <1> add esp,36
   236                              <1> %endmacro
   237                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   238                              <1> %macro GETSIG 1
   239                              <1> pushad
   240                              <1> pushfd
   241                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   242                              <1> xor edi,edi
   243                              <1> xor esi,esi
   244                              <1> mov ebx,10
   245                              <1> %%m_st1: GETCHAR
   246                              <1> cmp al,0xa
   247                              <1> je %%m_st1
   248                              <1> cmp al,'-'
   249                              <1> jne %%s1
   250                              <1> mov ebx,-10
   251                              <1> push ebx
   252                              <1> GETCHAR
   253                              <1> cmp al,0xa
   254                              <1> je %%m_err
   255                              <1> jmp %%m_st21
   256                              <1> %%s1: push ebx 
   257                              <1> cmp al,'+'
   258                              <1> jne %%m_st21
   259                              <1> GETCHAR 
   260                              <1> cmp al,0xa
   261                              <1> je %%m_err
   262                              <1> jmp %%m_st21
   263                              <1> %%m_st2: GETCHAR
   264                              <1> %%m_st21:  cmp al,0xa
   265                              <1> je %%pr_end
   266                              <1> cmp al,'0'
   267                              <1> jb %%m_err
   268                              <1> cmp al,'9'
   269                              <1> ja %%m_err
   270                              <1> inc edi
   271                              <1> xor ecx,ecx
   272                              <1> mov cl,al
   273                              <1> mov eax,esi
   274                              <1> imul ebx
   275                              <1> sub cl,48
   276                              <1> cmp dword[esp],-10
   277                              <1> je %%j_s
   278                              <1> add eax,ecx
   279                              <1> jmp %%j_per
   280                              <1> %%j_s: sub eax,ecx
   281                              <1> %%j_per: jo %%m_b
   282                              <1> mov esi,eax
   283                              <1> cmp dword[esp],-10
   284                              <1> jne %%m_st2
   285                              <1> neg esi
   286                              <1> jmp %%m_st2
   287                              <1> %%pr_end:  cmp edi,0
   288                              <1> je %%m_st2
   289                              <1> jmp %%m_k
   290                              <1> ;;;;;;;;;
   291                              <1> %%m_err: pop ebx 
   292                              <1> PRINT "ERROR"
   293                              <1> PUTCHAR 0xa
   294                              <1> jmp %%m_end
   295                              <1> %%m_b: pop ebx 
   296                              <1> cmp ebx,-10
   297                              <1> je  %%m_l
   298                              <1> PRINT "too big"
   299                              <1> PUTCHAR 0xa
   300                              <1> jmp %%m_end
   301                              <1> %%m_l: PRINT "too less"
   302                              <1> PUTCHAR 0xa
   303                              <1> jmp %%m_end
   304                              <1> %%m_k: pop ebx
   305                              <1> cmp ebx,-10
   306                              <1> jne %%m_p
   307                              <1> neg esi 
   308                              <1> %%m_p: 
   309                              <1> 
   310                              <1> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   311                              <1> 
   312                              <1> push esi
   313                              <1> add esp,4
   314                              <1> popfd
   315                              <1> popad
   316                              <1> sub esp,40
   317                              <1> pop dword %1
   318                              <1> add esp,36
   319                              <1> jmp %%mm_e
   320                              <1> %%m_end:
   321                              <1> popfd
   322                              <1> popad
   323                              <1> %%mm_e:
   324                              <1> %endmacro
   325                              <1> 
   326                              <1> 
   327                              <1> 
   328                              <1> 
     2                                  global _start
     3                                  
     4                                  section .bss
     5 00000000 <res 00000004>          bc resd 1
     6                                  section .data
     7 00000000 0400000001000000FA-     masiv dd 4,1,-6,5,-9,3
     7 00000009 FFFFFF05000000F7FF-
     7 00000012 FFFF03000000       
     8 00000018 06000000                n dd 6
     9                                  
    10                                  section .text
    11                                  _start:
    12 00000000 83EC04                  sub esp, 4
    13                                  push m
    13          ******************       error: symbol `m' undefined
    14 00000003 FF35[18000000]          push dword[n]
    15                                  
    16 00000009 E8AA020000              call minimum
    17 0000000E 5B                      pop ebx
    18                                  PRINT "минимум:"
    18 0000000F 60                  <1>  pusha
    18 00000010 9C                  <1>  pushf
    18 00000011 EB12                <1>  jmp %%astr
    18 00000013 D0BCD0B8D0BDD0B8D0- <1> %%str db %1, 0
    18 0000001C BCD183D0BC3A00      <1>
    18                              <1> %%strln equ $-%%str
    18                              <1> %%astr: _syscall_write 1, %%str, %%strln
    18                              <2> ..@4.astr: 
    18                              <2>  _syscall_3 4,%1,%2,%3
    18 00000023 52                  <3>  push edx
    18 00000024 51                  <3>  push ecx
    18 00000025 53                  <3>  push ebx
    18 00000026 6A04                <3>  push %1
    18 00000028 6A01                <3>  push %2
    18 0000002A 68[13000000]        <3>  push %3
    18 0000002F 6A10                <3>  push %4
    18 00000031 5A                  <3>  pop edx
    18 00000032 59                  <3>  pop ecx
    18 00000033 5B                  <3>  pop ebx
    18 00000034 58                  <3>  pop eax
    18 00000035 CD80                <3>  int 0x80
    18 00000037 5B                  <3>  pop ebx
    18 00000038 59                  <3>  pop ecx
    18 00000039 5A                  <3>  pop edx
    18 0000003A 9D                  <1>  popf
    18 0000003B 61                  <1>  popa
    19                                  SIGNINT ebx
    19 0000003C 60                  <1> pusha
    19 0000003D 9C                  <1> pushf
    19 0000003E 53                  <1> push dword %1
    19 0000003F 58                  <1> pop eax
    19 00000040 83F800              <1>  cmp eax,0
    19 00000043 7D27                <1>  jge %%m5
    19                              <1>  PUTCHAR '-'
    19 00000045 60                  <2>  pusha
    19 00000046 9C                  <2>  pushf
    19                              <2> %ifstr %1
    19 00000047 B02D                <2>  mov al, %1
    19                              <2> %elifnum %1
    19                              <2>  mov al, %1
    19                              <2> %elifidni %1,al
    19                              <2>  nop
    19                              <2> %elifidni %1,ah
    19                              <2>  mov al, ah
    19                              <2> %elifidni %1,bl
    19                              <2>  mov al, bl
    19                              <2> %elifidni %1,bh
    19                              <2>  mov al, bh
    19                              <2> %elifidni %1,cl
    19                              <2>  mov al, cl
    19                              <2> %elifidni %1,ch
    19                              <2>  mov al, ch
    19                              <2> %elifidni %1,dl
    19                              <2>  mov al, dl
    19                              <2> %elifidni %1,dh
    19                              <2>  mov al, dh
    19                              <2> %else
    19                              <2>  mov al, %1
    19                              <2> %endif
    19 00000049 83EC02              <2>  sub esp, 2
    19 0000004C 89E7                <2>  mov edi, esp
    19 0000004E 8807                <2>  mov [edi], al
    19                              <2>  _syscall_write 1, edi, 1
    19                              <3>  _syscall_3 4,%1,%2,%3
    19 00000050 52                  <4>  push edx
    19 00000051 51                  <4>  push ecx
    19 00000052 53                  <4>  push ebx
    19 00000053 6A04                <4>  push %1
    19 00000055 6A01                <4>  push %2
    19 00000057 57                  <4>  push %3
    19 00000058 6A01                <4>  push %4
    19 0000005A 5A                  <4>  pop edx
    19 0000005B 59                  <4>  pop ecx
    19 0000005C 5B                  <4>  pop ebx
    19 0000005D 58                  <4>  pop eax
    19 0000005E CD80                <4>  int 0x80
    19 00000060 5B                  <4>  pop ebx
    19 00000061 59                  <4>  pop ecx
    19 00000062 5A                  <4>  pop edx
    19 00000063 83C402              <2>  add esp, 2
    19 00000066 9D                  <2>  popf
    19 00000067 61                  <2>  popa
    19 00000068 F7D8                <1>  neg eax
    19                              <1> %%m5:
    19                              <1>  UNSINT eax
    19 0000006A 60                  <2> pusha
    19 0000006B 9C                  <2> pushf
    19 0000006C 50                  <2> push dword %1
    19 0000006D 58                  <2> pop eax
    19 0000006E 89C7                <2> mov edi,eax
    19 00000070 BE0A000000          <2> mov esi,10
    19 00000075 31DB                <2>  xor ebx,ebx
    19                              <2> %%m1:
    19 00000077 31D2                <2>  xor edx,edx
    19 00000079 F7F6                <2>  div esi
    19 0000007B 43                  <2>  inc ebx
    19 0000007C 83F800              <2>  cmp eax,0
    19 0000007F 75F6                <2>  jne %%m1
    19                              <2> 
    19 00000081 B801000000          <2>  mov eax,1
    19 00000086 89D9                <2>  mov ecx,ebx
    19 00000088 49                  <2>  dec ecx
    19                              <2> 
    19 00000089 83F900              <2>  cmp ecx,0
    19 0000008C 7443                <2>  je %%m4
    19 0000008E F7E6                <2> %%m2: mul esi
    19 00000090 E2FC                <2>  loop %%m2
    19                              <2> 
    19 00000092 89C3                <2>  mov ebx,eax
    19                              <2> 
    19                              <2> %%m3:
    19 00000094 89F8                <2>  mov eax,edi
    19 00000096 31D2                <2>  xor edx,edx
    19 00000098 F7F3                <2>  div ebx
    19 0000009A 0430                <2>  add al,'0'
    19                              <2>  PUTCHAR al
    19 0000009C 60                  <3>  pusha
    19 0000009D 9C                  <3>  pushf
    19                              <3> %ifstr %1
    19                              <3>  mov al, %1
    19                              <3> %elifnum %1
    19                              <3>  mov al, %1
    19                              <3> %elifidni %1,al
    19 0000009E 90                  <3>  nop
    19                              <3> %elifidni %1,ah
    19                              <3>  mov al, ah
    19                              <3> %elifidni %1,bl
    19                              <3>  mov al, bl
    19                              <3> %elifidni %1,bh
    19                              <3>  mov al, bh
    19                              <3> %elifidni %1,cl
    19                              <3>  mov al, cl
    19                              <3> %elifidni %1,ch
    19                              <3>  mov al, ch
    19                              <3> %elifidni %1,dl
    19                              <3>  mov al, dl
    19                              <3> %elifidni %1,dh
    19                              <3>  mov al, dh
    19                              <3> %else
    19                              <3>  mov al, %1
    19                              <3> %endif
    19 0000009F 83EC02              <3>  sub esp, 2
    19 000000A2 89E7                <3>  mov edi, esp
    19 000000A4 8807                <3>  mov [edi], al
    19                              <3>  _syscall_write 1, edi, 1
    19                              <4>  _syscall_3 4,%1,%2,%3
    19 000000A6 52                  <5>  push edx
    19 000000A7 51                  <5>  push ecx
    19 000000A8 53                  <5>  push ebx
    19 000000A9 6A04                <5>  push %1
    19 000000AB 6A01                <5>  push %2
    19 000000AD 57                  <5>  push %3
    19 000000AE 6A01                <5>  push %4
    19 000000B0 5A                  <5>  pop edx
    19 000000B1 59                  <5>  pop ecx
    19 000000B2 5B                  <5>  pop ebx
    19 000000B3 58                  <5>  pop eax
    19 000000B4 CD80                <5>  int 0x80
    19 000000B6 5B                  <5>  pop ebx
    19 000000B7 59                  <5>  pop ecx
    19 000000B8 5A                  <5>  pop edx
    19 000000B9 83C402              <3>  add esp, 2
    19 000000BC 9D                  <3>  popf
    19 000000BD 61                  <3>  popa
    19 000000BE 89D7                <2>  mov edi,edx
    19 000000C0 31D2                <2>  xor edx,edx
    19 000000C2 89D8                <2>  mov eax,ebx
    19 000000C4 F7F6                <2>  div esi
    19 000000C6 83F801              <2>  cmp eax,1
    19 000000C9 7406                <2>  je %%m4
    19 000000CB 89C3                <2>  mov ebx,eax
    19 000000CD EBC5                <2>  jmp %%m3
    19                              <2>  %%m4:
    19 000000CF 89FA                <2>  mov edx,edi
    19 000000D1 80C230              <2>  add dl,'0'
    19                              <2>  PUTCHAR dl
    19 000000D4 60                  <3>  pusha
    19 000000D5 9C                  <3>  pushf
    19                              <3> %ifstr %1
    19                              <3>  mov al, %1
    19                              <3> %elifnum %1
    19                              <3>  mov al, %1
    19                              <3> %elifidni %1,al
    19                              <3>  nop
    19                              <3> %elifidni %1,ah
    19                              <3>  mov al, ah
    19                              <3> %elifidni %1,bl
    19                              <3>  mov al, bl
    19                              <3> %elifidni %1,bh
    19                              <3>  mov al, bh
    19                              <3> %elifidni %1,cl
    19                              <3>  mov al, cl
    19                              <3> %elifidni %1,ch
    19                              <3>  mov al, ch
    19                              <3> %elifidni %1,dl
    19 000000D6 88D0                <3>  mov al, dl
    19                              <3> %elifidni %1,dh
    19                              <3>  mov al, dh
    19                              <3> %else
    19                              <3>  mov al, %1
    19                              <3> %endif
    19 000000D8 83EC02              <3>  sub esp, 2
    19 000000DB 89E7                <3>  mov edi, esp
    19 000000DD 8807                <3>  mov [edi], al
    19                              <3>  _syscall_write 1, edi, 1
    19                              <4>  _syscall_3 4,%1,%2,%3
    19 000000DF 52                  <5>  push edx
    19 000000E0 51                  <5>  push ecx
    19 000000E1 53                  <5>  push ebx
    19 000000E2 6A04                <5>  push %1
    19 000000E4 6A01                <5>  push %2
    19 000000E6 57                  <5>  push %3
    19 000000E7 6A01                <5>  push %4
    19 000000E9 5A                  <5>  pop edx
    19 000000EA 59                  <5>  pop ecx
    19 000000EB 5B                  <5>  pop ebx
    19 000000EC 58                  <5>  pop eax
    19 000000ED CD80                <5>  int 0x80
    19 000000EF 5B                  <5>  pop ebx
    19 000000F0 59                  <5>  pop ecx
    19 000000F1 5A                  <5>  pop edx
    19 000000F2 83C402              <3>  add esp, 2
    19 000000F5 9D                  <3>  popf
    19 000000F6 61                  <3>  popa
    19                              <2> 
    19                              <2> 
    19 000000F7 9D                  <2> popf
    19 000000F8 61                  <2> popa
    19 000000F9 9D                  <1> popf
    19 000000FA 61                  <1> popa
    20                                  PUTCHAR 0xA
    20 000000FB 60                  <1>  pusha
    20 000000FC 9C                  <1>  pushf
    20                              <1> %ifstr %1
    20                              <1>  mov al, %1
    20                              <1> %elifnum %1
    20 000000FD B00A                <1>  mov al, %1
    20                              <1> %elifidni %1,al
    20                              <1>  nop
    20                              <1> %elifidni %1,ah
    20                              <1>  mov al, ah
    20                              <1> %elifidni %1,bl
    20                              <1>  mov al, bl
    20                              <1> %elifidni %1,bh
    20                              <1>  mov al, bh
    20                              <1> %elifidni %1,cl
    20                              <1>  mov al, cl
    20                              <1> %elifidni %1,ch
    20                              <1>  mov al, ch
    20                              <1> %elifidni %1,dl
    20                              <1>  mov al, dl
    20                              <1> %elifidni %1,dh
    20                              <1>  mov al, dh
    20                              <1> %else
    20                              <1>  mov al, %1
    20                              <1> %endif
    20 000000FF 83EC02              <1>  sub esp, 2
    20 00000102 89E7                <1>  mov edi, esp
    20 00000104 8807                <1>  mov [edi], al
    20                              <1>  _syscall_write 1, edi, 1
    20                              <2>  _syscall_3 4,%1,%2,%3
    20 00000106 52                  <3>  push edx
    20 00000107 51                  <3>  push ecx
    20 00000108 53                  <3>  push ebx
    20 00000109 6A04                <3>  push %1
    20 0000010B 6A01                <3>  push %2
    20 0000010D 57                  <3>  push %3
    20 0000010E 6A01                <3>  push %4
    20 00000110 5A                  <3>  pop edx
    20 00000111 59                  <3>  pop ecx
    20 00000112 5B                  <3>  pop ebx
    20 00000113 58                  <3>  pop eax
    20 00000114 CD80                <3>  int 0x80
    20 00000116 5B                  <3>  pop ebx
    20 00000117 59                  <3>  pop ecx
    20 00000118 5A                  <3>  pop edx
    20 00000119 83C402              <1>  add esp, 2
    20 0000011C 9D                  <1>  popf
    20 0000011D 61                  <1>  popa
    21                                  PUTCHAR 0xA
    21 0000011E 60                  <1>  pusha
    21 0000011F 9C                  <1>  pushf
    21                              <1> %ifstr %1
    21                              <1>  mov al, %1
    21                              <1> %elifnum %1
    21 00000120 B00A                <1>  mov al, %1
    21                              <1> %elifidni %1,al
    21                              <1>  nop
    21                              <1> %elifidni %1,ah
    21                              <1>  mov al, ah
    21                              <1> %elifidni %1,bl
    21                              <1>  mov al, bl
    21                              <1> %elifidni %1,bh
    21                              <1>  mov al, bh
    21                              <1> %elifidni %1,cl
    21                              <1>  mov al, cl
    21                              <1> %elifidni %1,ch
    21                              <1>  mov al, ch
    21                              <1> %elifidni %1,dl
    21                              <1>  mov al, dl
    21                              <1> %elifidni %1,dh
    21                              <1>  mov al, dh
    21                              <1> %else
    21                              <1>  mov al, %1
    21                              <1> %endif
    21 00000122 83EC02              <1>  sub esp, 2
    21 00000125 89E7                <1>  mov edi, esp
    21 00000127 8807                <1>  mov [edi], al
    21                              <1>  _syscall_write 1, edi, 1
    21                              <2>  _syscall_3 4,%1,%2,%3
    21 00000129 52                  <3>  push edx
    21 0000012A 51                  <3>  push ecx
    21 0000012B 53                  <3>  push ebx
    21 0000012C 6A04                <3>  push %1
    21 0000012E 6A01                <3>  push %2
    21 00000130 57                  <3>  push %3
    21 00000131 6A01                <3>  push %4
    21 00000133 5A                  <3>  pop edx
    21 00000134 59                  <3>  pop ecx
    21 00000135 5B                  <3>  pop ebx
    21 00000136 58                  <3>  pop eax
    21 00000137 CD80                <3>  int 0x80
    21 00000139 5B                  <3>  pop ebx
    21 0000013A 59                  <3>  pop ecx
    21 0000013B 5A                  <3>  pop edx
    21 0000013C 83C402              <1>  add esp, 2
    21 0000013F 9D                  <1>  popf
    21 00000140 61                  <1>  popa
    22 00000141 8B0D[18000000]          mov ecx, [n]
    23 00000147 BE[00000000]            mov esi, masiv
    24                                  PRINT "массив:"
    24 0000014C 60                  <1>  pusha
    24 0000014D 9C                  <1>  pushf
    24 0000014E EB10                <1>  jmp %%astr
    24 00000150 D0BCD0B0D181D181D0- <1> %%str db %1, 0
    24 00000159 B8D0B23A00          <1>
    24                              <1> %%strln equ $-%%str
    24                              <1> %%astr: _syscall_write 1, %%str, %%strln
    24                              <2> ..@24.astr: 
    24                              <2>  _syscall_3 4,%1,%2,%3
    24 0000015E 52                  <3>  push edx
    24 0000015F 51                  <3>  push ecx
    24 00000160 53                  <3>  push ebx
    24 00000161 6A04                <3>  push %1
    24 00000163 6A01                <3>  push %2
    24 00000165 68[50010000]        <3>  push %3
    24 0000016A 6A0E                <3>  push %4
    24 0000016C 5A                  <3>  pop edx
    24 0000016D 59                  <3>  pop ecx
    24 0000016E 5B                  <3>  pop ebx
    24 0000016F 58                  <3>  pop eax
    24 00000170 CD80                <3>  int 0x80
    24 00000172 5B                  <3>  pop ebx
    24 00000173 59                  <3>  pop ecx
    24 00000174 5A                  <3>  pop edx
    24 00000175 9D                  <1>  popf
    24 00000176 61                  <1>  popa
    25                                  PUTCHAR 0xA
    25 00000177 60                  <1>  pusha
    25 00000178 9C                  <1>  pushf
    25                              <1> %ifstr %1
    25                              <1>  mov al, %1
    25                              <1> %elifnum %1
    25 00000179 B00A                <1>  mov al, %1
    25                              <1> %elifidni %1,al
    25                              <1>  nop
    25                              <1> %elifidni %1,ah
    25                              <1>  mov al, ah
    25                              <1> %elifidni %1,bl
    25                              <1>  mov al, bl
    25                              <1> %elifidni %1,bh
    25                              <1>  mov al, bh
    25                              <1> %elifidni %1,cl
    25                              <1>  mov al, cl
    25                              <1> %elifidni %1,ch
    25                              <1>  mov al, ch
    25                              <1> %elifidni %1,dl
    25                              <1>  mov al, dl
    25                              <1> %elifidni %1,dh
    25                              <1>  mov al, dh
    25                              <1> %else
    25                              <1>  mov al, %1
    25                              <1> %endif
    25 0000017B 83EC02              <1>  sub esp, 2
    25 0000017E 89E7                <1>  mov edi, esp
    25 00000180 8807                <1>  mov [edi], al
    25                              <1>  _syscall_write 1, edi, 1
    25                              <2>  _syscall_3 4,%1,%2,%3
    25 00000182 52                  <3>  push edx
    25 00000183 51                  <3>  push ecx
    25 00000184 53                  <3>  push ebx
    25 00000185 6A04                <3>  push %1
    25 00000187 6A01                <3>  push %2
    25 00000189 57                  <3>  push %3
    25 0000018A 6A01                <3>  push %4
    25 0000018C 5A                  <3>  pop edx
    25 0000018D 59                  <3>  pop ecx
    25 0000018E 5B                  <3>  pop ebx
    25 0000018F 58                  <3>  pop eax
    25 00000190 CD80                <3>  int 0x80
    25 00000192 5B                  <3>  pop ebx
    25 00000193 59                  <3>  pop ecx
    25 00000194 5A                  <3>  pop edx
    25 00000195 83C402              <1>  add esp, 2
    25 00000198 9D                  <1>  popf
    25 00000199 61                  <1>  popa
    26                                  ll:
    27 0000019A AD                      lodsd
    28                                  SIGNINT eax
    28 0000019B 60                  <1> pusha
    28 0000019C 9C                  <1> pushf
    28 0000019D 50                  <1> push dword %1
    28 0000019E 58                  <1> pop eax
    28 0000019F 83F800              <1>  cmp eax,0
    28 000001A2 7D27                <1>  jge %%m5
    28                              <1>  PUTCHAR '-'
    28 000001A4 60                  <2>  pusha
    28 000001A5 9C                  <2>  pushf
    28                              <2> %ifstr %1
    28 000001A6 B02D                <2>  mov al, %1
    28                              <2> %elifnum %1
    28                              <2>  mov al, %1
    28                              <2> %elifidni %1,al
    28                              <2>  nop
    28                              <2> %elifidni %1,ah
    28                              <2>  mov al, ah
    28                              <2> %elifidni %1,bl
    28                              <2>  mov al, bl
    28                              <2> %elifidni %1,bh
    28                              <2>  mov al, bh
    28                              <2> %elifidni %1,cl
    28                              <2>  mov al, cl
    28                              <2> %elifidni %1,ch
    28                              <2>  mov al, ch
    28                              <2> %elifidni %1,dl
    28                              <2>  mov al, dl
    28                              <2> %elifidni %1,dh
    28                              <2>  mov al, dh
    28                              <2> %else
    28                              <2>  mov al, %1
    28                              <2> %endif
    28 000001A8 83EC02              <2>  sub esp, 2
    28 000001AB 89E7                <2>  mov edi, esp
    28 000001AD 8807                <2>  mov [edi], al
    28                              <2>  _syscall_write 1, edi, 1
    28                              <3>  _syscall_3 4,%1,%2,%3
    28 000001AF 52                  <4>  push edx
    28 000001B0 51                  <4>  push ecx
    28 000001B1 53                  <4>  push ebx
    28 000001B2 6A04                <4>  push %1
    28 000001B4 6A01                <4>  push %2
    28 000001B6 57                  <4>  push %3
    28 000001B7 6A01                <4>  push %4
    28 000001B9 5A                  <4>  pop edx
    28 000001BA 59                  <4>  pop ecx
    28 000001BB 5B                  <4>  pop ebx
    28 000001BC 58                  <4>  pop eax
    28 000001BD CD80                <4>  int 0x80
    28 000001BF 5B                  <4>  pop ebx
    28 000001C0 59                  <4>  pop ecx
    28 000001C1 5A                  <4>  pop edx
    28 000001C2 83C402              <2>  add esp, 2
    28 000001C5 9D                  <2>  popf
    28 000001C6 61                  <2>  popa
    28 000001C7 F7D8                <1>  neg eax
    28                              <1> %%m5:
    28                              <1>  UNSINT eax
    28 000001C9 60                  <2> pusha
    28 000001CA 9C                  <2> pushf
    28 000001CB 50                  <2> push dword %1
    28 000001CC 58                  <2> pop eax
    28 000001CD 89C7                <2> mov edi,eax
    28 000001CF BE0A000000          <2> mov esi,10
    28 000001D4 31DB                <2>  xor ebx,ebx
    28                              <2> %%m1:
    28 000001D6 31D2                <2>  xor edx,edx
    28 000001D8 F7F6                <2>  div esi
    28 000001DA 43                  <2>  inc ebx
    28 000001DB 83F800              <2>  cmp eax,0
    28 000001DE 75F6                <2>  jne %%m1
    28                              <2> 
    28 000001E0 B801000000          <2>  mov eax,1
    28 000001E5 89D9                <2>  mov ecx,ebx
    28 000001E7 49                  <2>  dec ecx
    28                              <2> 
    28 000001E8 83F900              <2>  cmp ecx,0
    28 000001EB 7443                <2>  je %%m4
    28 000001ED F7E6                <2> %%m2: mul esi
    28 000001EF E2FC                <2>  loop %%m2
    28                              <2> 
    28 000001F1 89C3                <2>  mov ebx,eax
    28                              <2> 
    28                              <2> %%m3:
    28 000001F3 89F8                <2>  mov eax,edi
    28 000001F5 31D2                <2>  xor edx,edx
    28 000001F7 F7F3                <2>  div ebx
    28 000001F9 0430                <2>  add al,'0'
    28                              <2>  PUTCHAR al
    28 000001FB 60                  <3>  pusha
    28 000001FC 9C                  <3>  pushf
    28                              <3> %ifstr %1
    28                              <3>  mov al, %1
    28                              <3> %elifnum %1
    28                              <3>  mov al, %1
    28                              <3> %elifidni %1,al
    28 000001FD 90                  <3>  nop
    28                              <3> %elifidni %1,ah
    28                              <3>  mov al, ah
    28                              <3> %elifidni %1,bl
    28                              <3>  mov al, bl
    28                              <3> %elifidni %1,bh
    28                              <3>  mov al, bh
    28                              <3> %elifidni %1,cl
    28                              <3>  mov al, cl
    28                              <3> %elifidni %1,ch
    28                              <3>  mov al, ch
    28                              <3> %elifidni %1,dl
    28                              <3>  mov al, dl
    28                              <3> %elifidni %1,dh
    28                              <3>  mov al, dh
    28                              <3> %else
    28                              <3>  mov al, %1
    28                              <3> %endif
    28 000001FE 83EC02              <3>  sub esp, 2
    28 00000201 89E7                <3>  mov edi, esp
    28 00000203 8807                <3>  mov [edi], al
    28                              <3>  _syscall_write 1, edi, 1
    28                              <4>  _syscall_3 4,%1,%2,%3
    28 00000205 52                  <5>  push edx
    28 00000206 51                  <5>  push ecx
    28 00000207 53                  <5>  push ebx
    28 00000208 6A04                <5>  push %1
    28 0000020A 6A01                <5>  push %2
    28 0000020C 57                  <5>  push %3
    28 0000020D 6A01                <5>  push %4
    28 0000020F 5A                  <5>  pop edx
    28 00000210 59                  <5>  pop ecx
    28 00000211 5B                  <5>  pop ebx
    28 00000212 58                  <5>  pop eax
    28 00000213 CD80                <5>  int 0x80
    28 00000215 5B                  <5>  pop ebx
    28 00000216 59                  <5>  pop ecx
    28 00000217 5A                  <5>  pop edx
    28 00000218 83C402              <3>  add esp, 2
    28 0000021B 9D                  <3>  popf
    28 0000021C 61                  <3>  popa
    28 0000021D 89D7                <2>  mov edi,edx
    28 0000021F 31D2                <2>  xor edx,edx
    28 00000221 89D8                <2>  mov eax,ebx
    28 00000223 F7F6                <2>  div esi
    28 00000225 83F801              <2>  cmp eax,1
    28 00000228 7406                <2>  je %%m4
    28 0000022A 89C3                <2>  mov ebx,eax
    28 0000022C EBC5                <2>  jmp %%m3
    28                              <2>  %%m4:
    28 0000022E 89FA                <2>  mov edx,edi
    28 00000230 80C230              <2>  add dl,'0'
    28                              <2>  PUTCHAR dl
    28 00000233 60                  <3>  pusha
    28 00000234 9C                  <3>  pushf
    28                              <3> %ifstr %1
    28                              <3>  mov al, %1
    28                              <3> %elifnum %1
    28                              <3>  mov al, %1
    28                              <3> %elifidni %1,al
    28                              <3>  nop
    28                              <3> %elifidni %1,ah
    28                              <3>  mov al, ah
    28                              <3> %elifidni %1,bl
    28                              <3>  mov al, bl
    28                              <3> %elifidni %1,bh
    28                              <3>  mov al, bh
    28                              <3> %elifidni %1,cl
    28                              <3>  mov al, cl
    28                              <3> %elifidni %1,ch
    28                              <3>  mov al, ch
    28                              <3> %elifidni %1,dl
    28 00000235 88D0                <3>  mov al, dl
    28                              <3> %elifidni %1,dh
    28                              <3>  mov al, dh
    28                              <3> %else
    28                              <3>  mov al, %1
    28                              <3> %endif
    28 00000237 83EC02              <3>  sub esp, 2
    28 0000023A 89E7                <3>  mov edi, esp
    28 0000023C 8807                <3>  mov [edi], al
    28                              <3>  _syscall_write 1, edi, 1
    28                              <4>  _syscall_3 4,%1,%2,%3
    28 0000023E 52                  <5>  push edx
    28 0000023F 51                  <5>  push ecx
    28 00000240 53                  <5>  push ebx
    28 00000241 6A04                <5>  push %1
    28 00000243 6A01                <5>  push %2
    28 00000245 57                  <5>  push %3
    28 00000246 6A01                <5>  push %4
    28 00000248 5A                  <5>  pop edx
    28 00000249 59                  <5>  pop ecx
    28 0000024A 5B                  <5>  pop ebx
    28 0000024B 58                  <5>  pop eax
    28 0000024C CD80                <5>  int 0x80
    28 0000024E 5B                  <5>  pop ebx
    28 0000024F 59                  <5>  pop ecx
    28 00000250 5A                  <5>  pop edx
    28 00000251 83C402              <3>  add esp, 2
    28 00000254 9D                  <3>  popf
    28 00000255 61                  <3>  popa
    28                              <2> 
    28                              <2> 
    28 00000256 9D                  <2> popf
    28 00000257 61                  <2> popa
    28 00000258 9D                  <1> popf
    28 00000259 61                  <1> popa
    29                                  PUTCHAR 0xA
    29 0000025A 60                  <1>  pusha
    29 0000025B 9C                  <1>  pushf
    29                              <1> %ifstr %1
    29                              <1>  mov al, %1
    29                              <1> %elifnum %1
    29 0000025C B00A                <1>  mov al, %1
    29                              <1> %elifidni %1,al
    29                              <1>  nop
    29                              <1> %elifidni %1,ah
    29                              <1>  mov al, ah
    29                              <1> %elifidni %1,bl
    29                              <1>  mov al, bl
    29                              <1> %elifidni %1,bh
    29                              <1>  mov al, bh
    29                              <1> %elifidni %1,cl
    29                              <1>  mov al, cl
    29                              <1> %elifidni %1,ch
    29                              <1>  mov al, ch
    29                              <1> %elifidni %1,dl
    29                              <1>  mov al, dl
    29                              <1> %elifidni %1,dh
    29                              <1>  mov al, dh
    29                              <1> %else
    29                              <1>  mov al, %1
    29                              <1> %endif
    29 0000025E 83EC02              <1>  sub esp, 2
    29 00000261 89E7                <1>  mov edi, esp
    29 00000263 8807                <1>  mov [edi], al
    29                              <1>  _syscall_write 1, edi, 1
    29                              <2>  _syscall_3 4,%1,%2,%3
    29 00000265 52                  <3>  push edx
    29 00000266 51                  <3>  push ecx
    29 00000267 53                  <3>  push ebx
    29 00000268 6A04                <3>  push %1
    29 0000026A 6A01                <3>  push %2
    29 0000026C 57                  <3>  push %3
    29 0000026D 6A01                <3>  push %4
    29 0000026F 5A                  <3>  pop edx
    29 00000270 59                  <3>  pop ecx
    29 00000271 5B                  <3>  pop ebx
    29 00000272 58                  <3>  pop eax
    29 00000273 CD80                <3>  int 0x80
    29 00000275 5B                  <3>  pop ebx
    29 00000276 59                  <3>  pop ecx
    29 00000277 5A                  <3>  pop edx
    29 00000278 83C402              <1>  add esp, 2
    29 0000027B 9D                  <1>  popf
    29 0000027C 61                  <1>  popa
    30                                  
    31 0000027D 49                      dec ecx
    32 0000027E 83F900                  cmp ecx, 0
    33 00000281 0F8513FFFFFF            jne ll
    34                                  
    35                                  PUTCHAR 0xA
    35 00000287 60                  <1>  pusha
    35 00000288 9C                  <1>  pushf
    35                              <1> %ifstr %1
    35                              <1>  mov al, %1
    35                              <1> %elifnum %1
    35 00000289 B00A                <1>  mov al, %1
    35                              <1> %elifidni %1,al
    35                              <1>  nop
    35                              <1> %elifidni %1,ah
    35                              <1>  mov al, ah
    35                              <1> %elifidni %1,bl
    35                              <1>  mov al, bl
    35                              <1> %elifidni %1,bh
    35                              <1>  mov al, bh
    35                              <1> %elifidni %1,cl
    35                              <1>  mov al, cl
    35                              <1> %elifidni %1,ch
    35                              <1>  mov al, ch
    35                              <1> %elifidni %1,dl
    35                              <1>  mov al, dl
    35                              <1> %elifidni %1,dh
    35                              <1>  mov al, dh
    35                              <1> %else
    35                              <1>  mov al, %1
    35                              <1> %endif
    35 0000028B 83EC02              <1>  sub esp, 2
    35 0000028E 89E7                <1>  mov edi, esp
    35 00000290 8807                <1>  mov [edi], al
    35                              <1>  _syscall_write 1, edi, 1
    35                              <2>  _syscall_3 4,%1,%2,%3
    35 00000292 52                  <3>  push edx
    35 00000293 51                  <3>  push ecx
    35 00000294 53                  <3>  push ebx
    35 00000295 6A04                <3>  push %1
    35 00000297 6A01                <3>  push %2
    35 00000299 57                  <3>  push %3
    35 0000029A 6A01                <3>  push %4
    35 0000029C 5A                  <3>  pop edx
    35 0000029D 59                  <3>  pop ecx
    35 0000029E 5B                  <3>  pop ebx
    35 0000029F 58                  <3>  pop eax
    35 000002A0 CD80                <3>  int 0x80
    35 000002A2 5B                  <3>  pop ebx
    35 000002A3 59                  <3>  pop ecx
    35 000002A4 5A                  <3>  pop edx
    35 000002A5 83C402              <1>  add esp, 2
    35 000002A8 9D                  <1>  popf
    35 000002A9 61                  <1>  popa
    36                                  FINISH
    36                              <1>  _syscall_exit %1
    36 000002AA BB00000000          <2>  mov ebx, %1
    36 000002AF B801000000          <2>  mov eax, 1
    36 000002B4 CD80                <2>  int 0x80
    37                                  
    38                                  
    39                                  minimum:
    40 000002B6 89E5                    mov ebp,esp
    41                                  
    42 000002B8 8B4D04                  mov ecx, [ebp+4]
    43 000002BB 8B7D08                  mov edi, [ebp+8]
    44 000002BE 31DB                    xor ebx,ebx
    45 000002C0 8B07                    mov eax, [edi]
    46                                  metka2:
    47 000002C2 FC                      	cld
    48 000002C3 AF                      	scasd 
    49 000002C4 7C0C                    	jl metka 
    50 000002C6 8B47FC                  	mov eax,[edi-4]
    51 000002C9 89C2                    	mov edx, eax
    52 000002CB 89FE                    	mov esi, edi
    53 000002CD 83EB04                  	sub ebx, 4
    54                                  metka:
    55 000002D0 E2F0                    loop metka2
    56 000002D2 895508                  mov [ebp+8], edx
    57 000002D5 89C2                    mov edx, eax
    58 000002D7 89DF                    mov edi, ebx
    59 000002D9 B8BC020000              mov eax, 700
    60 000002DE AB                      stosd 
    61 000002DF C20800                  ret 8
